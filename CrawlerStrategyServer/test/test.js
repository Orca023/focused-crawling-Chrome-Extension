"use strict";


// array.includes(2);
// array.indexOf(2) !== -1;

// Math.round();  // 四捨五入;
// Number(string);  // 强制類型為數字;
// Number.toString();  // 轉換類型為字符串;
// parseInt(string);  // 轉換為最接近的整數;
// parseFloat(string);  // 轉換為轉浮點數;

// arrayObject.join("==");
// stringObject.split("==");
// stringObject.concat(stringX, stringX, ..., stringX);
// array.push();
// delete JSONObject["Key"];

// window.document.getElementById().attributes["id"].nodeValue;
// window.document.getElementById().getAttribute("id");
// window.document.getElementById().removeAttribute("hidden");
// window.document.getElementById().setAttribute("id", "show_label");
// window.document.getElementById().innerText = "";
// window.document.getElementById().innerHTML = "";
// window.document.getElementById().style.display = "block";
// window.document.createElement("label");
// window.document.getElementById().appendChild(label_element);
// window.document.getElementById().removeChild(label_element);
// window.document.getElementById().hasChildNodes();
// window.document.getElementsByName(name)[0];
// element.getElementsByClassName(class_name)[0];
// element.getElementsByTagName("td")[0];
// window.document.evaluate("Xpath_string", window.document, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null).snapshotItem(0)
// element.children[0];
// element.nodeName;



// 1、載入 Node.js 中的模塊;
// const path = require('path'); // 模塊 'path' 是 Node 的模塊，用於操作本地硬盤文件夾和文件路徑，不是 Chrome 的模塊，因此只能在 Electron 中使用，不能再純前端的瀏覽器(Browser) Chrome 中使用;
// const fs = require('fs'); // 模塊 'fs' 是 Node 的模塊，用於讀寫本地硬盤文件，不是 Chrome 的模塊，因此只能在 Electron 中使用，不能再純前端的瀏覽器 Browser Chrome 中使用;;
// const { dialog } = require('electron').remote; // 使用 electron 提供的組件 dialog 調出文件選擇窗口，然後讀取相關的路徑;

// const XLSX = require("xlsx");
// const canvasDatagrid = require("canvas-datagrid");

// const bootstrap = require("bootstrap");

// require("jsdom").env("", function (err, window) {
//     if (err) {
//         console.error(err);
//         return;
//     };

//     const $ = require("jquery")(window);
// });


// 自定義函數，對字符串進行Base64()編解碼操作；解碼：str = new Base64().decode(base64)，編碼：base64 = new Base64().encode(str);
// https://www.npmjs.com/package/js-base64
class Base64 {

    constructor () {
        // private property
        let _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

        // public method for encoding
        this.encode = function (input) {
            let output = "";
            let chr1, chr2, chr3, enc1, enc2, enc3, enc4;
            let i = 0;
            input = this._utf8_encode(input);
            while (i < input.length) {
                chr1 = input.charCodeAt(i++);
                chr2 = input.charCodeAt(i++);
                chr3 = input.charCodeAt(i++);
                enc1 = chr1 >> 2;
                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
                enc4 = chr3 & 63;
                if (isNaN(chr2)) {
                    enc3 = enc4 = 64;
                } else if (isNaN(chr3)) {
                    enc4 = 64;
                };
                output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
            };
            return output;
        };
    
        // public method for decoding
        this.decode = function (input) {
            let output = "";
            let chr1, chr2, chr3;
            let enc1, enc2, enc3, enc4;
            let i = 0;
            input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            while (i < input.length) {
                enc1 = _keyStr.indexOf(input.charAt(i++));
                enc2 = _keyStr.indexOf(input.charAt(i++));
                enc3 = _keyStr.indexOf(input.charAt(i++));
                enc4 = _keyStr.indexOf(input.charAt(i++));
                chr1 = (enc1 << 2) | (enc2 >> 4);
                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                chr3 = ((enc3 & 3) << 6) | enc4;
                output = output + String.fromCharCode(chr1);
                if (enc3 != 64) {
                    output = output + String.fromCharCode(chr2);
                }
                if (enc4 != 64) {
                    output = output + String.fromCharCode(chr3);
                };
            };
            output = this._utf8_decode(output);
            return output;
        };
    };

    // private method for UTF-8 encoding
    _utf8_encode = function (str) {
        str = String(str);
        str = str.replace(/\r\n/g, "\n");
        let utftext = "";
        for (let n = 0; n < str.length; n++) {
            let c = str.charCodeAt(n);
            if (c < 128) {
                utftext += String.fromCharCode(c);
            } else if ((c > 127) && (c < 2048)) {
                utftext += String.fromCharCode((c >> 6) | 192);
                utftext += String.fromCharCode((c & 63) | 128);
            } else {
                utftext += String.fromCharCode((c >> 12) | 224);
                utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                utftext += String.fromCharCode((c & 63) | 128);
            };

        };
        return utftext;
    };

    // private method for UTF-8 decoding
    _utf8_decode = function (utftext) {
        let string = "";
        let i = 0;
        let c = 0;
        let c1 = 0;
        let c2 = 0;
        let c3 = 0;
        while (i < utftext.length) {
            c = utftext.charCodeAt(i);
            if (c < 128) {
                string += String.fromCharCode(c);
                i++;
            } else if ((c > 191) && (c < 224)) {
                c2 = utftext.charCodeAt(i + 1);
                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
                i += 2;
            } else {
                c2 = utftext.charCodeAt(i + 1);
                c3 = utftext.charCodeAt(i + 2);
                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                i += 3;
            };
        };
        return string;
    };
};
// let base64 = new Base64();

// 自定義封裝的函數isStringJSON(str)判斷一個字符串是否爲 JSON 格式的字符串;
function isStringJSON(str) {
    // 首先判斷傳入參數 str 是否為一個字符串 typeof (str) === 'string'，如果不是字符串直接返回錯誤;
    if (Object.prototype.toString.call(str).toLowerCase() === '[object string]') {
        try {
            let Obj = JSON.parse(str);
            // 使用語句 if (typeof (Obj) === 'object' && Object.prototype.toString.call(Obj).toLowerCase() === '[object object]' && !(Obj.length)) 判斷 Obj 是否為一個 JSON 對象;
            if (typeof (Obj) === 'object' && Object.prototype.toString.call(Obj).toLowerCase() === '[object object]' && !(Obj.length)) {
                return true;
            } else {
                return false;
            };
        } catch (error) {
            // console.log(error);
            return false;
        } finally {
            // ;
        };
    } else {
        // console.log("It is not a String!");
        return false;
    };
};


// window.onload = function() {};
window.onDOMContentLoaded = function() {
    Add_Append_Child_Div(
        {
            "windowHandle_1": window,
            "windowHandle_2": window,
            "FunctionOpenWebPageContainDataCodeString": OpenWebPageContainData.tostring(),
            "ContainDataWebPageURL": ContainDataWebPageURL,
            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // "testContainDataWebPage";
            "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName,  // "ResultExhibitsWebPage";
            "FunctionQueryKeyWordCodeString": QueryKeyWord.tostring(),
            "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,
            "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,
            "FunctionExtractPageNumberCodeString": ExtractPageNumber.tostring(),
            "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,
            "RetrievalResult_XPath_1": RetrievalResult_XPath_1,
            "FunctionObtainRetrievalResultCodeString": ObtainRetrievalResult.tostring(),
            "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,
            "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,
            "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,
            "FunctionDisplayDataCodeString": DisplayData.tostring(),
            "FunctionSkipPageCodeString": SkipPage.tostring(),
            "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,
            "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,
            "FunctionNextPageCodeString": NextPage.tostring(),
            "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,
            "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,
            "FunctionStartORStopCollectDataCodeString": StartORStopCollectData.tostring(),
            /* "DelayAfterClickFirstLevelWebSkipPageButton": DelayAfterClickFirstLevelWebSkipPageButton, */
            /* "DelayAfterClickFirstLevelWebNextPageButton": DelayAfterClickFirstLevelWebNextPageButton, */
            /* "DelayAfterClickEntrySecondLevelWebButton": DelayAfterClickEntrySecondLevelWebButton, */
            /* "DelayAfterClickReturnFirstLevelWebButton": DelayAfterClickReturnFirstLevelWebButton, */
            /* "IntervalOfCircleClickNextPageButton": IntervalOfCircleClickNextPageButton, */
            "FunctionCollectResultFromMemoryToHardDiskCodeString": CollectResultFromMemoryToHardDisk.tostring(),
            "FunctionStoredCollectResultFromHardDiskToMemoryCodeString": StoredCollectResultFromHardDiskToMemory.tostring(),
            "FunctionNewOpenWebPageCodeString": NewOpenWebPage.tostring(),
            "FunctionNewDivOuterHTMLExhibitsCodeString": NewDivOuterHTMLExhibits.tostring(),
            "ForSubpageCallFunctionCodeString": UNDisableNewOpenWebPageButton.tostring(),
            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,
            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton
        }
    );
};
// window.setTimeout(Add_Append_Child_Div(),3000);

function Add_Append_Child_Div ({}) {

    // 使用示例;
    // AddAppendChildDiv({
    //     "windowHandle_1": windowHandle_1,
    //     "windowHandle_2": windowHandle_2,
    //     "FunctionOpenWebPageContainDataCodeString": FunctionOpenWebPageContainDataCodeString,
    //     "ContainDataWebPageURL": ContainDataWebPageURL,
    //     "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // "testContainDataWebPage";
    //     "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName,  // "ResultExhibitsWebPage";
    //     "FunctionQueryKeyWordCodeString": FunctionQueryKeyWordCodeString,
    //     "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,
    //     "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,
    //     "FunctionExtractPageNumberCodeString": FunctionExtractPageNumberCodeString,
    //     "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,
    //     "RetrievalResult_XPath_1": RetrievalResult_XPath_1,
    //     "FunctionObtainRetrievalResultCodeString": FunctionObtainRetrievalResultCodeString,
    //     "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,
    //     "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,
    //     "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,
    //     "FunctionDisplayDataCodeString": FunctionDisplayDataCodeString,
    //     "FunctionSkipPageCodeString": FunctionSkipPageCodeString,
    //     "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,
    //     "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,
    //     "FunctionNextPageCodeString": FunctionNextPageCodeString,
    //     "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,
    //     "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,
    //     "FunctionStartORStopCollectDataCodeString": FunctionStartORStopCollectDataCodeString,
    //     /* "DelayAfterClickFirstLevelWebSkipPageButton": DelayAfterClickFirstLevelWebSkipPageButton, */
    //     /* "DelayAfterClickFirstLevelWebNextPageButton": DelayAfterClickFirstLevelWebNextPageButton, */
    //     /* "DelayAfterClickEntrySecondLevelWebButton": DelayAfterClickEntrySecondLevelWebButton, */
    //     /* "DelayAfterClickReturnFirstLevelWebButton": DelayAfterClickReturnFirstLevelWebButton, */
    //     /* "IntervalOfCircleClickNextPageButton": IntervalOfCircleClickNextPageButton, */
    //     "FunctionCollectResultFromMemoryToHardDiskCodeString": FunctionCollectResultFromMemoryToHardDiskCodeString,
    //     "FunctionStoredCollectResultFromHardDiskToMemoryCodeString": FunctionStoredCollectResultFromHardDiskToMemoryCodeString,
    //     "FunctionNewOpenWebPageCodeString": FunctionNewOpenWebPageCodeString,
    //     "FunctionNewDivOuterHTMLExhibitsCodeString": NewDivOuterHTMLExhibits.tostring(),
    //     "ForSubpageCallFunctionCodeString": ForSubpageCallFunctionCodeString,
    //     "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,
    //     "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton
    // });

    // 配置可變參數的預設值;
    // 數據源網頁的網址;
    let ContainDataWebPageURL = "http://127.0.0.1:8000/ajax.html";
    let Open_Contain_Data_Web_Page_Name = "testContainDataWebPage";  // 用於加載數據源網頁的新建窗口變量，自定義的窗口命名;
    // 網頁中關鍵詞輸入框元素的 XPath 值;
    let WebKeyWordTextboxElement_XPath = "/html/body/div/centre/input[1]";
    // 網頁中關鍵詞查詢按鈕元素的 XPath 值;
    let WebKeyWordQuerySubmitButtonElement_XPath = "/html/body/div/centre/button[1]";
    // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
    let TableWebPageNumberTdElement_XPath_1 = "/html/body/div/centre/label";
    // 當前網頁中可采集數據元素的 XPath 值;
    let RetrievalResult_XPath_1 = "/html/body/div/centre/div/table";
    // 第二層網頁中需要抓取的數據的條目數目;
    let NumberOfItemInThisSecondLevelWebPage = parseInt(27);
    // 第二層網頁中需要抓取的數據元素的 XPath 值;
    let SecondLevelWebPageRetrievalResult_XPath = "/html/body/div/centre/div/table";
    // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
    let EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1 = "/html/body/div/centre/div/table";
    // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
    let FromSecondLevelWebReturnFirstLevelWeb_XPath = "/html/body/div/centre/button[5]";
    // 目標網頁中的跳頁頁碼輸入文本框 xpath ;
    let TableSkipPageTextboxTdElement_XPath_1 = "/html/body/div/centre/input[2]";
    // 目標網頁中的跳頁按鈕 xpath ;
    let TableSkipPageSubmitButtonTdElement_XPath_1 = "/html/body/div/centre/button[4]";
    // 目標網頁中的下一頁按鈕 xpath ;
    let TableNextPageSubmitButtonImgTdElement_XPath_1 = "/html/body/div/centre/button[3]";
    // 目標網頁中的上一頁按鈕的 xpath 值;
    let TableBackPageSubmitButtonImgTdElement_XPath_1 = "/html/body/div/centre/button[2]";

    let DelayAfterClickFirstLevelWebSkipPageButton = parseInt(0);
    let DelayAfterClickFirstLevelWebNextPageButton = parseInt(0);
    let DelayAfterClickEntrySecondLevelWebButton = parseInt(0);
    let DelayAfterClickReturnFirstLevelWebButton = parseInt(0);
    let IntervalOfCircleClickNextPageButton = parseInt(0);

    let OpenResultExhibitsWebPageName = "ResultExhibitsWebPage";  // 用於呈現采集結果的的新建窗口變量，自定義的窗口命名;

    let FunctionNewDivOuterHTMLExhibitsCodeString = "";
    let FunctionDisplayDataCodeString = "";  // DisplayData.toString();
    let FunctionOpenWebPageContainDataCodeString = "";  // OpenWebPageContainData.toString();
    let FunctionQueryKeyWordCodeString = "";  // QueryKeyWord.toString();
    let FunctionExtractPageNumberCodeString = "";  // ExtractPageNumber.toString();
    let FunctionObtainRetrievalResultCodeString = "";  // ObtainRetrievalResult.toString();
    let FunctionSkipPageCodeString = "";  // SkipPage.toString();
    let FunctionNextPageCodeString = "";  // NextPage.toString();
    let FunctionStartORStopCollectDataCodeString = "";  // StartORStopCollectData.toString();
    let FunctionCollectResultFromMemoryToHardDiskCodeString = "";  // CollectResultFromMemoryToHardDisk.toString();
    let FunctionStoredCollectResultFromHardDiskToMemoryCodeString = "";  // StoredCollectResultFromHardDiskToMemory.toString();
    let FunctionNewOpenWebPageCodeString = "";  // NewOpenWebPage.toString();
    let ForSubpageCallFunctionCodeString = "";  // UNDisableNewOpenWebPageButton.toString();

    /* 以下為新增的 Web 標籤頁 NewOpenWebPage 中所包含的 JavaScript 函數代碼; */
    // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
    let TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = ''; 
    // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
    let TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = ''

    let windowHandle_1 = window;
    let windowHandle_2 = window;


    // 可變參數傳值;
    // for (let i = 0; i < arguments.length; i++) {
    //     console.log(arguments[i]);
    // };
    let argument_1 = arguments[0];

    // 配置鏈接主機域名 Host domain name "localhost"; "0.0.0.0"; "127.0.0.1";
    if (typeof (argument_1) !== undefined && argument_1 !== undefined) {
        if (typeof (argument_1) === 'object' && Object.prototype.toString.call(argument_1).toLowerCase() === '[object object]' && !(argument_1.length)) {

            if (typeof (argument_1["windowHandle_1"]) !== undefined && argument_1["windowHandle_1"] !== undefined && argument_1["windowHandle_1"] !== null && argument_1["windowHandle_1"] !== NaN && argument_1["windowHandle_1"] !== "") {
                windowHandle_1 = argument_1["windowHandle_1"];
            };

            if (typeof (argument_1["windowHandle_2"]) !== undefined && argument_1["windowHandle_2"] !== undefined && argument_1["windowHandle_2"] !== null && argument_1["windowHandle_2"] !== NaN && argument_1["windowHandle_2"] !== "") {
                windowHandle_2 = argument_1["windowHandle_2"];
            };

            if (typeof (argument_1["FunctionNewDivOuterHTMLExhibitsCodeString"]) !== undefined && argument_1["FunctionNewDivOuterHTMLExhibitsCodeString"] !== undefined && argument_1["FunctionNewDivOuterHTMLExhibitsCodeString"] !== null && argument_1["FunctionNewDivOuterHTMLExhibitsCodeString"] !== NaN && argument_1["FunctionNewDivOuterHTMLExhibitsCodeString"] !== "") {
                FunctionNewDivOuterHTMLExhibitsCodeString = String(argument_1["FunctionNewDivOuterHTMLExhibitsCodeString"]);  // typeof (Host) === "String";
            };

            if (typeof (argument_1["FunctionOpenWebPageContainDataCodeString"]) !== undefined && argument_1["FunctionOpenWebPageContainDataCodeString"] !== undefined && argument_1["FunctionOpenWebPageContainDataCodeString"] !== null && argument_1["FunctionOpenWebPageContainDataCodeString"] !== NaN && argument_1["FunctionOpenWebPageContainDataCodeString"] !== "") {
                FunctionOpenWebPageContainDataCodeString = String(argument_1["FunctionOpenWebPageContainDataCodeString"]);  // typeof (Host) === "String";
            };

            if (typeof (argument_1["ContainDataWebPageURL"]) !== undefined && argument_1["ContainDataWebPageURL"] !== undefined && argument_1["ContainDataWebPageURL"] !== null && argument_1["ContainDataWebPageURL"] !== NaN && argument_1["ContainDataWebPageURL"] !== "") {
                ContainDataWebPageURL = String(argument_1["ContainDataWebPageURL"]);
            };

            if (typeof (argument_1["Open_Contain_Data_Web_Page_Name"]) !== undefined && argument_1["Open_Contain_Data_Web_Page_Name"] !== undefined && argument_1["Open_Contain_Data_Web_Page_Name"] !== null && argument_1["Open_Contain_Data_Web_Page_Name"] !== NaN && argument_1["Open_Contain_Data_Web_Page_Name"] !== "") {
                Open_Contain_Data_Web_Page_Name = String(argument_1["Open_Contain_Data_Web_Page_Name"]);
            };

            if (typeof (argument_1["OpenResultExhibitsWebPageName"]) !== undefined && argument_1["OpenResultExhibitsWebPageName"] !== undefined && argument_1["OpenResultExhibitsWebPageName"] !== null && argument_1["OpenResultExhibitsWebPageName"] !== NaN && argument_1["OpenResultExhibitsWebPageName"] !== "") {
                OpenResultExhibitsWebPageName = String(argument_1["OpenResultExhibitsWebPageName"]);
            };

            if (typeof (argument_1["FunctionQueryKeyWordCodeString"]) !== undefined && argument_1["FunctionQueryKeyWordCodeString"] !== undefined && argument_1["FunctionQueryKeyWordCodeString"] !== null && argument_1["FunctionQueryKeyWordCodeString"] !== NaN && argument_1["FunctionQueryKeyWordCodeString"] !== "") {
                FunctionQueryKeyWordCodeString = String(argument_1["FunctionQueryKeyWordCodeString"]);  // typeof (Host) === "String";
            };

            if (typeof (argument_1["WebKeyWordTextboxElement_XPath"]) !== undefined && argument_1["WebKeyWordTextboxElement_XPath"] !== undefined && argument_1["WebKeyWordTextboxElement_XPath"] !== null && argument_1["WebKeyWordTextboxElement_XPath"] !== NaN && argument_1["WebKeyWordTextboxElement_XPath"] !== "") {
                WebKeyWordTextboxElement_XPath = String(argument_1["WebKeyWordTextboxElement_XPath"]);
            };

            if (typeof (argument_1["WebKeyWordQuerySubmitButtonElement_XPath"]) !== undefined && argument_1["WebKeyWordQuerySubmitButtonElement_XPath"] !== undefined && argument_1["WebKeyWordQuerySubmitButtonElement_XPath"] !== null && argument_1["WebKeyWordQuerySubmitButtonElement_XPath"] !== NaN && argument_1["WebKeyWordQuerySubmitButtonElement_XPath"] !== "") {
                WebKeyWordQuerySubmitButtonElement_XPath = String(argument_1["WebKeyWordQuerySubmitButtonElement_XPath"]);
            };

            if (typeof (argument_1["FunctionExtractPageNumberCodeString"]) !== undefined && argument_1["FunctionExtractPageNumberCodeString"] !== undefined && argument_1["FunctionExtractPageNumberCodeString"] !== null && argument_1["FunctionExtractPageNumberCodeString"] !== NaN && argument_1["FunctionExtractPageNumberCodeString"] !== "") {
                FunctionExtractPageNumberCodeString = String(argument_1["FunctionExtractPageNumberCodeString"]);
            };

            if (typeof (argument_1["TableWebPageNumberTdElement_XPath_1"]) !== undefined && argument_1["TableWebPageNumberTdElement_XPath_1"] !== undefined && argument_1["TableWebPageNumberTdElement_XPath_1"] !== null && argument_1["TableWebPageNumberTdElement_XPath_1"] !== NaN && argument_1["TableWebPageNumberTdElement_XPath_1"] !== "") {
                TableWebPageNumberTdElement_XPath_1 = String(argument_1["TableWebPageNumberTdElement_XPath_1"]);
            };

            // if (typeof (argument_1["TableWebPageNumberTdElement_XPath_2"]) !== undefined && argument_1["TableWebPageNumberTdElement_XPath_2"] !== undefined && argument_1["TableWebPageNumberTdElement_XPath_2"] !== null && argument_1["TableWebPageNumberTdElement_XPath_2"] !== NaN && argument_1["TableWebPageNumberTdElement_XPath_2"] !== "") {
            //     TableWebPageNumberTdElement_XPath_2 = String(argument_1["TableWebPageNumberTdElement_XPath_2"]);
            // };

            if (typeof (argument_1["RetrievalResult_XPath_1"]) !== undefined && argument_1["RetrievalResult_XPath_1"] !== undefined && argument_1["RetrievalResult_XPath_1"] !== null && argument_1["RetrievalResult_XPath_1"] !== NaN && argument_1["RetrievalResult_XPath_1"] !== "") {
                RetrievalResult_XPath_1 = String(argument_1["RetrievalResult_XPath_1"]);
            };

            // if (typeof (argument_1["RetrievalResult_XPath_2"]) !== undefined && argument_1["RetrievalResult_XPath_2"] !== undefined && argument_1["RetrievalResult_XPath_2"] !== null && argument_1["RetrievalResult_XPath_2"] !== NaN && argument_1["RetrievalResult_XPath_2"] !== "") {
            //     RetrievalResult_XPath_2 = String(argument_1["RetrievalResult_XPath_2"]);
            // };

            if (typeof (argument_1["FunctionObtainRetrievalResultCodeString"]) !== undefined && argument_1["FunctionObtainRetrievalResultCodeString"] !== undefined && argument_1["FunctionObtainRetrievalResultCodeString"] !== null && argument_1["FunctionObtainRetrievalResultCodeString"] !== NaN && argument_1["FunctionObtainRetrievalResultCodeString"] !== "") {
                FunctionObtainRetrievalResultCodeString = String(argument_1["FunctionObtainRetrievalResultCodeString"]);
            };

            if (typeof (argument_1["NumberOfItemInThisSecondLevelWebPage"]) !== undefined && argument_1["NumberOfItemInThisSecondLevelWebPage"] !== undefined && argument_1["NumberOfItemInThisSecondLevelWebPage"] !== null && argument_1["NumberOfItemInThisSecondLevelWebPage"] !== NaN && argument_1["NumberOfItemInThisSecondLevelWebPage"] !== "") {
                NumberOfItemInThisSecondLevelWebPage = parseInt(argument_1["NumberOfItemInThisSecondLevelWebPage"]);  // typeof (Port) === "Number";
            };

            if (typeof (argument_1["SecondLevelWebPageRetrievalResult_XPath"]) !== undefined && argument_1["SecondLevelWebPageRetrievalResult_XPath"] !== undefined && argument_1["SecondLevelWebPageRetrievalResult_XPath"] !== null && argument_1["SecondLevelWebPageRetrievalResult_XPath"] !== NaN && argument_1["SecondLevelWebPageRetrievalResult_XPath"] !== "") {
                SecondLevelWebPageRetrievalResult_XPath = String(argument_1["SecondLevelWebPageRetrievalResult_XPath"]);
            };

            if (typeof (argument_1["EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1"]) !== undefined && argument_1["EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1"] !== undefined && argument_1["EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1"] !== null && argument_1["EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1"] !== NaN && argument_1["EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1"] !== "") {
                EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1 = String(argument_1["EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1"]);
            };

            // if (typeof (argument_1["EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_2"]) !== undefined && argument_1["EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_2"] !== undefined && argument_1["EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_2"] !== null && argument_1["EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_2"] !== NaN && argument_1["EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_2"] !== "") {
            //     EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_2 = String(argument_1["EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_2"]);
            // };

            if (typeof (argument_1["FromSecondLevelWebReturnFirstLevelWeb_XPath"]) !== undefined && argument_1["FromSecondLevelWebReturnFirstLevelWeb_XPath"] !== undefined && argument_1["FromSecondLevelWebReturnFirstLevelWeb_XPath"] !== null && argument_1["FromSecondLevelWebReturnFirstLevelWeb_XPath"] !== NaN && argument_1["FromSecondLevelWebReturnFirstLevelWeb_XPath"] !== "") {
                FromSecondLevelWebReturnFirstLevelWeb_XPath = String(argument_1["FromSecondLevelWebReturnFirstLevelWeb_XPath"]);
            };

            if (typeof (argument_1["FunctionDisplayDataCodeString"]) !== undefined && argument_1["FunctionDisplayDataCodeString"] !== undefined && argument_1["FunctionDisplayDataCodeString"] !== null && argument_1["FunctionDisplayDataCodeString"] !== NaN && argument_1["FunctionDisplayDataCodeString"] !== "") {
                FunctionDisplayDataCodeString = String(argument_1["FunctionDisplayDataCodeString"]);
            };

            if (typeof (argument_1["FunctionSkipPageCodeString"]) !== undefined && argument_1["FunctionSkipPageCodeString"] !== undefined && argument_1["FunctionSkipPageCodeString"] !== null && argument_1["FunctionSkipPageCodeString"] !== NaN && argument_1["FunctionSkipPageCodeString"] !== "") {
                FunctionSkipPageCodeString = String(argument_1["FunctionSkipPageCodeString"]);
            };

            if (typeof (argument_1["TableSkipPageTextboxTdElement_XPath_1"]) !== undefined && argument_1["TableSkipPageTextboxTdElement_XPath_1"] !== undefined && argument_1["TableSkipPageTextboxTdElement_XPath_1"] !== null && argument_1["TableSkipPageTextboxTdElement_XPath_1"] !== NaN && argument_1["TableSkipPageTextboxTdElement_XPath_1"] !== "") {
                TableSkipPageTextboxTdElement_XPath_1 = String(argument_1["TableSkipPageTextboxTdElement_XPath_1"]);
            };

            // if (typeof (argument_1["TableSkipPageTextboxTdElement_XPath_2"]) !== undefined && argument_1["TableSkipPageTextboxTdElement_XPath_2"] !== undefined && argument_1["TableSkipPageTextboxTdElement_XPath_2"] !== null && argument_1["TableSkipPageTextboxTdElement_XPath_2"] !== NaN && argument_1["TableSkipPageTextboxTdElement_XPath_2"] !== "") {
            //     TableSkipPageTextboxTdElement_XPath_2 = String(argument_1["TableSkipPageTextboxTdElement_XPath_2"]);
            // };

            // if (typeof (argument_1["TableSkipPageTextboxTdElement_XPath_3"]) !== undefined && argument_1["TableSkipPageTextboxTdElement_XPath_3"] !== undefined && argument_1["TableSkipPageTextboxTdElement_XPath_3"] !== null && argument_1["TableSkipPageTextboxTdElement_XPath_3"] !== NaN && argument_1["TableSkipPageTextboxTdElement_XPath_3"] !== "") {
            //     TableSkipPageTextboxTdElement_XPath_3 = String(argument_1["TableSkipPageTextboxTdElement_XPath_3"]);
            // };

            if (typeof (argument_1["TableSkipPageSubmitButtonTdElement_XPath_1"]) !== undefined && argument_1["TableSkipPageSubmitButtonTdElement_XPath_1"] !== undefined && argument_1["TableSkipPageSubmitButtonTdElement_XPath_1"] !== null && argument_1["TableSkipPageSubmitButtonTdElement_XPath_1"] !== NaN && argument_1["TableSkipPageSubmitButtonTdElement_XPath_1"] !== "") {
                TableSkipPageSubmitButtonTdElement_XPath_1 = String(argument_1["TableSkipPageSubmitButtonTdElement_XPath_1"]);
            };

            // if (typeof (argument_1["TableSkipPageSubmitButtonTdElement_XPath_2"]) !== undefined && argument_1["TableSkipPageSubmitButtonTdElement_XPath_2"] !== undefined && argument_1["TableSkipPageSubmitButtonTdElement_XPath_2"] !== null && argument_1["TableSkipPageSubmitButtonTdElement_XPath_2"] !== NaN && argument_1["TableSkipPageSubmitButtonTdElement_XPath_2"] !== "") {
            //     TableSkipPageSubmitButtonTdElement_XPath_2 = String(argument_1["TableSkipPageSubmitButtonTdElement_XPath_2"]);
            // };

            // if (typeof (argument_1["TableSkipPageSubmitButtonTdElement_XPath_3"]) !== undefined && argument_1["TableSkipPageSubmitButtonTdElement_XPath_3"] !== undefined && argument_1["TableSkipPageSubmitButtonTdElement_XPath_3"] !== null && argument_1["TableSkipPageSubmitButtonTdElement_XPath_3"] !== NaN && argument_1["TableSkipPageSubmitButtonTdElement_XPath_3"] !== "") {
            //     TableSkipPageSubmitButtonTdElement_XPath_3 = String(argument_1["TableSkipPageSubmitButtonTdElement_XPath_3"]);
            // };

            if (typeof (argument_1["FunctionNextPageCodeString"]) !== undefined && argument_1["FunctionNextPageCodeString"] !== undefined && argument_1["FunctionNextPageCodeString"] !== null && argument_1["FunctionNextPageCodeString"] !== NaN && argument_1["FunctionNextPageCodeString"] !== "") {
                FunctionNextPageCodeString = String(argument_1["FunctionNextPageCodeString"]);
            };

            if (typeof (argument_1["TableNextPageSubmitButtonImgTdElement_XPath_1"]) !== undefined && argument_1["TableNextPageSubmitButtonImgTdElement_XPath_1"] !== undefined && argument_1["TableNextPageSubmitButtonImgTdElement_XPath_1"] !== null && argument_1["TableNextPageSubmitButtonImgTdElement_XPath_1"] !== NaN && argument_1["TableNextPageSubmitButtonImgTdElement_XPath_1"] !== "") {
                TableNextPageSubmitButtonImgTdElement_XPath_1 = String(argument_1["TableNextPageSubmitButtonImgTdElement_XPath_1"]);
            };

            // if (typeof (argument_1["TableNextPageSubmitButtonImgTdElement_XPath_2"]) !== undefined && argument_1["TableNextPageSubmitButtonImgTdElement_XPath_2"] !== undefined && argument_1["TableNextPageSubmitButtonImgTdElement_XPath_2"] !== null && argument_1["TableNextPageSubmitButtonImgTdElement_XPath_2"] !== NaN && argument_1["TableNextPageSubmitButtonImgTdElement_XPath_2"] !== "") {
            //     TableNextPageSubmitButtonImgTdElement_XPath_2 = String(argument_1["TableNextPageSubmitButtonImgTdElement_XPath_2"]);
            // };

            // if (typeof (argument_1["TableNextPageSubmitButtonImgTdElement_XPath_3"]) !== undefined && argument_1["TableNextPageSubmitButtonImgTdElement_XPath_3"] !== undefined && argument_1["TableNextPageSubmitButtonImgTdElement_XPath_3"] !== null && argument_1["TableNextPageSubmitButtonImgTdElement_XPath_3"] !== NaN && argument_1["TableNextPageSubmitButtonImgTdElement_XPath_3"] !== "") {
            //     TableNextPageSubmitButtonImgTdElement_XPath_3 = String(argument_1["TableNextPageSubmitButtonImgTdElement_XPath_3"]);
            // };

            if (typeof (argument_1["FunctionStartORStopCollectDataCodeString"]) !== undefined && argument_1["FunctionStartORStopCollectDataCodeString"] !== undefined && argument_1["FunctionStartORStopCollectDataCodeString"] !== null && argument_1["FunctionStartORStopCollectDataCodeString"] !== NaN && argument_1["FunctionStartORStopCollectDataCodeString"] !== "") {
                FunctionStartORStopCollectDataCodeString = String(argument_1["FunctionStartORStopCollectDataCodeString"]);
            };

            if (typeof (argument_1["DelayAfterClickFirstLevelWebSkipPageButton"]) !== undefined && argument_1["DelayAfterClickFirstLevelWebSkipPageButton"] !== undefined && argument_1["DelayAfterClickFirstLevelWebSkipPageButton"] !== null && argument_1["DelayAfterClickFirstLevelWebSkipPageButton"] !== NaN && argument_1["DelayAfterClickFirstLevelWebSkipPageButton"] !== "") {
                DelayAfterClickFirstLevelWebSkipPageButton = parseInt(argument_1["DelayAfterClickFirstLevelWebSkipPageButton"]);  // typeof (Port) === "Number";
            };

            if (typeof (argument_1["DelayAfterClickFirstLevelWebNextPageButton"]) !== undefined && argument_1["DelayAfterClickFirstLevelWebNextPageButton"] !== undefined && argument_1["DelayAfterClickFirstLevelWebNextPageButton"] !== null && argument_1["DelayAfterClickFirstLevelWebNextPageButton"] !== NaN && argument_1["DelayAfterClickFirstLevelWebNextPageButton"] !== "") {
                DelayAfterClickFirstLevelWebNextPageButton = parseInt(argument_1["DelayAfterClickFirstLevelWebNextPageButton"]);
            };

            if (typeof (argument_1["DelayAfterClickEntrySecondLevelWebButton"]) !== undefined && argument_1["DelayAfterClickEntrySecondLevelWebButton"] !== undefined && argument_1["DelayAfterClickEntrySecondLevelWebButton"] !== null && argument_1["DelayAfterClickEntrySecondLevelWebButton"] !== NaN && argument_1["DelayAfterClickEntrySecondLevelWebButton"] !== "") {
                DelayAfterClickEntrySecondLevelWebButton = parseInt(argument_1["DelayAfterClickEntrySecondLevelWebButton"]);
            };

            if (typeof (argument_1["DelayAfterClickReturnFirstLevelWebButton"]) !== undefined && argument_1["DelayAfterClickReturnFirstLevelWebButton"] !== undefined && argument_1["DelayAfterClickReturnFirstLevelWebButton"] !== null && argument_1["DelayAfterClickReturnFirstLevelWebButton"] !== NaN && argument_1["DelayAfterClickReturnFirstLevelWebButton"] !== "") {
                DelayAfterClickReturnFirstLevelWebButton = parseInt(argument_1["DelayAfterClickReturnFirstLevelWebButton"]);
            };

            if (typeof (argument_1["IntervalOfCircleClickNextPageButton"]) !== undefined && argument_1["IntervalOfCircleClickNextPageButton"] !== undefined && argument_1["IntervalOfCircleClickNextPageButton"] !== null && argument_1["IntervalOfCircleClickNextPageButton"] !== NaN && argument_1["IntervalOfCircleClickNextPageButton"] !== "") {
                IntervalOfCircleClickNextPageButton = parseInt(argument_1["IntervalOfCircleClickNextPageButton"]);
            };

            if (typeof (argument_1["FunctionCollectResultFromMemoryToHardDiskCodeString"]) !== undefined && argument_1["FunctionCollectResultFromMemoryToHardDiskCodeString"] !== undefined && argument_1["FunctionCollectResultFromMemoryToHardDiskCodeString"] !== null && argument_1["FunctionCollectResultFromMemoryToHardDiskCodeString"] !== NaN && argument_1["FunctionCollectResultFromMemoryToHardDiskCodeString"] !== "") {
                FunctionCollectResultFromMemoryToHardDiskCodeString = String(argument_1["FunctionCollectResultFromMemoryToHardDiskCodeString"]);
            };

            if (typeof (argument_1["FunctionStoredCollectResultFromHardDiskToMemoryCodeString"]) !== undefined && argument_1["FunctionStoredCollectResultFromHardDiskToMemoryCodeString"] !== undefined && argument_1["FunctionStoredCollectResultFromHardDiskToMemoryCodeString"] !== null && argument_1["FunctionStoredCollectResultFromHardDiskToMemoryCodeString"] !== NaN && argument_1["FunctionStoredCollectResultFromHardDiskToMemoryCodeString"] !== "") {
                FunctionStoredCollectResultFromHardDiskToMemoryCodeString = String(argument_1["FunctionStoredCollectResultFromHardDiskToMemoryCodeString"]);
            };

            if (typeof (argument_1["FunctionNewOpenWebPageCodeString"]) !== undefined && argument_1["FunctionNewOpenWebPageCodeString"] !== undefined && argument_1["FunctionNewOpenWebPageCodeString"] !== null && argument_1["FunctionNewOpenWebPageCodeString"] !== NaN && argument_1["FunctionNewOpenWebPageCodeString"] !== "") {
                FunctionNewOpenWebPageCodeString = String(argument_1["FunctionNewOpenWebPageCodeString"]);
            };

            if (typeof (argument_1["ForSubpageCallFunctionCodeString"]) !== undefined && argument_1["ForSubpageCallFunctionCodeString"] !== undefined && argument_1["ForSubpageCallFunctionCodeString"] !== null && argument_1["ForSubpageCallFunctionCodeString"] !== NaN && argument_1["ForSubpageCallFunctionCodeString"] !== "") {
                ForSubpageCallFunctionCodeString = String(argument_1["ForSubpageCallFunctionCodeString"]);
            };

            if (typeof (argument_1["TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton"]) !== undefined && argument_1["TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton"] !== undefined && argument_1["TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton"] !== null && argument_1["TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton"] !== NaN && argument_1["TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton"] !== "") {
                TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = String(argument_1["TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton"]);
            };

            if (typeof (argument_1["TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton"]) !== undefined && argument_1["TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton"] !== undefined && argument_1["TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton"] !== null && argument_1["TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton"] !== NaN && argument_1["TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton"] !== "") {
                TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = String(argument_1["TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton"]);
            };
        };
    };


    // 先檢查要建立的網頁元素 DIV 層 ID 是否存在，防止重複添加;
    if (windowHandle_1.document.getElementById("OperationModuleDiv")) {
        windowHandle_1.setTimeout(
            function() {
                console.log('Newly added <div id="OperationModuleDiv">' + '\n' + 'Naming conflicts !' + '\n' + 'Please rename !');
                // alert('Newly added <div id="OperationModuleDiv">' + '\n' + 'Naming conflicts !' + '\n' + 'Please rename !');
            },
            100
        );
        return false;
    };

    if (windowHandle_1.document.getElementById("ParameterVariableDiv")) {
        windowHandle_1.setTimeout(
            function() {
                console.log('Newly added <div id="ParameterVariableDiv">' + '\n' + 'Naming conflicts !' + '\n' + 'Please rename !');
                // alert('Newly added <div id="ParameterVariableDiv">' + '\n' + 'Naming conflicts !' + '\n' + 'Please rename !');
            },
            100
        );
        return false;
    };

    if (windowHandle_1.document.getElementById("ResultExhibitsDiv")) {
        windowHandle_1.setTimeout(
            function() {
                console.log('Newly added <div id="ResultExhibitsDiv">' + '\n' + 'Naming conflicts !' + '\n' + 'Please rename !');
                // alert('Newly added <div id="ResultExhibitsDiv">' + '\n' + 'Naming conflicts !' + '\n' + 'Please rename !');
            },
            100
        );
        return false;
    };

    if (windowHandle_1.document.getElementById("DivJavaScriptFunctionAggregateScript")) {
        windowHandle_1.setTimeout(
            function() {
                console.log('Newly added <script id="DivJavaScriptFunctionAggregateScript">' + '\n' + 'Naming conflicts !' + '\n' + 'Please rename !');
                // alert('Newly added <script id="DivJavaScriptFunctionAggregateScript">' + '\n' + 'Naming conflicts !' + '\n' + 'Please rename !');
            },
            100
        );
        return false;
    };

    // 以下為製作新增的網頁元素 DIV 層的各個操作組件 tag 代碼;
    let OperationModuleDiv = windowHandle_1.document.createElement("div");  // 創建一個 DIV 層節點（作爲插入的所有操作和顯示按鈕 tag 的母本載體 OperationModuleDiv）;
    OperationModuleDiv.setAttribute("id", "OperationModuleDiv");
    // 为 DIV 元素添加樣式代碼;
    OperationModuleDiv.style.position = "static";
    //OperationModuleDiv.style.position = "fixed";
    //OperationModuleDiv.style.position = "absolute";
    OperationModuleDiv.style.backgroundColor = "CornflowerBlue";  //"transparent,White,SeaGreen,SlateGray,CornflowerBlue,CadetBlue,DarkBlue,DarkSlateGray,DimGray,Gray,Gainsboro,LightBlue,MidnightBlue,Olive,OliveDrab,Peru,SaddleBrown,red"
    //OperationModuleDiv.style.width = "100%";
    //OperationModuleDiv.style.height = "100%";
    OperationModuleDiv.style.margin = "'auto'";
    //OperationModuleDiv.style.margin_left = "1%";
    //OperationModuleDiv.style.margin_top = "1%";
    //OperationModuleDiv.style.margin_right = "1%";
    //OperationModuleDiv.style.margin_bottom = "1%";
    OperationModuleDiv.style.border_style = "inset";  //none,solid,dashed,dotted,double
    //OperationModuleDiv.style.border_left_style = "outset";
    //OperationModuleDiv.style.border_top_style = "outset";
    //OperationModuleDiv.style.border_right_style = "outset";
    //OperationModuleDiv.style.border_bottom_style = "outset";
    OperationModuleDiv.style.border_color = "Gray";  //transparent,black,blue,color,green,orange,purple,red,white,yellow
    //OperationModuleDiv.style.border_left_color = "rgba(100,149,237,0.7)";
    //OperationModuleDiv.style.border_top_color = "rgba(100,149,237,0.7)";
    //OperationModuleDiv.style.border_right_color = "rgba(100,149,237,0.7)";
    //OperationModuleDiv.style.border_bottom_color = "rgba(100,149,237,0.7)";
    OperationModuleDiv.style.border_width = "medium";  //medium,thin,dashed
    //OperationModuleDiv.style.border_left_width = "3px";
    //OperationModuleDiv.style.border_top_width = "3px";
    //OperationModuleDiv.style.border_right_width = "3px";
    //OperationModuleDiv.style.border_bottom_width = "3px";
    OperationModuleDiv.style.padding = "'auto'";
    //OperationModuleDiv.style.padding_left = "1%";
    //OperationModuleDiv.style.padding_top = "1%";
    //OperationModuleDiv.style.padding_right = "1%";
    //OperationModuleDiv.style.padding_bottom = "1%";
    //OperationModuleDiv.style.overflow = "'auto'";
    //OperationModuleDiv.style.overflow_y = "'auto'";
    //OperationModuleDiv.style.overflow_x =  "'auto'";
    //OperationModuleDiv.style.float = "none";
    //OperationModuleDiv.style.clear = "none";
    //OperationModuleDiv.style.zindex = "99999";

    //OperationModuleDiv.innerText = "页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层页内插入层";    
    /*
    OperationModuleDiv.innerHTML = ''+
          '<br>'+
            '<center>'+
                '<label id="LoadWebURLInputTextAreaLabel" , name="LoadWebURLInputTextAreaLabel" , style="padding-left:5px;vertical-align:middle;text-align:left; font-family:TimesNewRoman,Georgia,Serif;font-style:italic;font-size:1em;color:RGBA(0,0,0,0.7); width:auto;height:auto;">Uniform Resource Locator :</label><br>'+
                '<textarea id="LoadWebURLInputTextArea" , name="LoadWebURLInputTextArea" , wrap="virtual" , style="padding-left:5px;vertical-align:top;text-align:left; font-family:TimesNewRoman,Georgia,Serif;font-style:italic;font-size:1em;color:RGBA(0,0,0,0.7); width:auto;height:auto;">http://samr.cfda.gov.cn/WS01/CL0001/</textarea><br>'+
                '<br>'+
                '<button id="LoadWebSubmitButton" , name="LoadWebSubmitButton" , type="button" , value="true" , onclick="javascript:LoadWeb()" , style="vertical-align:middle;text-align:middle; font-family:TimesNewRoman,Georgia,Serif;font-style:italic;font-size:1em;color:RGBA(0,0,0,0.7); width:auto;height:auto;">Load The Web Page</button>'+
            '</center>'+        

            
            '<!-- 從載入的網頁中讀出各個翻頁抓取相關標籤(Tag)在所有標籤集合中的位置 -->'+
            '<script language="JavaScript" type="text/javascript" src="GetWebTagLocation.js">'+
        
            '</script>'+
        
            '<!-- 從載入的網頁中讀出允許抓取的起止頁碼 -->'+
            '<script language="JavaScript" type="text/javascript" src="GetStartAndEndPageNumber.js">'+
        
            '</script>'+
                            
            '<!-- 關鍵詞查詢 -->'+
            '<br>'+
            '<center>'+
                '<label id="QueryKeyWordInputTextAreaLabel" , name="QueryKeyWordInputTextAreaLabel" , style="padding-left:5px;vertical-align:middle;text-align:left; font-family:TimesNewRoman,Georgia,Serif;font-style:italic;font-size:1em;color:RGBA(0,0,0,0.7); width:auto;height:auto;">Key Word :</label><br>'+
                '<textarea id="QueryKeyWordInputTextArea" , name="QueryKeyWordInputTextArea" , wrap="virtual" , style="padding-left:5px;vertical-align:top;text-align:left; font-family:FangSong;font-style:normal;font-size:1em;color:RGBA(0,0,0,0.7); width:auto;height:auto;">化学发光</textarea><br>'+
                '<br>'+
                '<button id="QueryKeyWordSubmitButton" , name="QueryKeyWordSubmitButton" , type="button" , value="true" , disabled="disabled" , onclick="javascript:QueryKeyWord(window, window, WebKeyWordTextboxElement_XPath, WebKeyWordQuerySubmitButtonElement_XPath)" , style="vertical-align:middle;text-align:middle; font-family:TimesNewRoman,Georgia,Serif;font-style:italic;font-size:1em;color:RGBA(0,0,0,0.7); width:auto;height:auto;">Key Word Retrieval</button>'+
            '</center>'+
                                
            '<!-- 從載入的網頁中讀出允許抓取的起止頁碼 -->'+
            '<script language="JavaScript" type="text/javascript" src="GetStartAndEndPageNumber.js">'+
        
            '</script>'+
        
            '<!-- 自动抓取起止頁碼输入文本框 -->'+
            '<br>'+
            '<center>'+
                '<label id="CollectDataStartPageNumberInputTextBoxLabel" , name="CollectDataStartPageNumberInputTextBoxLabel" , style="padding-left:5px;vertical-align:middle;text-align:left; font-family:TimesNewRoman,Georgia,Serif;font-style:italic;font-size:1em;color:RGBA(0,0,0,0.7); width:auto;height:auto;">Start Page Number : </label>'+
                '<input id="CollectDataStartPageNumberInputTextBox" , name="CollectDataStartPageNumberInputTextBox" , type="text" , value="1" , style="padding-left:5px;vertical-align:middle;text-align:middle; font-family:TimesNewRoman,Georgia,Serif;font-style:normal;font-size:1em;color:RGBA(0,0,0,0.7); width:auto;height:auto;" /><br>'+
                '<br>'+
                '<label id="CollectDataEndPageNumberInputTextBoxLabel" , name="CollectDataEndPageNumberInputTextBoxLabel" , style="padding-left:5px;vertical-align:middle;text-align:left; font-family:TimesNewRoman,Georgia,Serif;font-style:italic;font-size:1em;color:RGBA(0,0,0,0.7); width:auto;height:auto;">End Page Number : </label>'+
                '<input id="CollectDataEndPageNumberInputTextBox" , name="CollectDataEndPageNumberInputTextBox" , type="text" , value="1" , style="padding-left:5px;vertical-align:middle;text-align:middle; font-family:TimesNewRoman,Georgia,Serif;font-style:normal;font-size:1em;color:RGBA(0,0,0,0.7); width:auto;height:auto;" /><br>'+
            '</center>'+

            '<!-- 從載入的網頁中抓取數據 -->'+
            '<br>'+
            '<br>'+
            '<center>'+
                '<button id="StartORStopCollectDataButton" , name="StartORStopCollectDataButton" , type="button" , value="true" , disabled="disabled" , onclick="javascript:StartORStopCollectData(window, window, 2, TableSkipPageTextboxTdElement_XPath_1, TableSkipPageTextboxTdElement_XPath_2, TableSkipPageTextboxTdElement_XPath_3, TableSkipPageSubmitButtonTdElement_XPath_1, TableSkipPageSubmitButtonTdElement_XPath_2, TableSkipPageSubmitButtonTdElement_XPath_3, TableNextPageSubmitButtonImgTdElement_XPath_1, TableNextPageSubmitButtonImgTdElement_XPath_2, TableNextPageSubmitButtonImgTdElement_XPath_3, TableWebPageNumberTdElement_XPath_1, TableWebPageNumberTdElement_XPath_2, RetrievalResult_XPath_1, RetrievalResult_XPath_2, NumberOfItemInThisSecondLevelWebPage, SecondLevelWebPageRetrievalResult_XPath, FromSecondLevelWebReturnFirstLevelWeb_XPath, 'ResultExhibitsDiv', 'ResultExhibitsDivTagTable', PublicVariableResultExhibitsWebPage)" , style="vertical-align:middle;text-align:middle; font-family:TimesNewRoman,Georgia,Serif;font-style:italic;font-size:1em;color:RGBA(0,0,0,0.7); width:auto;height:auto;">Start Collect Data</button>'+
            '</center>'+

            '<!-- 抓取状态提示标签 -->'
            '<br>'+
            '<br>'+
            '<br>'+
            '<center>'+
                '<label id="DataCollectStatusLabel-1" , name="DataCollectStatusLabel-1" , style="position:auto; left:auto;right:auto;top:auto;buttom:auto; padding-left:5px;vertical-align:middle;text-align:left; font-family:TimesNewRoman,Georgia,Serif;font-style:italic;font-size:2em;color:RGBA(0,0,0,0.7); width:auto;height:auto;">Web Page Unloaded</label><br>'+
                '<br>'+
                '<label id="DataCollectStatusLabel-2" , name="DataCollectStatusLabel-2" , style="position:relative; left:auto;right:auto;top:auto;buttom:auto; padding-left:5px;vertical-align:middle;text-align:left; font-family:Cursive,LiSu,STXingkai;font-style:normal;font-size:3em;color:RGBA(0,0,0,0.7); width:auto;height:auto;">無獲取信息</label><br>'+
                '<br>'+
                '<br>'+
                '<label id="DataCollectStatusLabel-3" , name="DataCollectStatusLabel-3" , style="position:relative; left:auto;right:auto;top:auto;buttom:auto; padding-left:5px;vertical-align:middle;text-align:left; font-family:Cursive,LiSu,STXingkai;font-style:normal;font-size:1em;color:RGBA(0,0,0,0.7); width:auto;height:auto;">人為延時 [ 0 ] 毫秒</label><br>'+
            '</center>';
    */
    // windowHandle_1.document.getElementsByTagName("body").item(0).appendChild(OperationModuleDiv);  // 向網頁 HTML 脚本的 body 中插入 OperationModuleDiv 層:  

    /*
    let OperationModuleDivTagCenter = windowHandle_1.document.createElement("center");  // 使新增 DIV 中的新增節點居中顯示;
    OperationModuleDiv.appendChild(OperationModuleDivTagCenter);
    */

    // 創建新窗口加載目標數據源網頁按鈕 button;
    let NewOpenWebPageContainDataButton = windowHandle_1.document.createElement("button");  // 創建一個按鈕 button 節點（創建新窗口加載目標數據源網頁按鈕 NewOpenWebPageContainDataButton）;
    NewOpenWebPageContainDataButton.setAttribute("id", "NewOpenWebPageContainDataButton");
    NewOpenWebPageContainDataButton.setAttribute("value", "true");
    // NewOpenWebPageContainDataButton.setAttribute("disabled", "disabled");
    // NewOpenWebPageContainDataButton.setAttribute("onclick", "javascript:OpenWebPageContainData(window, true, Open_Contain_Data_Web_Page_Name, ContainDataWebPageURL, TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton, PublicVariableContainDataWebPage, (error, Win_Obj) => {})");
    NewOpenWebPageContainDataButton.innerText = "Key Word Retrieval";  
    NewOpenWebPageContainDataButton.style.vertical_align = "middle";
    NewOpenWebPageContainDataButton.style.text_align = "middle";
    NewOpenWebPageContainDataButton.style.font_family = "TimesNewRoman,Georgia,Serif";
    NewOpenWebPageContainDataButton.style.font_style = "italic";
    NewOpenWebPageContainDataButton.style.font_size = "1em";
    NewOpenWebPageContainDataButton.style.color = "RGBA(0,0,0,0.7)";
    NewOpenWebPageContainDataButton.style.width = "auto";
    NewOpenWebPageContainDataButton.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(NewOpenWebPageContainDataButton);

    // 關鍵詞查詢提示標簽 label ;  
    let QueryKeyWordInputTextAreaLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（關鍵詞輸入位置提示標簽 QueryKeyWordInputTextAreaLabel）;
    QueryKeyWordInputTextAreaLabel.setAttribute("id", "QueryKeyWordInputTextAreaLabel");
    QueryKeyWordInputTextAreaLabel.innerText = "Key Word : ";
    QueryKeyWordInputTextAreaLabel.style.padding_left = "5px";
    // QueryKeyWordInputTextAreaLabel.style.vertical_align = "middle";
    // QueryKeyWordInputTextAreaLabel.style.text_align = "left";
    QueryKeyWordInputTextAreaLabel.style.align = "center";
    QueryKeyWordInputTextAreaLabel.style.font_family = "TimesNewRoman,Georgia,Serif";
    QueryKeyWordInputTextAreaLabel.style.font_style = "italic";
    QueryKeyWordInputTextAreaLabel.style.font_size = "1em";
    QueryKeyWordInputTextAreaLabel.style.color = "RGBA(0,0,0,0.7)";
    QueryKeyWordInputTextAreaLabel.style.width = "auto";
    QueryKeyWordInputTextAreaLabel.style.height = "auto";
    // OperationModuleDivTagCenter.appendChild(QueryKeyWordInputTextAreaLabel);

    // 關鍵詞查詢輸入文本框 input 或 textarea;
    let QueryKeyWordInputTextBoxInput = windowHandle_1.document.createElement("input");  // 創建一個 input 節點（關鍵詞輸入單行文本框 QueryKeyWordInputTextBoxInput）;
    QueryKeyWordInputTextBoxInput.setAttribute("id", "QueryKeyWordInputTextBoxInput");
    QueryKeyWordInputTextBoxInput.value = "檢索詞";
    QueryKeyWordInputTextBoxInput.style.padding_left = "5px";
    QueryKeyWordInputTextBoxInput.style.text_align = "middle";  
    QueryKeyWordInputTextBoxInput.style.font_family = "FangSong";
    QueryKeyWordInputTextBoxInput.style.font_style = "normal";
    QueryKeyWordInputTextBoxInput.style.font_size = "1em";
    QueryKeyWordInputTextBoxInput.style.color = "RGBA(0,0,0,0.7)";
    QueryKeyWordInputTextBoxInput.style.width = "auto";
    QueryKeyWordInputTextBoxInput.style.height = "auto";   
    // OperationModuleDivTagCenter.appendChild(QueryKeyWordInputTextBoxInput);
    /*
    let QueryKeyWordInputTextArea = windowHandle_1.document.createElement("textarea");  // 創建一個 textarea 節點（關鍵詞輸入多行文本框 QueryKeyWordInputTextArea）;
    QueryKeyWordInputTextArea.setAttribute("id", "QueryKeyWordInputTextArea");
    QueryKeyWordInputTextArea.innerText = "檢索詞";
    QueryKeyWordInputTextArea.style.paddingleft = "5px";
    QueryKeyWordInputTextArea.style.verticalalign = "top";
    QueryKeyWordInputTextArea.style.textalign = "left";
    QueryKeyWordInputTextArea.style.fontfamily = "FangSong";
    QueryKeyWordInputTextArea.style.fontstyle = "normal";
    QueryKeyWordInputTextArea.style.fontsize = "1em";
    QueryKeyWordInputTextArea.style.color = "RGBA(0,0,0,0.7)";
    QueryKeyWordInputTextArea.style.width = "auto";
    QueryKeyWordInputTextArea.style.height = "auto";  
    OperationModuleDivTagCenter.appendChild(QueryKeyWordInputTextArea);
    */

    // 關鍵詞查詢按鈕 button;
    let QueryKeyWordSubmitButton = windowHandle_1.document.createElement("button");  // 創建一個按鈕 button 節點（關鍵詞查詢按鈕 QueryKeyWordSubmitButton）;
    QueryKeyWordSubmitButton.setAttribute("id", "QueryKeyWordSubmitButton");
    QueryKeyWordSubmitButton.setAttribute("value", "true");
    // QueryKeyWordSubmitButton.setAttribute("disabled", "disabled");
    // QueryKeyWordSubmitButton.setAttribute("onclick", "javascript:QueryKeyWord(window, window, WebKeyWordTextboxElement_XPath, WebKeyWordQuerySubmitButtonElement_XPath)");
    QueryKeyWordSubmitButton.innerText = "Key Word Retrieval";  
    QueryKeyWordSubmitButton.style.vertical_align = "middle";
    QueryKeyWordSubmitButton.style.text_align = "middle";
    QueryKeyWordSubmitButton.style.font_family = "TimesNewRoman,Georgia,Serif";
    QueryKeyWordSubmitButton.style.font_style = "italic";
    QueryKeyWordSubmitButton.style.font_size = "1em";
    QueryKeyWordSubmitButton.style.color = "RGBA(0,0,0,0.7)";
    QueryKeyWordSubmitButton.style.width = "auto";
    QueryKeyWordSubmitButton.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(QueryKeyWordSubmitButton);

    // 抓取起始頁碼輸入文本框提示標簽 label;
    let CollectDataStartPageNumberInputTextBoxLabel = windowHandle_1.document.createElement("label");  // 創建一個標簽 label 節點（抓取起始頁碼輸入位置提示標簽 CollectDataStartPageNumberInputTextBoxLabel）;
    CollectDataStartPageNumberInputTextBoxLabel.setAttribute("id", "CollectDataStartPageNumberInputTextBoxLabel");
    CollectDataStartPageNumberInputTextBoxLabel.innerText = "Start Page Number : ";
    CollectDataStartPageNumberInputTextBoxLabel.style.padding_left = "5px";
    // CollectDataStartPageNumberInputTextBoxLabel.style.vertical_align = "middle";
    // CollectDataStartPageNumberInputTextBoxLabel.style.text_align = "middle";
    CollectDataStartPageNumberInputTextBoxLabel.style.align = "center";
    CollectDataStartPageNumberInputTextBoxLabel.style.font_family = "TimesNewRoman,Georgia,Serif";
    CollectDataStartPageNumberInputTextBoxLabel.style.font_style = "italic";
    CollectDataStartPageNumberInputTextBoxLabel.style.font_size = "1em";
    CollectDataStartPageNumberInputTextBoxLabel.style.color = "RGBA(0,0,0,0.7)";
    CollectDataStartPageNumberInputTextBoxLabel.style.width = "auto";
    CollectDataStartPageNumberInputTextBoxLabel.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(CollectDataStartPageNumberInputTextBoxLabel);

    // 抓取起始頁碼輸入文本框 input ;
    let CollectDataStartPageNumberInputTextBoxInput = windowHandle_1.document.createElement("input");  // 創建一個 input 節點（抓取起始頁碼輸入單行文本框 CollectDataStartPageNumberInputTextBoxInput）;
    CollectDataStartPageNumberInputTextBoxInput.setAttribute("id", "CollectDataStartPageNumberInputTextBoxInput");
    // CollectDataStartPageNumberInputTextBoxInput.setAttribute("disabled", "disabled");
    CollectDataStartPageNumberInputTextBoxInput.value = "";
    CollectDataStartPageNumberInputTextBoxInput.style.padding_left = "5px";
    CollectDataStartPageNumberInputTextBoxInput.style.vertical_align = "middle";
    CollectDataStartPageNumberInputTextBoxInput.style.text_align = "middle";  
    CollectDataStartPageNumberInputTextBoxInput.style.fontf_amily = "TimesNewRoman,Georgia,Serif";
    CollectDataStartPageNumberInputTextBoxInput.style.font_style = "normal";
    CollectDataStartPageNumberInputTextBoxInput.style.font_size = "1em";
    CollectDataStartPageNumberInputTextBoxInput.style.color = "RGBA(0,0,0,0.7)";
    CollectDataStartPageNumberInputTextBoxInput.style.width = "auto";
    CollectDataStartPageNumberInputTextBoxInput.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(CollectDataStartPageNumberInputTextBoxInput);

    // 抓取起始頁碼中的起始抓取條目號碼輸入文本框 input ;
    let CollectDataStartPageStartEntryNumberInputTextBoxInput = windowHandle_1.document.createElement("input");  // 創建一個 input 節點（抓取起始頁碼中具體起始條目號輸入單行文本框 CollectDataStartPageStartEntryNumberInputTextBoxInput）;
    CollectDataStartPageStartEntryNumberInputTextBoxInput.setAttribute("id", "CollectDataStartPageStartEntryNumberInputTextBoxInput");
    // CollectDataStartPageStartEntryNumberInputTextBoxInput.setAttribute("disabled", "disabled");
    CollectDataStartPageStartEntryNumberInputTextBoxInput.value = "";
    CollectDataStartPageStartEntryNumberInputTextBoxInput.style.padding_left = "5px";
    CollectDataStartPageStartEntryNumberInputTextBoxInput.style.vertical_align = "middle";
    CollectDataStartPageStartEntryNumberInputTextBoxInput.style.text_align = "middle";  
    CollectDataStartPageStartEntryNumberInputTextBoxInput.style.fontf_amily = "TimesNewRoman,Georgia,Serif";
    CollectDataStartPageStartEntryNumberInputTextBoxInput.style.font_style = "normal";
    CollectDataStartPageStartEntryNumberInputTextBoxInput.style.font_size = "1em";
    CollectDataStartPageStartEntryNumberInputTextBoxInput.style.color = "RGBA(0,0,0,0.7)";
    CollectDataStartPageStartEntryNumberInputTextBoxInput.style.width = "auto";
    CollectDataStartPageStartEntryNumberInputTextBoxInput.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(CollectDataStartPageStartEntryNumberInputTextBoxInput);

    // 當前網頁中可抓取的最大條目號碼顯示標簽 label ;
    let MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（當前網頁中可抓取的最大條目號碼顯示標簽 MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel）;
    MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel.setAttribute("id", "MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel");
    MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel.innerText = "";
    MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel.style.padding_left = "5px";
    // MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel.style.vertical_align = "middle";
    // MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel.style.text_align = "middle";
    MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel.style.align = "center";
    MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel.style.font_family = "TimesNewRoman,Georgia,Serif";
    MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel.style.font_style = "italic";
    MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel.style.font_size = "1em";
    MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel.style.color = "RGBA(0,0,0,0.7)";
    MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel.style.width = "auto";
    MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel);

    // 抓取終止頁碼輸入文本框提示標簽 label ;
    let CollectDataEndPageNumberInputTextBoxLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（抓取終止頁碼輸入位置提示標簽 CollectDataEndPageNumberInputTextBoxLabel）;
    CollectDataEndPageNumberInputTextBoxLabel.setAttribute("id", "CollectDataEndPageNumberInputTextBoxLabel");
    CollectDataEndPageNumberInputTextBoxLabel.innerText = "End Page Number : ";
    CollectDataEndPageNumberInputTextBoxLabel.style.padding_left = "5px";
    // CollectDataEndPageNumberInputTextBoxLabel.style.vertical_align = "middle";
    // CollectDataEndPageNumberInputTextBoxLabel.style.text_align = "middle";
    CollectDataEndPageNumberInputTextBoxLabel.style.align = "center";
    CollectDataEndPageNumberInputTextBoxLabel.style.font_family = "TimesNewRoman,Georgia,Serif";
    CollectDataEndPageNumberInputTextBoxLabel.style.font_style = "italic";
    CollectDataEndPageNumberInputTextBoxLabel.style.font_size = "1em";
    CollectDataEndPageNumberInputTextBoxLabel.style.color = "RGBA(0,0,0,0.7)";
    CollectDataEndPageNumberInputTextBoxLabel.style.width = "auto";
    CollectDataEndPageNumberInputTextBoxLabel.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(CollectDataEndPageNumberInputTextBoxLabel);

    // 抓取終止頁碼輸入文本框 input ;
    let CollectDataEndPageNumberInputTextBoxInput = windowHandle_1.document.createElement("input");  // 創建一個 input 節點（抓取終止頁碼輸入單行文本框 CollectDataEndPageNumberInputTextBoxInput）;
    CollectDataEndPageNumberInputTextBoxInput.setAttribute("id", "CollectDataEndPageNumberInputTextBoxInput");
    // CollectDataEndPageNumberInputTextBoxInput.setAttribute("disabled", "disabled");
    CollectDataEndPageNumberInputTextBoxInput.value = "";
    CollectDataEndPageNumberInputTextBoxInput.style.padding_left = "5px";
    CollectDataEndPageNumberInputTextBoxInput.style.vertical_align = "middle";
    CollectDataEndPageNumberInputTextBoxInput.style.text_align = "middle";  
    CollectDataEndPageNumberInputTextBoxInput.style.font_family = "TimesNewRoman,Georgia,Serif";
    CollectDataEndPageNumberInputTextBoxInput.style.font_style = "normal";
    CollectDataEndPageNumberInputTextBoxInput.style.font_size = "1em";
    CollectDataEndPageNumberInputTextBoxInput.style.color = "RGBA(0,0,0,0.7)";
    CollectDataEndPageNumberInputTextBoxInput.style.width = "auto";
    CollectDataEndPageNumberInputTextBoxInput.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(CollectDataEndPageNumberInputTextBoxInput);

    // 抓取終止頁碼中的終止抓取條目號碼輸入文本框 input ;
    let CollectDataEndPageEndEntryNumberInputTextBoxInput = windowHandle_1.document.createElement("input");  // 創建一個 input 節點（抓取終止頁碼中的具體終止條目號碼輸入單行文本框 CollectDataEndPageEndEntryNumberInputTextBoxInput）;
    CollectDataEndPageEndEntryNumberInputTextBoxInput.setAttribute("id", "CollectDataEndPageEndEntryNumberInputTextBoxInput");
    // CollectDataEndPageEndEntryNumberInputTextBoxInput.setAttribute("disabled", "disabled");
    CollectDataEndPageEndEntryNumberInputTextBoxInput.value = "";
    CollectDataEndPageEndEntryNumberInputTextBoxInput.style.padding_left = "5px";
    CollectDataEndPageEndEntryNumberInputTextBoxInput.style.vertical_align = "middle";
    CollectDataEndPageEndEntryNumberInputTextBoxInput.style.text_align = "middle";  
    CollectDataEndPageEndEntryNumberInputTextBoxInput.style.fontf_amily = "TimesNewRoman,Georgia,Serif";
    CollectDataEndPageEndEntryNumberInputTextBoxInput.style.font_style = "normal";
    CollectDataEndPageEndEntryNumberInputTextBoxInput.style.font_size = "1em";
    CollectDataEndPageEndEntryNumberInputTextBoxInput.style.color = "RGBA(0,0,0,0.7)";
    CollectDataEndPageEndEntryNumberInputTextBoxInput.style.width = "auto";
    CollectDataEndPageEndEntryNumberInputTextBoxInput.style.height = "auto";
    CollectDataEndPageEndEntryNumberInputTextBoxInput.style.display = "none";
    // OperationModuleDivTagCenter.appendChild(CollectDataEndPageEndEntryNumberInputTextBoxInput);

    // 提取網頁中顯示的可以采集的最大頁碼和當前頁碼按鈕 button ;
    let ExtractCanbeCollectedWebPageNumberButton = windowHandle_1.document.createElement("button");  // 創建一個 button 節點（提取網頁中顯示的可以采集的最大頁碼和當前頁碼按鈕 ExtractCanbeCollectedWebPageNumberButton）;
    ExtractCanbeCollectedWebPageNumberButton.setAttribute("id", "ExtractCanbeCollectedWebPageNumberButton");
    ExtractCanbeCollectedWebPageNumberButton.setAttribute("value", "true");
    // ExtractCanbeCollectedWebPageNumberButton.setAttribute("disabled", "disabled");
    // ExtractCanbeCollectedWebPageNumberButton.setAttribute("onclick", "javascript:ExtractPageNumber(window, window, 0, TableWebPageNumberTdElement_XPath_1, TableWebPageNumberTdElement_XPath_2, RetrievalResult_XPath_1, RetrievalResult_XPath_2)");
    ExtractCanbeCollectedWebPageNumberButton.innerText = "Extract Web Page Number";  
    ExtractCanbeCollectedWebPageNumberButton.style.vertical_align = "middle";
    ExtractCanbeCollectedWebPageNumberButton.style.text_align = "middle";
    ExtractCanbeCollectedWebPageNumberButton.style.font_family = "TimesNewRoman,Georgia,Serif";
    ExtractCanbeCollectedWebPageNumberButton.style.font_style = "italic";
    ExtractCanbeCollectedWebPageNumberButton.style.font_size = "1em";
    ExtractCanbeCollectedWebPageNumberButton.style.color = "RGBA(0,0,0,0.7)";
    ExtractCanbeCollectedWebPageNumberButton.style.width = "auto";
    ExtractCanbeCollectedWebPageNumberButton.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(ExtractCanbeCollectedWebPageNumberButton);  

    // 抓取狀態提示標簽 labelOne ;
    let DataCollectStatusLabelOneLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（抓取狀態提示標簽 DataCollectStatusLabelOneLabel）;
    DataCollectStatusLabelOneLabel.setAttribute("id", "DataCollectStatusLabelOneLabel");
    DataCollectStatusLabelOneLabel.innerText = "{ Unidentified Web }";
    // DataCollectStatusLabelOneLabel.style.position = "auto";
    DataCollectStatusLabelOneLabel.style.left = "auto";
    DataCollectStatusLabelOneLabel.style.right = "auto";
    DataCollectStatusLabelOneLabel.style.top = "auto";
    DataCollectStatusLabelOneLabel.style.buttom = "auto";
    DataCollectStatusLabelOneLabel.style.padding_left = "5px";
    DataCollectStatusLabelOneLabel.style.vertical_align = "middle";
    DataCollectStatusLabelOneLabel.style.text_align = "left";
    DataCollectStatusLabelOneLabel.style.font_family = "TimesNewRoman,Georgia,Serif";
    DataCollectStatusLabelOneLabel.style.font_style = "italic";
    DataCollectStatusLabelOneLabel.style.font_size = "2em";
    DataCollectStatusLabelOneLabel.style.color = "RGBA(0,0,0,0.7)";
    DataCollectStatusLabelOneLabel.style.width = "auto";
    DataCollectStatusLabelOneLabel.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(DataCollectStatusLabelOneLabel);

    // 開始和中止采集按鈕 button ;
    let StartORStopCollectDataButton = windowHandle_1.document.createElement("button");  // 創建一個按鈕 button 節點（開始和中止采集按鈕 StartORStopCollectDataButton）;
    StartORStopCollectDataButton.setAttribute("id", "StartORStopCollectDataButton");
    StartORStopCollectDataButton.setAttribute("value", "true");
    // StartORStopCollectDataButton.setAttribute("disabled", "disabled");
    // StartORStopCollectDataButton.setAttribute("onclick", "javascript:StartORStopCollectData(window, window, 2, TableSkipPageTextboxTdElement_XPath_1, TableSkipPageTextboxTdElement_XPath_2, TableSkipPageTextboxTdElement_XPath_3, TableSkipPageSubmitButtonTdElement_XPath_1, TableSkipPageSubmitButtonTdElement_XPath_2, TableSkipPageSubmitButtonTdElement_XPath_3, TableNextPageSubmitButtonImgTdElement_XPath_1, TableNextPageSubmitButtonImgTdElement_XPath_2, TableNextPageSubmitButtonImgTdElement_XPath_3, TableWebPageNumberTdElement_XPath_1, TableWebPageNumberTdElement_XPath_2, RetrievalResult_XPath_1, RetrievalResult_XPath_2, NumberOfItemInThisSecondLevelWebPage, SecondLevelWebPageRetrievalResult_XPath, EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1, EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_2, FromSecondLevelWebReturnFirstLevelWeb_XPath, 'ResultExhibitsDiv', 'ResultExhibitsDivTagTable', PublicVariableResultExhibitsWebPage)");
    StartORStopCollectDataButton.innerText = "Start Collect Data";
    StartORStopCollectDataButton.style.vertical_align = "middle";
    StartORStopCollectDataButton.style.text_align = "middle";
    StartORStopCollectDataButton.style.font_family = "TimesNewRoman,Georgia,Serif";
    StartORStopCollectDataButton.style.font_style = "italic";
    StartORStopCollectDataButton.style.font_size = "1em";
    StartORStopCollectDataButton.style.color = "RGBA(0,0,0,0.7)";
    StartORStopCollectDataButton.style.width = "auto";
    StartORStopCollectDataButton.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(StartORStopCollectDataButton);

    // 抓取狀態提示標簽 labelTwo ;
    let DataCollectStatusLabelTwoLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（抓取狀態提示標簽 DataCollectStatusLabelTwoLabel）;
    DataCollectStatusLabelTwoLabel.setAttribute("id", "DataCollectStatusLabelTwoLabel");
    // DataCollectStatusLabelTwoLabel.setAttribute("onclick", "javascript:NewDivOuterHTMLExhibits(window)");  // 臨時語句用於調試;
    DataCollectStatusLabelTwoLabel.innerText = "{ 無所獲 }";
    // DataCollectStatusLabelTwoLabel.style.position = "relative";
    DataCollectStatusLabelTwoLabel.style.left = "auto";
    DataCollectStatusLabelTwoLabel.style.right = "auto";
    DataCollectStatusLabelTwoLabel.style.top = "auto";
    DataCollectStatusLabelTwoLabel.style.buttom = "auto";
    DataCollectStatusLabelTwoLabel.style.padding_left = "5px";
    DataCollectStatusLabelTwoLabel.style.vertical_align = "middle";
    DataCollectStatusLabelTwoLabel.style.text_align = "left";
    DataCollectStatusLabelTwoLabel.style.font_family = "Cursive,LiSu,STXingkai";
    DataCollectStatusLabelTwoLabel.style.font_style = "normal";
    DataCollectStatusLabelTwoLabel.style.font_size = "3em";
    DataCollectStatusLabelTwoLabel.style.color = "RGBA(0,0,0,0.7)";
    DataCollectStatusLabelTwoLabel.style.width = "auto";
    DataCollectStatusLabelTwoLabel.style.height = "auto";
    // OperationModuleDivTagCenter.appendChild(DataCollectStatusLabelTwoLabel);

    // 抓取狀態提示標簽 labelThree ;
    let DataCollectStatusLabelThreeLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（抓取狀態提示標簽 DataCollectStatusLabelThreeLabel）;
    DataCollectStatusLabelThreeLabel.setAttribute("id", "DataCollectStatusLabelThreeLabel");
    DataCollectStatusLabelThreeLabel.innerText = "{ 人為延遲 [ 0 ] 毫秒 }";
    // DataCollectStatusLabelThreeLabel.style.position = "relative";
    DataCollectStatusLabelThreeLabel.style.left = "auto";
    DataCollectStatusLabelThreeLabel.style.right = "auto";
    DataCollectStatusLabelThreeLabel.style.top = "auto";
    DataCollectStatusLabelThreeLabel.style.buttom = "auto";
    DataCollectStatusLabelThreeLabel.style.padding_left = "5px";
    DataCollectStatusLabelThreeLabel.style.vertical_align = "middle";
    DataCollectStatusLabelThreeLabel.style.text_align = "left";
    DataCollectStatusLabelThreeLabel.style.font_family = "Cursive,LiSu,STXingkai";
    DataCollectStatusLabelThreeLabel.style.font_style = "normal";
    DataCollectStatusLabelThreeLabel.style.font_size = "1em";
    DataCollectStatusLabelThreeLabel.style.color = "RGBA(0,0,0,0.7)";
    DataCollectStatusLabelThreeLabel.style.width = "auto";
    DataCollectStatusLabelThreeLabel.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(DataCollectStatusLabelThreeLabel);

    // 采集結果從内存保存到硬盤按鈕 button ;
    let CollectResultFromMemoryToHardDiskButton = windowHandle_1.document.createElement("button");  // 創建一個按鈕 button 節點（采集結果從内存保存到硬盤按鈕 CollectResultFromMemoryToHardDiskButton）;
    CollectResultFromMemoryToHardDiskButton.setAttribute("id", "CollectResultFromMemoryToHardDiskButton");
    CollectResultFromMemoryToHardDiskButton.setAttribute("value", "true");
    // CollectResultFromMemoryToHardDiskButton.setAttribute("disabled", "disabled");
    // CollectResultFromMemoryToHardDiskButton.setAttribute("onclick", "javascript:CollectResultFromMemoryToHardDisk(window, '2', '<fenliejiangefuhao>', '\n', PublicVariableCollectResultStoredStringArray)");
    CollectResultFromMemoryToHardDiskButton.innerText = "Memory to Hard Disk";  
    CollectResultFromMemoryToHardDiskButton.style.vertical_align = "middle";
    CollectResultFromMemoryToHardDiskButton.style.text_align = "middle";
    CollectResultFromMemoryToHardDiskButton.style.font_family = "TimesNewRoman,Georgia,Serif";
    CollectResultFromMemoryToHardDiskButton.style.font_style = "italic";
    CollectResultFromMemoryToHardDiskButton.style.font_size = "1em";
    CollectResultFromMemoryToHardDiskButton.style.color = "RGBA(0,0,0,0.7)";
    CollectResultFromMemoryToHardDiskButton.style.width = "auto";
    CollectResultFromMemoryToHardDiskButton.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(CollectResultFromMemoryToHardDiskButton);

    // 硬盤儲存的采集結果從硬盤導入内存按鈕 button ;
    let StoredCollectResultFromHardDiskToMemoryButton = windowHandle_1.document.createElement("button");  // 創建一個按鈕 button 節點（硬盤儲存的采集結果從硬盤導入内存按鈕 CollectResultFromMemoryToHardDiskButton）;
    StoredCollectResultFromHardDiskToMemoryButton.setAttribute("id", "StoredCollectResultFromHardDiskToMemoryButton");
    StoredCollectResultFromHardDiskToMemoryButton.setAttribute("value", "true");
    // StoredCollectResultFromHardDiskToMemoryButton.setAttribute("disabled", "disabled");
    // StoredCollectResultFromHardDiskToMemoryButton.setAttribute("onclick", "javascript:StoredCollectResultFromHardDiskToMemory(window, '2', '<fenliejiangefuhao>', '\n', 'table', 'ResultExhibitsDiv', 'ResultExhibitsDivTagTable', PublicVariableResultExhibitsWebPage, DisplayData)");  // javascript:StoredCollectResultFromHardDiskToMemory(window, '1', '<fenliejiangefuhao>', '\n', 'table', 'ResultExhibitsDiv', 'ResultExhibitsDivTagTable', PublicVariableResultExhibitsWebPage, DisplayData);
    StoredCollectResultFromHardDiskToMemoryButton.innerText = "Hard Disk to Memory";  
    StoredCollectResultFromHardDiskToMemoryButton.style.vertical_align = "middle";
    StoredCollectResultFromHardDiskToMemoryButton.style.text_align = "middle";
    StoredCollectResultFromHardDiskToMemoryButton.style.font_family = "TimesNewRoman,Georgia,Serif";
    StoredCollectResultFromHardDiskToMemoryButton.style.font_style = "italic";
    StoredCollectResultFromHardDiskToMemoryButton.style.font_size = "1em";
    StoredCollectResultFromHardDiskToMemoryButton.style.color = "RGBA(0,0,0,0.7)";
    StoredCollectResultFromHardDiskToMemoryButton.style.width = "auto";
    StoredCollectResultFromHardDiskToMemoryButton.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(StoredCollectResultFromHardDiskToMemoryButton);

    // 新創建打開一個 Web 標籤頁，作爲承接展示采集到的結果的載體，創建按鈕 button ;
    let  NewOpenWebPageButton = windowHandle_1.document.createElement("button");  // 創建一個按鈕 button 節點（新創建打開一個 Web 標籤頁，作爲承接展示采集到的結果的載體，創建按鈕 NewOpenWebPageButton）;
    NewOpenWebPageButton.setAttribute("id", "NewOpenWebPageButton");
    NewOpenWebPageButton.setAttribute("value", "true");
    // NewOpenWebPageButton.setAttribute("disabled", "disabled");
    // NewOpenWebPageButton.setAttribute("onclick", "javascript:NewOpenWebPage(window, true, OpenResultExhibitsWebPageName, TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton, PublicVariableResultExhibitsWebPage, (error, Win_Obj) => {})");
    NewOpenWebPageButton.innerText = "New Web Page for Result Exhibits";  
    NewOpenWebPageButton.style.vertical_align = "middle";
    NewOpenWebPageButton.style.text_align = "middle";
    NewOpenWebPageButton.style.font_family = "TimesNewRoman,Georgia,Serif";
    NewOpenWebPageButton.style.font_style = "italic";
    NewOpenWebPageButton.style.font_size = "1em";
    NewOpenWebPageButton.style.color = "RGBA(0,0,0,0.7)";
    NewOpenWebPageButton.style.width = "auto";
    NewOpenWebPageButton.style.height = "auto";
    NewOpenWebPageButton.style.display = "none";
    // OperationModuleDivTagCenter.appendChild(NewOpenWebPageButton);

    // 展示采集到的結果的載體元素類型選擇單選框<input type="radio" name="ResultDisplayContainerRadio" value="table" checked="false"> 或者 <input type="radio"  name="ResultDisplayContainerRadio" value="canvas-datagrid" checked="true">;
    // 展示采集到的結果的載體元素類型選擇單選框<input type="radio" name="ResultDisplayContainerRadio" value="table" checked="false">;
    let Result_Display_Container_table_Radio = windowHandle_1.document.createElement("input"); // 創建一個單選框<input type="radio" value="table">節點（輸入抓全結果展示類型的參數）;
    Result_Display_Container_table_Radio.setAttribute("id", "ResultDisplayContainerTableRadio");
    Result_Display_Container_table_Radio.setAttribute("type", "radio");
    Result_Display_Container_table_Radio.setAttribute("name", "ResultDisplayContainerRadio");
    Result_Display_Container_table_Radio.value = "table";
    // Result_Display_Container_table_Radio.setAttribute("disabled", "disabled");
    Result_Display_Container_table_Radio.setAttribute("checked", "true"); // .setAttribute("checked", "checked");
    // OperationModuleDivTagCenter.appendChild(Result_Display_Container_table_Radio);  // 結果展示載體單選框元素<input type="radio" value="table">;
    // OperationModuleDivTagCenter.appendChild(windowHandle_1.document.createTextNode(Result_Display_Container_table_Radio.getAttribute("value").toString()));  // 顯示提示文本"table" <input type="radio" value="table">;
    // 展示采集到的結果的載體元素類型選擇單選框<input type="radio" name="ResultDisplayContainerRadio" value="canvas-datagrid" checked="true">;
    let Result_Display_Container_canvasDatagrid_Radio = windowHandle_1.document.createElement("input"); // 創建一個單選框<input type="radio" value="canvas-datagrid">節點（輸入抓全結果展示類型的參數）;
    Result_Display_Container_canvasDatagrid_Radio.setAttribute("id", "ResultDisplayContainerCanvasDatagridRadio");
    Result_Display_Container_canvasDatagrid_Radio.setAttribute("type", "radio");
    Result_Display_Container_canvasDatagrid_Radio.setAttribute("name", "ResultDisplayContainerRadio");
    Result_Display_Container_canvasDatagrid_Radio.value = "canvas-datagrid";
    // Result_Display_Container_canvasDatagrid_Radio.setAttribute("disabled", "disabled");
    // Result_Display_Container_canvasDatagrid_Radio.setAttribute("checked", "false"); // .setAttribute("checked", "checked");
    // OperationModuleDivTagCenter.appendChild(Result_Display_Container_canvasDatagrid_Radio);  // 結果展示載體單選框元素<input type="radio" value="canvas-datagrid">;
    // OperationModuleDivTagCenter.appendChild(windowHandle_1.document.createTextNode(Result_Display_Container_canvasDatagrid_Radio.getAttribute("value").toString()));  // 顯示提示文本"canvas-datagrid" <input type="radio" value="canvas-datagrid">;
    // let Result_Display_Container_Radio = new Array;
    // Result_Display_Container_Radio = windowHandle_1.document.getElementsByName("ResultDisplayContainerRadio");
    // let Result_Display_Container_Radio_value = "";
    // for (let i=0; i < Result_Display_Container_Radio.length; i++) {
    //     if (Result_Display_Container_Radio[i].checked) {
    //         /* Result_Display_Container_Radio[i].getAttribute("checked"); */
    //         Result_Display_Container_Radio_value = Result_Display_Container_Radio[i].getAttribute("value");
    //         /* Result_Display_Container_Radio_value = Result_Display_Container_Radio[i].value; */
    //     };
    // };

    // 循環點擊間隔時長輸入框提示標簽 Delay_Duration_of_Click_Input_Label ;
    let Delay_Duration_of_Click_Input_Label = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（循環點擊間隔時長輸入框提示標簽 Delay_Duration_of_Click_Input_Label）;
    Delay_Duration_of_Click_Input_Label.setAttribute("id", "DelayDurationofClickInputLabel");
    Delay_Duration_of_Click_Input_Label.innerText = "Delay duration of click , Unit: millisecond : ";
    // Delay_Duration_of_Click_Input_Label.style.position = "relative";
    Delay_Duration_of_Click_Input_Label.style.left = "auto";
    Delay_Duration_of_Click_Input_Label.style.right = "auto";
    Delay_Duration_of_Click_Input_Label.style.top = "auto";
    Delay_Duration_of_Click_Input_Label.style.buttom = "auto";
    Delay_Duration_of_Click_Input_Label.style.padding_left = "5px";
    Delay_Duration_of_Click_Input_Label.style.vertical_align = "middle";
    Delay_Duration_of_Click_Input_Label.style.text_align = "left";
    Delay_Duration_of_Click_Input_Label.style.font_family = "TimesNewRoman,Georgia,Serif";  // "Cursive,LiSu,STXingkai";
    Delay_Duration_of_Click_Input_Label.style.font_style = "normal";
    Delay_Duration_of_Click_Input_Label.style.font_size = "1em";
    Delay_Duration_of_Click_Input_Label.style.color = "RGBA(0,0,0,0.7)";
    Delay_Duration_of_Click_Input_Label.style.width = "auto";
    Delay_Duration_of_Click_Input_Label.style.height = "auto";  
    // OperationModuleDivTagCenter.appendChild(Delay_Duration_of_Click_Input_Label);

    // 循環周期時長（單位毫秒）輸入文本框 input ;
    let Interval_Of_Circle_Click_Input_TextBox_Input = windowHandle_1.document.createElement("input");  // 創建一個 input 節點（循環周期時長（單位毫秒）輸入文本框 Interval_Of_Circle_Click_Input_TextBox_Input）;
    Interval_Of_Circle_Click_Input_TextBox_Input.setAttribute("id", "IntervalOfCircleClickInputTextBoxInput");
    // Interval_Of_Circle_Click_Input_TextBox_Input.setAttribute("disabled", "disabled");
    Interval_Of_Circle_Click_Input_TextBox_Input.value = "1000";  // 31000 毫秒一页，parseInt(31000)，parseInt(31000).toString();
    Interval_Of_Circle_Click_Input_TextBox_Input.style.padding_left = "5px";
    Interval_Of_Circle_Click_Input_TextBox_Input.style.vertical_align = "middle";
    Interval_Of_Circle_Click_Input_TextBox_Input.style.text_align = "middle";  
    Interval_Of_Circle_Click_Input_TextBox_Input.style.fontf_amily = "TimesNewRoman,Georgia,Serif";
    Interval_Of_Circle_Click_Input_TextBox_Input.style.font_style = "normal";
    Interval_Of_Circle_Click_Input_TextBox_Input.style.font_size = "1em";
    Interval_Of_Circle_Click_Input_TextBox_Input.style.color = "RGBA(0,0,0,0.7)";
    Interval_Of_Circle_Click_Input_TextBox_Input.style.width = "auto";
    Interval_Of_Circle_Click_Input_TextBox_Input.style.height = "auto";
    Interval_Of_Circle_Click_Input_TextBox_Input.placeholder = "輸入迭代操作的間隔時長（單位：毫秒）.";
    // 配置監聽 input 輸入框内文本變動時監聽功能，需要元素失去焦點時才會被擊發;
    // Interval_Of_Circle_Click_Input_TextBox_Input.onchange = function() {Interval_Of_Circle_Click_value = parseInt(this.value);};
    Interval_Of_Circle_Click_Input_TextBox_Input.addEventListener(
        "change",
        () => {
            Interval_Of_Circle_Click_value = parseInt(windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
            Randomization_Relative_Interval = parseFloat(windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
            // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
            Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));

            // // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
            // chrome.runtime.sendMessage(
            //     {
            //         "message": 'userInterface->background:Update_Interval_Of_Circle_Click_value',
            //         "url": String(windowHandle_1.document.location.href),
            //         "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
            //         // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
            //         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,
            //         "ContainDataWebPageURL": ContainDataWebPageURL,
            //         "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,
            //         "Randomization_Relative_Interval": Randomization_Relative_Interval,
            //         "data": ""  // JSON.stringify(request_Dict, function (key, value) {}, 4);
            //     },  // 發送的具體數據，可以是 JSON 對象;
            //     (response_Data) => {
            //         // console.log(response_Data);
            //         // response_data = JSON.parse(response_Data["data"], function (key, value) {});
            //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
            //         // console.log(response_Data["message"]);
            //         // console.log(response_Data["Open_Contain_Data_Web_Page_Name"]);
            //         // console.log(response_Data["ContainDataWebPageURL"]);
            //         // console.log(response_Data["Interval_Of_Circle_Click_value"]);
            //     }
            // );
        }
    );
    // OperationModuleDivTagCenter.appendChild(Interval_Of_Circle_Click_Input_TextBox_Input);
    // let Interval_Of_Circle_Click_value = parseInt(windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);  // 循環周期時長（單位毫秒）輸入文本框 input 的值;

    // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input ;
    let Randomization_Relative_Interval_Input_TextBox_Input = windowHandle_1.document.createElement("input");  // 創建一個 input 節點（循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 Randomization_Relative_Interval_Input_TextBox_Input）;
    Randomization_Relative_Interval_Input_TextBox_Input.setAttribute("id", "RandomizationRelativeIntervalInputTextBoxInput");
    // Randomization_Relative_Interval_Input_TextBox_Input.setAttribute("disabled", "disabled");
    Randomization_Relative_Interval_Input_TextBox_Input.value = "0.2";  // 隨機化損益基值的 0.2 倍，parseFloat(0.2).toString();
    Randomization_Relative_Interval_Input_TextBox_Input.style.padding_left = "5px";
    Randomization_Relative_Interval_Input_TextBox_Input.style.vertical_align = "middle";
    Randomization_Relative_Interval_Input_TextBox_Input.style.text_align = "middle";  
    Randomization_Relative_Interval_Input_TextBox_Input.style.fontf_amily = "TimesNewRoman,Georgia,Serif";
    Randomization_Relative_Interval_Input_TextBox_Input.style.font_style = "normal";
    Randomization_Relative_Interval_Input_TextBox_Input.style.font_size = "1em";
    Randomization_Relative_Interval_Input_TextBox_Input.style.color = "RGBA(0,0,0,0.7)";
    Randomization_Relative_Interval_Input_TextBox_Input.style.width = "auto";
    Randomization_Relative_Interval_Input_TextBox_Input.style.height = "auto";
    Randomization_Relative_Interval_Input_TextBox_Input.placeholder = "輸入迭代操作的間隔時長（單位：毫秒）的隨機化損益百分比值.";
    // 配置監聽 input 輸入框内文本變動時監聽功能，需要元素失去焦點時才會被擊發;
    // Randomization_Relative_Interval_Input_TextBox_Input.onchange = function() {Randomization_Relative_Interval = parseFloat(this.value);};
    Randomization_Relative_Interval_Input_TextBox_Input.addEventListener(
        "change",
        () => {
            Interval_Of_Circle_Click_value = parseInt(windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
            Randomization_Relative_Interval = parseFloat(windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
            // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
            Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));

            // // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
            // chrome.runtime.sendMessage(
            //     {
            //         "message": 'userInterface->background:Update_Randomization_Relative_Interval',
            //         "url": String(windowHandle_1.document.location.href),
            //         "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
            //         // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
            //         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,
            //         "ContainDataWebPageURL": ContainDataWebPageURL,
            //         "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,
            //         "Randomization_Relative_Interval": Randomization_Relative_Interval,
            //         "data": ""  // JSON.stringify(request_Dict, function (key, value) {}, 4);
            //     },  // 發送的具體數據，可以是 JSON 對象;
            //     (response_Data) => {
            //         // console.log(response_Data);
            //         // response_data = JSON.parse(response_Data["data"], function (key, value) {});
            //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
            //         // console.log(response_Data["message"]);
            //         // console.log(response_Data["Open_Contain_Data_Web_Page_Name"]);
            //         // console.log(response_Data["ContainDataWebPageURL"]);
            //         // console.log(response_Data["Randomization_Relative_Interval"]);
            //     }
            // );
        }
    );
    // OperationModuleDivTagCenter.appendChild(Randomization_Relative_Interval_Input_TextBox_Input);
    // let Randomization_Relative_Interval = parseFloat(windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;

    // 想要采集的數據處在目標數據源網頁的第幾個層級上選擇單選框提示標簽 Data_Source_Page_Level_Radio_Label ;
    let Data_Source_Page_Level_Radio_Label = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（想要采集的數據處在目標數據源網頁的第幾個層級上選擇單選框提示標簽 Data_Source_Page_Level_Radio_Label）;
    Data_Source_Page_Level_Radio_Label.setAttribute("id", "DataSourcePageLevelInputLabel");
    Data_Source_Page_Level_Radio_Label.innerText = "Data source page hierarchy : ";
    // Data_Source_Page_Level_Radio_Label.style.position = "relative";
    Data_Source_Page_Level_Radio_Label.style.left = "auto";
    Data_Source_Page_Level_Radio_Label.style.right = "auto";
    Data_Source_Page_Level_Radio_Label.style.top = "auto";
    Data_Source_Page_Level_Radio_Label.style.buttom = "auto";
    Data_Source_Page_Level_Radio_Label.style.padding_left = "5px";
    Data_Source_Page_Level_Radio_Label.style.vertical_align = "middle";
    Data_Source_Page_Level_Radio_Label.style.text_align = "left";
    Data_Source_Page_Level_Radio_Label.style.font_family = "TimesNewRoman,Georgia,Serif";  // "Cursive,LiSu,STXingkai";
    Data_Source_Page_Level_Radio_Label.style.font_style = "normal";
    Data_Source_Page_Level_Radio_Label.style.font_size = "1em";
    Data_Source_Page_Level_Radio_Label.style.color = "RGBA(0,0,0,0.7)";
    Data_Source_Page_Level_Radio_Label.style.width = "auto";
    Data_Source_Page_Level_Radio_Label.style.height = "auto";
    // Data_Source_Page_Level_Radio_Label.style.display = "inline";  // "none"; "block";
    // OperationModuleDivTagCenter.appendChild(Data_Source_Page_Level_Radio_Label);

    /* 想要采集的數據處在目標數據源網頁的第幾個層級上選擇單選框<input type="radio" name="DataSourcePageLevelRadio" value="1" checked="false"> 或者 <input type="radio"  name="DataSourcePageLevelRadio" value="2" checked="true">; */;
    let Data_Source_Page_Level_1_Radio = windowHandle_1.document.createElement("input"); // 創建一個單選框<input type="radio" value="1">節點（配置讀取網頁數據的層級）;
    Data_Source_Page_Level_1_Radio.setAttribute("id", "DataSourcePageLevel1Radio");
    Data_Source_Page_Level_1_Radio.setAttribute("type", "radio");
    Data_Source_Page_Level_1_Radio.setAttribute("name", "DataSourcePageLevelRadio");
    Data_Source_Page_Level_1_Radio.value = "table";
    // Data_Source_Page_Level_1_Radio.setAttribute("disabled", "disabled");
    // Data_Source_Page_Level_1_Radio.style.display = "inline";  // "none"; "block";
    // Data_Source_Page_Level_1_Radio.setAttribute("checked", "false"); // .setAttribute("checked", "checked");
    // OperationModuleDivTagCenter.appendChild(Data_Source_Page_Level_1_Radio);  // 配置讀取網頁數據的層級元素 <input type="radio" value="1">;
    // OperationModuleDivTagCenter.appendChild(windowHandle_1.document.createTextNode(Data_Source_Page_Level_1_Radio.getAttribute("value").toString()));  // 顯示提示文本"1" <input type="radio" value="1">;
    // Data_Source_Page_Level_1_Radio.onclick = function() {Data_Level = parseInt(this.value);};
    Data_Source_Page_Level_1_Radio.addEventListener(
        "click",
        async () => {

            let Data_Source_Page_Level_Radio = new Array;
            Data_Source_Page_Level_Radio = windowHandle_1.document.getElementsByName("DataSourcePageLevelRadio");

            for (let i = 0; i < Data_Source_Page_Level_Radio.length; i++) {

                if (Data_Source_Page_Level_Radio[i].checked === true) {

                    Data_Level = parseInt(Data_Source_Page_Level_Radio[i].getAttribute("value"));
                    /* Data_Level = parseInt(Data_Source_Page_Level_Radio[i].value); */

                    if (parseInt(Data_Source_Page_Level_Radio[i].value) === parseInt(1)) {
                        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            // windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").getAttribute("disabled");
                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled !== "disabled") {
                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled = "disabled";
                                // windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").setAttribute("disabled", "disabled");
                            };
                            // if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").style.display !== "none") {
                            //     windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").style.display = "none";  // "inline"; block;
                            // };
                        };
                        if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput") !== null) {
                            // windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").getAttribute("disabled");
                            if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").disabled !== "disabled") {
                                windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").disabled = "disabled";
                                // windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").setAttribute("disabled", "disabled");
                            };
                            // if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").style.display !== "none") {
                            //     windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").style.display = "none";  // "inline"; block;
                            // };
                        };
                    };
                    if (parseInt(Data_Source_Page_Level_Radio[i].value) === parseInt(2)) {
                        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            // windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").getAttribute("disabled");
                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled === "disabled") {
                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            // if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").style.display === "none") {
                            //     windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").style.display = "inline";  // none; block;
                            // };
                        };
                        if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput") !== null) {
                            // windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").getAttribute("disabled");
                            if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").disabled === "disabled") {
                                windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            // if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").style.display === "none") {
                            //     windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").style.display = "inline";  // none; block;
                            // };
                        };
                    };
                };
            };
        }
    );
    // OperationModuleDivTagCenter.appendChild(Data_Source_Page_Level_1_Radio);
    // let Data_Level = parseInt(windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").value);  // 想要采集的數據處在目標數據源網頁的第幾個層級上選擇單選框 Radio 的值;
    let Data_Source_Page_Level_2_Radio = windowHandle_1.document.createElement("input"); // 創建一個單選框<input type="radio" value="2">節點（配置讀取網頁數據的層級）;
    Data_Source_Page_Level_2_Radio.setAttribute("id", "DataSourcePageLevel2Radio");
    Data_Source_Page_Level_2_Radio.setAttribute("type", "radio");
    Data_Source_Page_Level_2_Radio.setAttribute("name", "DataSourcePageLevelRadio");
    Data_Source_Page_Level_2_Radio.value = "table";
    // Data_Source_Page_Level_2_Radio.setAttribute("disabled", "disabled");
    // Data_Source_Page_Level_2_Radio.style.display = "inline";  // "none"; "block";
    Data_Source_Page_Level_2_Radio.setAttribute("checked", "true"); // .setAttribute("checked", "checked");
    // OperationModuleDivTagCenter.appendChild(Data_Source_Page_Level_2_Radio);  // 配置讀取網頁數據的層級元素 <input type="radio" value="2">;
    // OperationModuleDivTagCenter.appendChild(windowHandle_1.document.createTextNode(Data_Source_Page_Level_2_Radio.getAttribute("value").toString()));  // 顯示提示文本"1" <input type="radio" value="2">;
    // Data_Source_Page_Level_2_Radio.onclick = function() {Data_Level = parseInt(this.value);};
    Data_Source_Page_Level_2_Radio.addEventListener(
        "click",
        async () => {

            let Data_Source_Page_Level_Radio = new Array;
            Data_Source_Page_Level_Radio = windowHandle_1.document.getElementsByName("DataSourcePageLevelRadio");

            for (let i = 0; i < Data_Source_Page_Level_Radio.length; i++) {

                if (Data_Source_Page_Level_Radio[i].checked === true) {

                    Data_Level = parseInt(Data_Source_Page_Level_Radio[i].getAttribute("value"));
                    /* Data_Level = parseInt(Data_Source_Page_Level_Radio[i].value); */

                    if (parseInt(Data_Source_Page_Level_Radio[i].value) === parseInt(1)) {
                        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            // windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").getAttribute("disabled");
                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled !== "disabled") {
                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled = "disabled";
                                // windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").setAttribute("disabled", "disabled");
                            };
                            // if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").style.display !== "none") {
                            //     windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").style.display = "none";  // "inline"; block;
                            // };
                        };
                        if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput") !== null) {
                            // windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").getAttribute("disabled");
                            if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").disabled !== "disabled") {
                                windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").disabled = "disabled";
                                // windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").setAttribute("disabled", "disabled");
                            };
                            // if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").style.display !== "none") {
                            //     windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").style.display = "none";  // "inline"; block;
                            // };
                        };
                    };
                    if (parseInt(Data_Source_Page_Level_Radio[i].value) === parseInt(2)) {
                        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            // windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").getAttribute("disabled");
                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled === "disabled") {
                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            // if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").style.display === "none") {
                            //     windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").style.display = "inline";  // none; block;
                            // };
                        };
                        if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput") !== null) {
                            // windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").getAttribute("disabled");
                            if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").disabled === "disabled") {
                                windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            // if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").style.display === "none") {
                            //     windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").style.display = "inline";  // none; block;
                            // };
                        };
                    };
                };
            };
        }
    );
    // OperationModuleDivTagCenter.appendChild(Data_Source_Page_Level_2_Radio);
    // let Data_Level = parseInt(windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").value);  // 想要采集的數據處在目標數據源網頁的第幾個層級上選擇單選框 Radio 的值;

    // 將采集到的結果數據持久化保存的路徑的輸入文本框 input ;
    let FilePathSaveCollectedData = windowHandle_1.document.createElement("input");  // 創建一個 input 節點（將采集到的結果數據持久化保存的路徑的輸入文本框 FilePathSaveCollectedData）;
    FilePathSaveCollectedData.setAttribute("id", "FilePathSaveCollectedData");
    // FilePathSaveCollectedData.setAttribute("disabled", "disabled");
    FilePathSaveCollectedData.value = "1000";  // 31000 毫秒一页，parseInt(31000)，parseInt(31000).toString();
    FilePathSaveCollectedData.style.padding_left = "5px";
    FilePathSaveCollectedData.style.vertical_align = "middle";
    FilePathSaveCollectedData.style.text_align = "middle";  
    FilePathSaveCollectedData.style.fontf_amily = "TimesNewRoman,Georgia,Serif";
    FilePathSaveCollectedData.style.font_style = "normal";
    FilePathSaveCollectedData.style.font_size = "1em";
    FilePathSaveCollectedData.style.color = "RGBA(0,0,0,0.7)";
    FilePathSaveCollectedData.style.width = "auto";
    FilePathSaveCollectedData.style.height = "auto";
    FilePathSaveCollectedData.style.display = "none";
    // OperationModuleDivTagCenter.appendChild(FilePathSaveCollectedData);
    // let FilePathSaveCollectedData = parseInt(windowHandle_1.document.getElementById("FilePathSaveCollectedData").value);  // 采集到的結果數據持久化保存的路徑的輸入文本框 input 的值;

    // 在操作按鈕所在的網頁元素 DIV 層 OperationModuleDiv 中新建一個段落節點 <p> 標簽，用來暫存以後可能會寫入新創建打開的 Web 標籤頁 NewOpenWebPage 中的函數代碼字符串;
    let  OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton = windowHandle_1.document.createElement("p");  // 創建一個網頁元素 p 節點（在操作按鈕所在的網頁元素 DIV 層 OperationModuleDiv 中新建一個段落節點 <p> 標簽，用來暫存以後可能會寫入新創建打開的 Web 標籤頁 NewOpenWebPage 中的函數代碼字符串 OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton）;
    OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton.setAttribute("id", "OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton");
    // OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton.setAttribute("hidden", "hidden");
    OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton.style.display = "none";

    
    // 以下為製作新增的網頁元素 DIV 層的各個操作組件 tag 代碼;
    let ParameterVariableDiv = windowHandle_1.document.createElement("div");  // 創建一個 DIV 層節點（作爲插入的所有常量參數輸入框標簽 tag 的母本載體 ParameterVariableDiv）;
    ParameterVariableDiv.setAttribute("id", "ParameterVariableDiv");
    // 为 DIV 元素添加樣式代碼;
    ParameterVariableDiv.style.position = "static";
    //ParameterVariableDiv.style.position = "fixed";
    //ParameterVariableDiv.style.position = "absolute";
    ParameterVariableDiv.style.backgroundColor = "CornflowerBlue";  //"transparent,White,SeaGreen,SlateGray,CornflowerBlue,CadetBlue,DarkBlue,DarkSlateGray,DimGray,Gray,Gainsboro,LightBlue,MidnightBlue,Olive,OliveDrab,Peru,SaddleBrown,red"
    //ParameterVariableDiv.style.width = "100%";
    //ParameterVariableDiv.style.height = "100%";
    ParameterVariableDiv.style.margin = "'auto'";
    //ParameterVariableDiv.style.margin_left = "1%";
    //ParameterVariableDiv.style.margin_top = "1%";
    //ParameterVariableDiv.style.margin_right = "1%";
    //ParameterVariableDiv.style.margin_bottom = "1%";
    ParameterVariableDiv.style.border_style = "inset";  //none,solid,dashed,dotted,double
    //ParameterVariableDiv.style.border_left_style = "outset";
    //ParameterVariableDiv.style.border_top_style = "outset";
    //ParameterVariableDiv.style.border_right_style = "outset";
    //ParameterVariableDiv.style.border_bottom_style = "outset";
    ParameterVariableDiv.style.border_color = "Gray";  //transparent,black,blue,color,green,orange,purple,red,white,yellow
    //ParameterVariableDiv.style.border_left_color = "rgba(100,149,237,0.7)";
    //ParameterVariableDiv.style.border_top_color = "rgba(100,149,237,0.7)";
    //ParameterVariableDiv.style.border_right_color = "rgba(100,149,237,0.7)";
    //ParameterVariableDiv.style.border_bottom_color = "rgba(100,149,237,0.7)";
    ParameterVariableDiv.style.border_width = "medium";  //medium,thin,dashed
    //ParameterVariableDiv.style.border_left_width = "3px";
    //ParameterVariableDiv.style.border_top_width = "3px";
    //ParameterVariableDiv.style.border_right_width = "3px";
    //ParameterVariableDiv.style.border_bottom_width = "3px";
    ParameterVariableDiv.style.padding = "'auto'";
    //ParameterVariableDiv.style.padding_left = "1%";
    //ParameterVariableDiv.style.padding_top = "1%";
    //ParameterVariableDiv.style.padding_right = "1%";
    //ParameterVariableDiv.style.padding_bottom = "1%";
    //ParameterVariableDiv.style.overflow = "'auto'";
    //ParameterVariableDiv.style.overflow_y = "'auto'";
    //ParameterVariableDiv.style.overflow_x =  "'auto'";
    //ParameterVariableDiv.style.float = "none";
    //ParameterVariableDiv.style.clear = "none";
    //ParameterVariableDiv.style.zindex = "99999";

    // 自定義常量輸入的提示標簽 label，用於加載數據源網頁的新建窗口變量，自定義的窗口命名;
    let CustomOpenContainDataWebPageNameInputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（用於加載數據源網頁的新建窗口變量，自定義的窗口命名 CustomOpenContainDataWebPageNameInputLabel）;
    CustomOpenContainDataWebPageNameInputLabel.setAttribute("id", "CustomOpenContainDataWebPageNameInputLabel");
    CustomOpenContainDataWebPageNameInputLabel.innerText = "Custom name of the data web page : ";
    // CustomOpenContainDataWebPageNameInputLabel.style.position = "relative";
    CustomOpenContainDataWebPageNameInputLabel.style.left = "auto";
    CustomOpenContainDataWebPageNameInputLabel.style.right = "auto";
    CustomOpenContainDataWebPageNameInputLabel.style.top = "auto";
    CustomOpenContainDataWebPageNameInputLabel.style.buttom = "auto";
    CustomOpenContainDataWebPageNameInputLabel.style.padding_left = "5px";
    CustomOpenContainDataWebPageNameInputLabel.style.vertical_align = "middle";
    CustomOpenContainDataWebPageNameInputLabel.style.text_align = "left";
    CustomOpenContainDataWebPageNameInputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    CustomOpenContainDataWebPageNameInputLabel.style.font_style = "normal";
    CustomOpenContainDataWebPageNameInputLabel.style.font_size = "1em";
    CustomOpenContainDataWebPageNameInputLabel.style.color = "RGBA(0,0,0,0.7)";
    CustomOpenContainDataWebPageNameInputLabel.style.width = "auto";
    CustomOpenContainDataWebPageNameInputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(CustomOpenContainDataWebPageNameInputLabel);

    // 自定義常量輸入框 textarea，用於加載數據源網頁的新建窗口變量，自定義的窗口命名;
    let CustomOpenContainDataWebPageNameInputTextarea = windowHandle_1.document.createElement("textarea");  // 用於加載數據源網頁的新建窗口變量，自定義的窗口命名，CustomOpenContainDataWebPageNameInputTextarea;
    CustomOpenContainDataWebPageNameInputTextarea.setAttribute("id", "CustomOpenContainDataWebPageNameInputTextarea");
    // CustomOpenContainDataWebPageNameInputTextarea.style.border = "1px solid #ccc";
    CustomOpenContainDataWebPageNameInputTextarea.style.padding = "5px";
    // CustomOpenContainDataWebPageNameInputTextarea.style.paddingleft = "5px";
    CustomOpenContainDataWebPageNameInputTextarea.style.verticalalign = "top";
    CustomOpenContainDataWebPageNameInputTextarea.style.textalign = "left";
    CustomOpenContainDataWebPageNameInputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    CustomOpenContainDataWebPageNameInputTextarea.style.fontstyle = "normal";
    // CustomOpenContainDataWebPageNameInputTextarea.style.fontsize = "1em";
    // CustomOpenContainDataWebPageNameInputTextarea.style.line_height = "30px";
    CustomOpenContainDataWebPageNameInputTextarea.style.color = "rgba(0,0,0,0.7)";
    CustomOpenContainDataWebPageNameInputTextarea.style.width = "100%";  // "auto", "100px";
    // CustomOpenContainDataWebPageNameInputTextarea.style.min_width = "150px";
    CustomOpenContainDataWebPageNameInputTextarea.style.height = "100%";  // "auto", "100px";
    // CustomOpenContainDataWebPageNameInputTextarea.style.min_height = "150px";
    // CustomOpenContainDataWebPageNameInputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    CustomOpenContainDataWebPageNameInputTextarea.style.word_wrap = "break-word";
    // CustomOpenContainDataWebPageNameInputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // CustomOpenContainDataWebPageNameInputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    CustomOpenContainDataWebPageNameInputTextarea.style.display = "inline-block";  // "none";
    // CustomOpenContainDataWebPageNameInputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // CustomOpenContainDataWebPageNameInputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // CustomOpenContainDataWebPageNameInputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    CustomOpenContainDataWebPageNameInputTextarea.lang = "zh-TW"; // "en";
    CustomOpenContainDataWebPageNameInputTextarea.translate = "no"; // "yes";
    // CustomOpenContainDataWebPageNameInputTextarea.readonly = "readonly";
    // CustomOpenContainDataWebPageNameInputTextarea.disabled = "disabled";
    CustomOpenContainDataWebPageNameInputTextarea.rows = "1";
    // CustomOpenContainDataWebPageNameInputTextarea.cols = "160";
    // CustomOpenContainDataWebPageNameInputTextarea.maxlength = "160";
    // CustomOpenContainDataWebPageNameInputTextarea.contenteditable = "true";  // "false";
    CustomOpenContainDataWebPageNameInputTextarea.placeholder = "輸入用於加載數據源網頁的新建窗口的自定義的窗口名字符串 Input custom name open contain data web page.";
    CustomOpenContainDataWebPageNameInputTextarea.textContent = "testContainDataWebPage";
    // ParameterVariableDiv.appendChild(CustomOpenContainDataWebPageNameInputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    CustomOpenContainDataWebPageNameInputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    CustomOpenContainDataWebPageNameInputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
    
    // 自定義常量輸入的提示標簽 label，數據源網頁的網址;
    let URLofDataWebPageInputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（數據源網頁的網址，URLofDataWebPageInputLabel）;
    URLofDataWebPageInputLabel.setAttribute("id", "URLofDataWebPageInputLabel");
    URLofDataWebPageInputLabel.innerText = "URL of the data web page : ";
    // URLofDataWebPageInputLabel.style.position = "relative";
    URLofDataWebPageInputLabel.style.left = "auto";
    URLofDataWebPageInputLabel.style.right = "auto";
    URLofDataWebPageInputLabel.style.top = "auto";
    URLofDataWebPageInputLabel.style.buttom = "auto";
    URLofDataWebPageInputLabel.style.padding_left = "5px";
    URLofDataWebPageInputLabel.style.vertical_align = "middle";
    URLofDataWebPageInputLabel.style.text_align = "left";
    URLofDataWebPageInputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    URLofDataWebPageInputLabel.style.font_style = "normal";
    URLofDataWebPageInputLabel.style.font_size = "1em";
    URLofDataWebPageInputLabel.style.color = "RGBA(0,0,0,0.7)";
    URLofDataWebPageInputLabel.style.width = "auto";
    URLofDataWebPageInputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(URLofDataWebPageInputLabel);

    // 自定義常量輸入框 textarea，數據源網頁的網址;
    let URLofDataWebPageInputTextarea = windowHandle_1.document.createElement("textarea");  // 數據源網頁的網址，URLofDataWebPageInputTextarea;
    URLofDataWebPageInputTextarea.setAttribute("id", "URLofDataWebPageInputTextarea");
    // URLofDataWebPageInputTextarea.style.border = "1px solid #ccc";
    URLofDataWebPageInputTextarea.style.padding = "5px";
    // URLofDataWebPageInputTextarea.style.paddingleft = "5px";
    URLofDataWebPageInputTextarea.style.verticalalign = "top";
    URLofDataWebPageInputTextarea.style.textalign = "left";
    URLofDataWebPageInputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    URLofDataWebPageInputTextarea.style.fontstyle = "normal";
    // URLofDataWebPageInputTextarea.style.fontsize = "1em";
    // URLofDataWebPageInputTextarea.style.line_height = "30px";
    URLofDataWebPageInputTextarea.style.color = "rgba(0,0,0,0.7)";
    URLofDataWebPageInputTextarea.style.width = "100%";  // "auto", "100px";
    // URLofDataWebPageInputTextarea.style.min_width = "150px";
    URLofDataWebPageInputTextarea.style.height = "100%";  // "auto", "100px";
    // URLofDataWebPageInputTextarea.style.min_height = "150px";
    // URLofDataWebPageInputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    URLofDataWebPageInputTextarea.style.word_wrap = "break-word";
    // URLofDataWebPageInputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // URLofDataWebPageInputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    URLofDataWebPageInputTextarea.style.display = "inline-block";  // "none";
    // URLofDataWebPageInputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // URLofDataWebPageInputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // URLofDataWebPageInputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    URLofDataWebPageInputTextarea.lang = "zh-TW"; // "en";
    URLofDataWebPageInputTextarea.translate = "no"; // "yes";
    // URLofDataWebPageInputTextarea.readonly = "readonly";
    // URLofDataWebPageInputTextarea.disabled = "disabled";
    URLofDataWebPageInputTextarea.rows = "1";
    // URLofDataWebPageInputTextarea.cols = "160";
    // URLofDataWebPageInputTextarea.maxlength = "160";
    // URLofDataWebPageInputTextarea.contenteditable = "true";  // "false";
    URLofDataWebPageInputTextarea.placeholder = "輸入數據源網頁的網址字符串 Input Input the url of the data web page.";
    URLofDataWebPageInputTextarea.textContent = "http://127.0.0.1:8000/ajax.html";
    // ParameterVariableDiv.appendChild(URLofDataWebPageInputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    URLofDataWebPageInputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    URLofDataWebPageInputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };

    // 自定義常量輸入的提示標簽 label，網頁中關鍵詞輸入框元素的 XPath 值;
    let WebKeyWordTextboxElementXPathInputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（網頁中關鍵詞輸入框元素的 XPath 值，WebKeyWordTextboxElementXPathInputLabel）;
    WebKeyWordTextboxElementXPathInputLabel.setAttribute("id", "WebKeyWordTextboxElementXPathInputLabel");
    WebKeyWordTextboxElementXPathInputLabel.innerText = "Web key word textbox element xpath : ";
    // WebKeyWordTextboxElementXPathInputLabel.style.position = "relative";
    WebKeyWordTextboxElementXPathInputLabel.style.left = "auto";
    WebKeyWordTextboxElementXPathInputLabel.style.right = "auto";
    WebKeyWordTextboxElementXPathInputLabel.style.top = "auto";
    WebKeyWordTextboxElementXPathInputLabel.style.buttom = "auto";
    WebKeyWordTextboxElementXPathInputLabel.style.padding_left = "5px";
    WebKeyWordTextboxElementXPathInputLabel.style.vertical_align = "middle";
    WebKeyWordTextboxElementXPathInputLabel.style.text_align = "left";
    WebKeyWordTextboxElementXPathInputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    WebKeyWordTextboxElementXPathInputLabel.style.font_style = "normal";
    WebKeyWordTextboxElementXPathInputLabel.style.font_size = "1em";
    WebKeyWordTextboxElementXPathInputLabel.style.color = "RGBA(0,0,0,0.7)";
    WebKeyWordTextboxElementXPathInputLabel.style.width = "auto";
    WebKeyWordTextboxElementXPathInputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(WebKeyWordTextboxElementXPathInputLabel);

    // 自定義常量輸入框 textarea，網頁中關鍵詞輸入框元素的 XPath 值;
    let WebKeyWordTextboxElementXPathInputTextarea = windowHandle_1.document.createElement("textarea");  // 網頁中關鍵詞輸入框元素的 XPath 值，WebKeyWordTextboxElementXPathInputTextarea;
    WebKeyWordTextboxElementXPathInputTextarea.setAttribute("id", "WebKeyWordTextboxElementXPathInputTextarea");
    // WebKeyWordTextboxElementXPathInputTextarea.style.border = "1px solid #ccc";
    WebKeyWordTextboxElementXPathInputTextarea.style.padding = "5px";
    // WebKeyWordTextboxElementXPathInputTextarea.style.paddingleft = "5px";
    WebKeyWordTextboxElementXPathInputTextarea.style.verticalalign = "top";
    WebKeyWordTextboxElementXPathInputTextarea.style.textalign = "left";
    WebKeyWordTextboxElementXPathInputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    WebKeyWordTextboxElementXPathInputTextarea.style.fontstyle = "normal";
    // WebKeyWordTextboxElementXPathInputTextarea.style.fontsize = "1em";
    // WebKeyWordTextboxElementXPathInputTextarea.style.line_height = "30px";
    WebKeyWordTextboxElementXPathInputTextarea.style.color = "rgba(0,0,0,0.7)";
    WebKeyWordTextboxElementXPathInputTextarea.style.width = "100%";  // "auto", "100px";
    // WebKeyWordTextboxElementXPathInputTextarea.style.min_width = "150px";
    WebKeyWordTextboxElementXPathInputTextarea.style.height = "100%";  // "auto", "100px";
    // WebKeyWordTextboxElementXPathInputTextarea.style.min_height = "150px";
    // WebKeyWordTextboxElementXPathInputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    WebKeyWordTextboxElementXPathInputTextarea.style.word_wrap = "break-word";
    // WebKeyWordTextboxElementXPathInputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // WebKeyWordTextboxElementXPathInputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    WebKeyWordTextboxElementXPathInputTextarea.style.display = "inline-block";  // "none";
    // WebKeyWordTextboxElementXPathInputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // WebKeyWordTextboxElementXPathInputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // WebKeyWordTextboxElementXPathInputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    WebKeyWordTextboxElementXPathInputTextarea.lang = "zh-TW"; // "en";
    WebKeyWordTextboxElementXPathInputTextarea.translate = "no"; // "yes";
    // WebKeyWordTextboxElementXPathInputTextarea.readonly = "readonly";
    // WebKeyWordTextboxElementXPathInputTextarea.disabled = "disabled";
    WebKeyWordTextboxElementXPathInputTextarea.rows = "1";
    // WebKeyWordTextboxElementXPathInputTextarea.cols = "160";
    // WebKeyWordTextboxElementXPathInputTextarea.maxlength = "160";
    // WebKeyWordTextboxElementXPathInputTextarea.contenteditable = "true";  // "false";
    WebKeyWordTextboxElementXPathInputTextarea.placeholder = "輸入網頁中關鍵詞輸入框元素的 XPath 值字符串 Input the web key word textbox element xpath.";
    WebKeyWordTextboxElementXPathInputTextarea.textContent = "/html/body/div/centre/input[1]";
    // ParameterVariableDiv.appendChild(WebKeyWordTextboxElementXPathInputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    WebKeyWordTextboxElementXPathInputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    WebKeyWordTextboxElementXPathInputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
    
    // 自定義常量輸入的提示標簽 label，網頁中關鍵詞按鈕元素的 XPath 值;
    let WebKeyWordQuerySubmitButtonElementXPathInputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（網頁中關鍵詞按鈕元素的 XPath 值，WebKeyWordQuerySubmitButtonElementXPathInputLabel）;
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.setAttribute("id", "WebKeyWordQuerySubmitButtonElementXPathInputLabel");
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.innerText = "Web key word query submit button element xpath : ";
    // WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.position = "relative";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.left = "auto";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.right = "auto";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.top = "auto";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.buttom = "auto";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.padding_left = "5px";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.vertical_align = "middle";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.text_align = "left";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.font_style = "normal";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.font_size = "1em";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.color = "RGBA(0,0,0,0.7)";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.width = "auto";
    WebKeyWordQuerySubmitButtonElementXPathInputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(WebKeyWordQuerySubmitButtonElementXPathInputLabel);

    // 自定義常量輸入框 textarea，網頁中關鍵詞按鈕元素的 XPath 值;
    let WebKeyWordQuerySubmitButtonElementXPathInputTextarea = windowHandle_1.document.createElement("textarea");  // 網頁中關鍵詞按鈕元素的 XPath 值，WebKeyWordQuerySubmitButtonElementXPathInputTextarea;
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.setAttribute("id", "WebKeyWordQuerySubmitButtonElementXPathInputTextarea");
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.border = "1px solid #ccc";
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.padding = "5px";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.paddingleft = "5px";
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.verticalalign = "top";
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.textalign = "left";
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.fontstyle = "normal";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.fontsize = "1em";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.line_height = "30px";
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.color = "rgba(0,0,0,0.7)";
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.width = "100%";  // "auto", "100px";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.min_width = "150px";
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.height = "100%";  // "auto", "100px";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.min_height = "150px";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.word_wrap = "break-word";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.display = "inline-block";  // "none";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.lang = "zh-TW"; // "en";
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.translate = "no"; // "yes";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.readonly = "readonly";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.disabled = "disabled";
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.rows = "1";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.cols = "160";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.maxlength = "160";
    // WebKeyWordQuerySubmitButtonElementXPathInputTextarea.contenteditable = "true";  // "false";
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.placeholder = "輸入網頁中關鍵詞按鈕元素的 XPath 值字符串 Input the web key word query submit button element xpath.";
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.textContent = "/html/body/div/centre/button[1]";
    // ParameterVariableDiv.appendChild(WebKeyWordQuerySubmitButtonElementXPathInputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    WebKeyWordQuerySubmitButtonElementXPathInputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };

    // 自定義常量輸入的提示標簽 label，可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
    let TableWebPageNumberTdElementXPath1InputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值，TableWebPageNumberTdElementXPath1InputLabel）;
    TableWebPageNumberTdElementXPath1InputLabel.setAttribute("id", "TableWebPageNumberTdElementXPath1InputLabel");
    TableWebPageNumberTdElementXPath1InputLabel.innerText = "Table web page number td element xpath-1 : ";
    // TableWebPageNumberTdElementXPath1InputLabel.style.position = "relative";
    TableWebPageNumberTdElementXPath1InputLabel.style.left = "auto";
    TableWebPageNumberTdElementXPath1InputLabel.style.right = "auto";
    TableWebPageNumberTdElementXPath1InputLabel.style.top = "auto";
    TableWebPageNumberTdElementXPath1InputLabel.style.buttom = "auto";
    TableWebPageNumberTdElementXPath1InputLabel.style.padding_left = "5px";
    TableWebPageNumberTdElementXPath1InputLabel.style.vertical_align = "middle";
    TableWebPageNumberTdElementXPath1InputLabel.style.text_align = "left";
    TableWebPageNumberTdElementXPath1InputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    TableWebPageNumberTdElementXPath1InputLabel.style.font_style = "normal";
    TableWebPageNumberTdElementXPath1InputLabel.style.font_size = "1em";
    TableWebPageNumberTdElementXPath1InputLabel.style.color = "RGBA(0,0,0,0.7)";
    TableWebPageNumberTdElementXPath1InputLabel.style.width = "auto";
    TableWebPageNumberTdElementXPath1InputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(TableWebPageNumberTdElementXPath1InputLabel);

    // 自定義常量輸入框 textarea，可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
    let TableWebPageNumberTdElementXPath1InputTextarea = windowHandle_1.document.createElement("textarea");  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值，TableWebPageNumberTdElementXPath1InputTextarea;
    TableWebPageNumberTdElementXPath1InputTextarea.setAttribute("id", "TableWebPageNumberTdElementXPath1InputTextarea");
    // TableWebPageNumberTdElementXPath1InputTextarea.style.border = "1px solid #ccc";
    TableWebPageNumberTdElementXPath1InputTextarea.style.padding = "5px";
    // TableWebPageNumberTdElementXPath1InputTextarea.style.paddingleft = "5px";
    TableWebPageNumberTdElementXPath1InputTextarea.style.verticalalign = "top";
    TableWebPageNumberTdElementXPath1InputTextarea.style.textalign = "left";
    TableWebPageNumberTdElementXPath1InputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    TableWebPageNumberTdElementXPath1InputTextarea.style.fontstyle = "normal";
    // TableWebPageNumberTdElementXPath1InputTextarea.style.fontsize = "1em";
    // TableWebPageNumberTdElementXPath1InputTextarea.style.line_height = "30px";
    TableWebPageNumberTdElementXPath1InputTextarea.style.color = "rgba(0,0,0,0.7)";
    TableWebPageNumberTdElementXPath1InputTextarea.style.width = "100%";  // "auto", "100px";
    // TableWebPageNumberTdElementXPath1InputTextarea.style.min_width = "150px";
    TableWebPageNumberTdElementXPath1InputTextarea.style.height = "100%";  // "auto", "100px";
    // TableWebPageNumberTdElementXPath1InputTextarea.style.min_height = "150px";
    // TableWebPageNumberTdElementXPath1InputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    TableWebPageNumberTdElementXPath1InputTextarea.style.word_wrap = "break-word";
    // TableWebPageNumberTdElementXPath1InputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // TableWebPageNumberTdElementXPath1InputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    TableWebPageNumberTdElementXPath1InputTextarea.style.display = "inline-block";  // "none";
    // TableWebPageNumberTdElementXPath1InputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // TableWebPageNumberTdElementXPath1InputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // TableWebPageNumberTdElementXPath1InputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    TableWebPageNumberTdElementXPath1InputTextarea.lang = "zh-TW"; // "en";
    TableWebPageNumberTdElementXPath1InputTextarea.translate = "no"; // "yes";
    // TableWebPageNumberTdElementXPath1InputTextarea.readonly = "readonly";
    // TableWebPageNumberTdElementXPath1InputTextarea.disabled = "disabled";
    TableWebPageNumberTdElementXPath1InputTextarea.rows = "1";
    // TableWebPageNumberTdElementXPath1InputTextarea.cols = "160";
    // TableWebPageNumberTdElementXPath1InputTextarea.maxlength = "160";
    // TableWebPageNumberTdElementXPath1InputTextarea.contenteditable = "true";  // "false";
    TableWebPageNumberTdElementXPath1InputTextarea.placeholder = "輸入可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值字符串 Input the table web page number td element xpath-1.";
    TableWebPageNumberTdElementXPath1InputTextarea.textContent = "";
    // ParameterVariableDiv.appendChild(TableWebPageNumberTdElementXPath1InputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    TableWebPageNumberTdElementXPath1InputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    TableWebPageNumberTdElementXPath1InputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };

    // 自定義常量輸入的提示標簽 label，當前網頁中可采集數據元素的 XPath 值;
    let RetrievalResultXPath1InputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（當前網頁中可采集數據元素的 XPath 值，RetrievalResultXPath1InputLabel）;
    RetrievalResultXPath1InputLabel.setAttribute("id", "RetrievalResultXPath1InputLabel");
    RetrievalResultXPath1InputLabel.innerText = "Retrieval result xpath-1 : ";
    // RetrievalResultXPath1InputLabel.style.position = "relative";
    RetrievalResultXPath1InputLabel.style.left = "auto";
    RetrievalResultXPath1InputLabel.style.right = "auto";
    RetrievalResultXPath1InputLabel.style.top = "auto";
    RetrievalResultXPath1InputLabel.style.buttom = "auto";
    RetrievalResultXPath1InputLabel.style.padding_left = "5px";
    RetrievalResultXPath1InputLabel.style.vertical_align = "middle";
    RetrievalResultXPath1InputLabel.style.text_align = "left";
    RetrievalResultXPath1InputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    RetrievalResultXPath1InputLabel.style.font_style = "normal";
    RetrievalResultXPath1InputLabel.style.font_size = "1em";
    RetrievalResultXPath1InputLabel.style.color = "RGBA(0,0,0,0.7)";
    RetrievalResultXPath1InputLabel.style.width = "auto";
    RetrievalResultXPath1InputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(RetrievalResultXPath1InputLabel);

    // 自定義常量輸入框 textarea，當前網頁中可采集數據元素的 XPath 值;
    let RetrievalResultXPath1InputTextarea = windowHandle_1.document.createElement("textarea");  // 當前網頁中可采集數據元素的 XPath 值，RetrievalResultXPath1InputTextarea;
    RetrievalResultXPath1InputTextarea.setAttribute("id", "RetrievalResultXPath1InputTextarea");
    // RetrievalResultXPath1InputTextarea.style.border = "1px solid #ccc";
    RetrievalResultXPath1InputTextarea.style.padding = "5px";
    // RetrievalResultXPath1InputTextarea.style.paddingleft = "5px";
    RetrievalResultXPath1InputTextarea.style.verticalalign = "top";
    RetrievalResultXPath1InputTextarea.style.textalign = "left";
    RetrievalResultXPath1InputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    RetrievalResultXPath1InputTextarea.style.fontstyle = "normal";
    // RetrievalResultXPath1InputTextarea.style.fontsize = "1em";
    // RetrievalResultXPath1InputTextarea.style.line_height = "30px";
    RetrievalResultXPath1InputTextarea.style.color = "rgba(0,0,0,0.7)";
    RetrievalResultXPath1InputTextarea.style.width = "100%";  // "auto", "100px";
    // RetrievalResultXPath1InputTextarea.style.min_width = "150px";
    RetrievalResultXPath1InputTextarea.style.height = "100%";  // "auto", "100px";
    // RetrievalResultXPath1InputTextarea.style.min_height = "150px";
    // RetrievalResultXPath1InputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    RetrievalResultXPath1InputTextarea.style.word_wrap = "break-word";
    // RetrievalResultXPath1InputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // RetrievalResultXPath1InputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    RetrievalResultXPath1InputTextarea.style.display = "inline-block";  // "none";
    // RetrievalResultXPath1InputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // RetrievalResultXPath1InputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // RetrievalResultXPath1InputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    RetrievalResultXPath1InputTextarea.lang = "zh-TW"; // "en";
    RetrievalResultXPath1InputTextarea.translate = "no"; // "yes";
    // RetrievalResultXPath1InputTextarea.readonly = "readonly";
    // RetrievalResultXPath1InputTextarea.disabled = "disabled";
    RetrievalResultXPath1InputTextarea.rows = "1";
    // RetrievalResultXPath1InputTextarea.cols = "160";
    // RetrievalResultXPath1InputTextarea.maxlength = "160";
    // RetrievalResultXPath1InputTextarea.contenteditable = "true";  // "false";
    RetrievalResultXPath1InputTextarea.placeholder = "輸入當前網頁中可采集數據元素的 XPath 值字符串 Input the retrieval result xpath-1.";
    RetrievalResultXPath1InputTextarea.textContent = "/html/body/div/centre/div/table";
    // ParameterVariableDiv.appendChild(RetrievalResultXPath1InputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    RetrievalResultXPath1InputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    RetrievalResultXPath1InputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };

    // 自定義常量輸入的提示標簽 label，第二層網頁中需要抓取的數據元素的 XPath 值;
    let SecondLevelWebPageRetrievalResultXPathInputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（第二層網頁中需要抓取的數據元素的 XPath 值，SecondLevelWebPageRetrievalResultXPathInputLabel）;
    SecondLevelWebPageRetrievalResultXPathInputLabel.setAttribute("id", "SecondLevelWebPageRetrievalResultXPathInputLabel");
    SecondLevelWebPageRetrievalResultXPathInputLabel.innerText = "The second level web page retrieval result xpath : ";
    // SecondLevelWebPageRetrievalResultXPathInputLabel.style.position = "relative";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.left = "auto";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.right = "auto";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.top = "auto";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.buttom = "auto";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.padding_left = "5px";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.vertical_align = "middle";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.text_align = "left";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.font_style = "normal";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.font_size = "1em";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.color = "RGBA(0,0,0,0.7)";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.width = "auto";
    SecondLevelWebPageRetrievalResultXPathInputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(SecondLevelWebPageRetrievalResultXPathInputLabel);

    // 自定義常量輸入框 textarea，第二層網頁中需要抓取的數據元素的 XPath 值;
    let SecondLevelWebPageRetrievalResultXPathInputTextarea = windowHandle_1.document.createElement("textarea");  // 第二層網頁中需要抓取的數據元素的 XPath 值，SecondLevelWebPageRetrievalResultXPathInputTextarea;
    SecondLevelWebPageRetrievalResultXPathInputTextarea.setAttribute("id", "SecondLevelWebPageRetrievalResultXPathInputTextarea");
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.style.border = "1px solid #ccc";
    SecondLevelWebPageRetrievalResultXPathInputTextarea.style.padding = "5px";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.style.paddingleft = "5px";
    SecondLevelWebPageRetrievalResultXPathInputTextarea.style.verticalalign = "top";
    SecondLevelWebPageRetrievalResultXPathInputTextarea.style.textalign = "left";
    SecondLevelWebPageRetrievalResultXPathInputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    SecondLevelWebPageRetrievalResultXPathInputTextarea.style.fontstyle = "normal";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.style.fontsize = "1em";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.style.line_height = "30px";
    SecondLevelWebPageRetrievalResultXPathInputTextarea.style.color = "rgba(0,0,0,0.7)";
    SecondLevelWebPageRetrievalResultXPathInputTextarea.style.width = "100%";  // "auto", "100px";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.style.min_width = "150px";
    SecondLevelWebPageRetrievalResultXPathInputTextarea.style.height = "100%";  // "auto", "100px";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.style.min_height = "150px";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    SecondLevelWebPageRetrievalResultXPathInputTextarea.style.word_wrap = "break-word";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    SecondLevelWebPageRetrievalResultXPathInputTextarea.style.display = "inline-block";  // "none";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    SecondLevelWebPageRetrievalResultXPathInputTextarea.lang = "zh-TW"; // "en";
    SecondLevelWebPageRetrievalResultXPathInputTextarea.translate = "no"; // "yes";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.readonly = "readonly";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.disabled = "disabled";
    SecondLevelWebPageRetrievalResultXPathInputTextarea.rows = "1";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.cols = "160";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.maxlength = "160";
    // SecondLevelWebPageRetrievalResultXPathInputTextarea.contenteditable = "true";  // "false";
    SecondLevelWebPageRetrievalResultXPathInputTextarea.placeholder = "輸入第二層網頁中需要抓取的數據元素的 XPath 值字符串 Input the second level web page retrieval result xpath.";
    SecondLevelWebPageRetrievalResultXPathInputTextarea.textContent = "/html/body/div/centre/div/table";
    // ParameterVariableDiv.appendChild(SecondLevelWebPageRetrievalResultXPathInputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    SecondLevelWebPageRetrievalResultXPathInputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    SecondLevelWebPageRetrievalResultXPathInputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };

    // 自定義常量輸入的提示標簽 label，從第一層網頁進入第二層網頁的按鈕元素 XPath 值;
    let EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（從第一層網頁進入第二層網頁的按鈕元素 XPath 值，EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel）;
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.setAttribute("id", "EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel");
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.innerText = "From first level web to second level web xpath-1 : ";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.position = "relative";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.left = "auto";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.right = "auto";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.top = "auto";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.buttom = "auto";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.padding_left = "5px";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.vertical_align = "middle";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.text_align = "left";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.font_style = "normal";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.font_size = "1em";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.color = "RGBA(0,0,0,0.7)";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.width = "auto";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel);

    // 自定義常量輸入框 textarea，從第一層網頁進入第二層網頁的按鈕元素 XPath 值;
    let EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea = windowHandle_1.document.createElement("textarea");  // 從第一層網頁進入第二層網頁的按鈕元素 XPath 值，EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea;
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.setAttribute("id", "EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea");
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.border = "1px solid #ccc";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.padding = "5px";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.paddingleft = "5px";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.verticalalign = "top";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.textalign = "left";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.fontstyle = "normal";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.fontsize = "1em";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.line_height = "30px";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.color = "rgba(0,0,0,0.7)";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.width = "100%";  // "auto", "100px";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.min_width = "150px";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.height = "100%";  // "auto", "100px";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.min_height = "150px";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.word_wrap = "break-word";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.display = "inline-block";  // "none";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.lang = "zh-TW"; // "en";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.translate = "no"; // "yes";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.readonly = "readonly";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.disabled = "disabled";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.rows = "1";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.cols = "160";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.maxlength = "160";
    // EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.contenteditable = "true";  // "false";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.placeholder = "輸入從第一層網頁進入第二層網頁的按鈕元素 XPath 值字符串 Input from first level web to second level web xpath.";
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.textContent = "";
    // ParameterVariableDiv.appendChild(EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };

    // 自定義常量輸入的提示標簽 label，從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
    let FromSecondLevelWebReturnFirstLevelWebXPathInputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（從第二層網頁返回第一層網頁的按鈕元素 XPath 值，FromSecondLevelWebReturnFirstLevelWebXPathInputLabel）;
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.setAttribute("id", "FromSecondLevelWebReturnFirstLevelWebXPathInputLabel");
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.innerText = "From second level web return first level web xpath : ";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.position = "relative";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.left = "auto";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.right = "auto";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.top = "auto";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.buttom = "auto";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.padding_left = "5px";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.vertical_align = "middle";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.text_align = "left";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.font_style = "normal";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.font_size = "1em";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.color = "RGBA(0,0,0,0.7)";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.width = "auto";
    FromSecondLevelWebReturnFirstLevelWebXPathInputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(FromSecondLevelWebReturnFirstLevelWebXPathInputLabel);

    // 自定義常量輸入框 textarea，從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
    let FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea = windowHandle_1.document.createElement("textarea");  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值，FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea;
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.setAttribute("id", "FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea");
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.border = "1px solid #ccc";
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.padding = "5px";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.paddingleft = "5px";
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.verticalalign = "top";
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.textalign = "left";
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.fontstyle = "normal";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.fontsize = "1em";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.line_height = "30px";
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.color = "rgba(0,0,0,0.7)";
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.width = "100%";  // "auto", "100px";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.min_width = "150px";
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.height = "100%";  // "auto", "100px";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.min_height = "150px";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.word_wrap = "break-word";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.display = "inline-block";  // "none";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.lang = "zh-TW"; // "en";
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.translate = "no"; // "yes";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.readonly = "readonly";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.disabled = "disabled";
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.rows = "1";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.cols = "160";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.maxlength = "160";
    // FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.contenteditable = "true";  // "false";
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.placeholder = "輸入從第二層網頁返回第一層網頁的按鈕元素 XPath 值字符串 Input from second level web return first level web xpath.";
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.textContent = "";
    // ParameterVariableDiv.appendChild(FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };

    // 自定義常量輸入的提示標簽 label，目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
    let TableSkipPageTextboxTdElementXPath1InputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（目標網頁中的跳頁頁碼輸入文本框的 xpath 值，TableSkipPageTextboxTdElementXPath1InputLabel）;
    TableSkipPageTextboxTdElementXPath1InputLabel.setAttribute("id", "TableSkipPageTextboxTdElementXPath1InputLabel");
    TableSkipPageTextboxTdElementXPath1InputLabel.innerText = "Table skip page textbox td element xpath-1 : ";
    // TableSkipPageTextboxTdElementXPath1InputLabel.style.position = "relative";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.left = "auto";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.right = "auto";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.top = "auto";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.buttom = "auto";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.padding_left = "5px";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.vertical_align = "middle";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.text_align = "left";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.font_style = "normal";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.font_size = "1em";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.color = "RGBA(0,0,0,0.7)";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.width = "auto";
    TableSkipPageTextboxTdElementXPath1InputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(TableSkipPageTextboxTdElementXPath1InputLabel);

    // 自定義常量輸入框 textarea，目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
    let TableSkipPageTextboxTdElementXPath1InputTextarea = windowHandle_1.document.createElement("textarea");  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值，TableSkipPageTextboxTdElementXPath1InputTextarea;
    TableSkipPageTextboxTdElementXPath1InputTextarea.setAttribute("id", "TableSkipPageTextboxTdElementXPath1InputTextarea");
    // TableSkipPageTextboxTdElementXPath1InputTextarea.style.border = "1px solid #ccc";
    TableSkipPageTextboxTdElementXPath1InputTextarea.style.padding = "5px";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.style.paddingleft = "5px";
    TableSkipPageTextboxTdElementXPath1InputTextarea.style.verticalalign = "top";
    TableSkipPageTextboxTdElementXPath1InputTextarea.style.textalign = "left";
    TableSkipPageTextboxTdElementXPath1InputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    TableSkipPageTextboxTdElementXPath1InputTextarea.style.fontstyle = "normal";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.style.fontsize = "1em";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.style.line_height = "30px";
    TableSkipPageTextboxTdElementXPath1InputTextarea.style.color = "rgba(0,0,0,0.7)";
    TableSkipPageTextboxTdElementXPath1InputTextarea.style.width = "100%";  // "auto", "100px";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.style.min_width = "150px";
    TableSkipPageTextboxTdElementXPath1InputTextarea.style.height = "100%";  // "auto", "100px";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.style.min_height = "150px";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    TableSkipPageTextboxTdElementXPath1InputTextarea.style.word_wrap = "break-word";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // TableSkipPageTextboxTdElementXPath1InputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    TableSkipPageTextboxTdElementXPath1InputTextarea.style.display = "inline-block";  // "none";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // TableSkipPageTextboxTdElementXPath1InputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    TableSkipPageTextboxTdElementXPath1InputTextarea.lang = "zh-TW"; // "en";
    TableSkipPageTextboxTdElementXPath1InputTextarea.translate = "no"; // "yes";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.readonly = "readonly";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.disabled = "disabled";
    TableSkipPageTextboxTdElementXPath1InputTextarea.rows = "1";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.cols = "160";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.maxlength = "160";
    // TableSkipPageTextboxTdElementXPath1InputTextarea.contenteditable = "true";  // "false";
    TableSkipPageTextboxTdElementXPath1InputTextarea.placeholder = "輸入目標網頁中的跳頁頁碼輸入文本框的 xpath 值字符串 Input the table skip page textbox td element xpath-1.";
    TableSkipPageTextboxTdElementXPath1InputTextarea.textContent = "";
    // ParameterVariableDiv.appendChild(TableSkipPageTextboxTdElementXPath1InputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    TableSkipPageTextboxTdElementXPath1InputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    TableSkipPageTextboxTdElementXPath1InputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };

    // 自定義常量輸入的提示標簽 label，目標網頁中的跳頁按鈕的 xpath 值;
    let TableSkipPageSubmitButtonTdElementXPath1InputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（目標網頁中的跳頁按鈕的 xpath 值，TableSkipPageSubmitButtonTdElementXPath1InputLabel）;
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.setAttribute("id", "TableSkipPageSubmitButtonTdElementXPath1InputLabel");
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.innerText = "Table skip page submit button td element xpath-1 : ";
    // TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.position = "relative";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.left = "auto";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.right = "auto";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.top = "auto";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.buttom = "auto";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.padding_left = "5px";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.vertical_align = "middle";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.text_align = "left";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.font_style = "normal";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.font_size = "1em";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.color = "RGBA(0,0,0,0.7)";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.width = "auto";
    TableSkipPageSubmitButtonTdElementXPath1InputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(TableSkipPageSubmitButtonTdElementXPath1InputLabel);

    // 自定義常量輸入框 textarea，目標網頁中的跳頁按鈕的 xpath 值;
    let TableSkipPageSubmitButtonTdElementXPath1InputTextarea = windowHandle_1.document.createElement("textarea");  // 目標網頁中的跳頁按鈕的 xpath 值，TableSkipPageSubmitButtonTdElementXPath1InputTextarea;
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.setAttribute("id", "TableSkipPageSubmitButtonTdElementXPath1InputTextarea");
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.border = "1px solid #ccc";
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.padding = "5px";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.paddingleft = "5px";
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.verticalalign = "top";
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.textalign = "left";
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.fontstyle = "normal";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.fontsize = "1em";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.line_height = "30px";
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.color = "rgba(0,0,0,0.7)";
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.width = "100%";  // "auto", "100px";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.min_width = "150px";
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.height = "100%";  // "auto", "100px";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.min_height = "150px";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.word_wrap = "break-word";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.display = "inline-block";  // "none";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.lang = "zh-TW"; // "en";
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.translate = "no"; // "yes";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.readonly = "readonly";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.disabled = "disabled";
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.rows = "1";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.cols = "160";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.maxlength = "160";
    // TableSkipPageSubmitButtonTdElementXPath1InputTextarea.contenteditable = "true";  // "false";
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.placeholder = "輸入目標網頁中的跳頁按鈕的 xpath 值字符串 Input the table skip page submit button td element xpath-1.";
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.textContent = "";
    // ParameterVariableDiv.appendChild(TableSkipPageSubmitButtonTdElementXPath1InputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    TableSkipPageSubmitButtonTdElementXPath1InputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };

    // 自定義常量輸入的提示標簽 label，目標網頁中的下一頁按鈕的 xpath 值;
    let TableNextPageSubmitButtonImgTdElementXPath1InputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（目標網頁中的下一頁按鈕的 xpath 值，TableNextPageSubmitButtonImgTdElementXPath1InputLabel）;
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.setAttribute("id", "TableNextPageSubmitButtonImgTdElementXPath1InputLabel");
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.innerText = "Table next page submit button image-td element xpath-1 : ";
    // TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.position = "relative";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.left = "auto";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.right = "auto";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.top = "auto";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.buttom = "auto";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.padding_left = "5px";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.vertical_align = "middle";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.text_align = "left";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.font_style = "normal";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.font_size = "1em";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.color = "RGBA(0,0,0,0.7)";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.width = "auto";
    TableNextPageSubmitButtonImgTdElementXPath1InputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(TableNextPageSubmitButtonImgTdElementXPath1InputLabel);

    // 自定義常量輸入框 textarea，目標網頁中的下一頁按鈕的 xpath 值;
    let TableNextPageSubmitButtonImgTdElementXPath1InputTextarea = windowHandle_1.document.createElement("textarea");  // 目標網頁中的下一頁按鈕的 xpath 值，TableNextPageSubmitButtonImgTdElementXPath1InputTextarea;
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.setAttribute("id", "TableNextPageSubmitButtonImgTdElementXPath1InputTextarea");
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.border = "1px solid #ccc";
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.padding = "5px";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.paddingleft = "5px";
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.verticalalign = "top";
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.textalign = "left";
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.fontstyle = "normal";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.fontsize = "1em";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.line_height = "30px";
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.color = "rgba(0,0,0,0.7)";
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.width = "100%";  // "auto", "100px";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.min_width = "150px";
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.height = "100%";  // "auto", "100px";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.min_height = "150px";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.word_wrap = "break-word";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.display = "inline-block";  // "none";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.lang = "zh-TW"; // "en";
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.translate = "no"; // "yes";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.readonly = "readonly";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.disabled = "disabled";
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.rows = "1";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.cols = "160";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.maxlength = "160";
    // TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.contenteditable = "true";  // "false";
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.placeholder = "輸入目標網頁中的下一頁按鈕的 xpath 值字符串 Input the table next page submit button image-td element xpath-1.";
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.textContent = "/html/body/div/centre/button[3]";
    // ParameterVariableDiv.appendChild(TableNextPageSubmitButtonImgTdElementXPath1InputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    TableNextPageSubmitButtonImgTdElementXPath1InputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };

    // 自定義常量輸入的提示標簽 label，目標網頁中的上一頁按鈕的 xpath 值;
    let TableBackPageSubmitButtonImgTdElementXPath1InputLabel = windowHandle_1.document.createElement("label");  // 創建一個 label 節點（目標網頁中的上一頁按鈕的 xpath 值，TableBackPageSubmitButtonImgTdElementXPath1InputLabel）;
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.setAttribute("id", "TableBackPageSubmitButtonImgTdElementXPath1InputLabel");
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.innerText = "Table Back page submit button image-td element xpath-1 : ";
    // TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.position = "relative";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.left = "auto";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.right = "auto";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.top = "auto";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.buttom = "auto";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.padding_left = "5px";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.vertical_align = "middle";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.text_align = "left";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.font_family = "TimesNewRoman, Georgia, Serif";  // "Cursive,LiSu,STXingkai";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.font_style = "normal";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.font_size = "1em";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.color = "RGBA(0,0,0,0.7)";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.width = "auto";
    TableBackPageSubmitButtonImgTdElementXPath1InputLabel.style.height = "auto";  
    // ParameterVariableDiv.appendChild(TableBackPageSubmitButtonImgTdElementXPath1InputLabel);

    // 自定義常量輸入框 textarea，目標網頁中的上一頁按鈕的 xpath 值;
    let TableBackPageSubmitButtonImgTdElementXPath1InputTextarea = windowHandle_1.document.createElement("textarea");  // 目標網頁中的上一頁按鈕的 xpath 值，TableBackPageSubmitButtonImgTdElementXPath1InputTextarea;
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.setAttribute("id", "TableBackPageSubmitButtonImgTdElementXPath1InputTextarea");
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.border = "1px solid #ccc";
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.padding = "5px";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.paddingleft = "5px";
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.verticalalign = "top";
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.textalign = "left";
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.fontfamily = '"FangSong, Times New Roman"' + ', serif';
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.fontstyle = "normal";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.fontsize = "1em";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.line_height = "30px";
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.color = "rgba(0,0,0,0.7)";
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.width = "100%";  // "auto", "100px";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.min_width = "150px";
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.height = "100%";  // "auto", "100px";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.min_height = "150px";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.wrap = "soft";  // "hard"，用 "%OD%OA" （回車/換行）進行分隔;
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.word_wrap = "break-word";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.overflow_x = "hidden";  // visible(默認取值),hidden,auto,scroll;
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.overflow_y = "hidden";  // visible(默認取值),hidden,auto,scroll;
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.display = "inline-block";  // "none";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.hidden = "hidden";  // .style.visibility = "hidden";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.style.resize = none; // 禁用右下角的拖動圖標;
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.defaultValue = "初始值" ; // 文本框初始值;
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.lang = "zh-TW"; // "en";
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.translate = "no"; // "yes";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.readonly = "readonly";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.disabled = "disabled";
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.rows = "1";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.cols = "160";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.maxlength = "160";
    // TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.contenteditable = "true";  // "false";
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.placeholder = "輸入目標網頁中的上一頁按鈕的 xpath 值字符串 Input the table Back page submit button image-td element xpath-1.";
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.textContent = "/html/body/div/centre/button[2]";
    // ParameterVariableDiv.appendChild(TableBackPageSubmitButtonImgTdElementXPath1InputTextarea);
    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };
    // 配置監聽textarea多行文本框伸縮自適應高度;
    TableBackPageSubmitButtonImgTdElementXPath1InputTextarea.oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = windowHandle_1.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(windowHandle_1.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };

    // 在自定義常量輸入框所在的網頁元素 DIV 層 ParameterVariableDiv 中新建一個段落節點 <p> 標簽，用來暫存以後可能會寫入新創建打開的 Web 標籤頁 NewOpenWebPageContainDataButton 中的函數代碼字符串;
    let  OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton = windowHandle_1.document.createElement("p");  // 創建一個網頁元素 p 節點（在操作按鈕所在的網頁元素 DIV 層 OperationModuleDiv 中新建一個段落節點 <p> 標簽，用來暫存以後可能會寫入新創建打開的 Web 標籤頁 NewOpenWebPage 中的函數代碼字符串 OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton）;
    OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton.setAttribute("id", "OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton");
    // OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton.setAttribute("hidden", "hidden");
    OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton.style.display = "block";


    // 以下為製作新創建的用於暫時動態呈現抓取結果的網頁元素 DIV 層的代碼;
    let ResultExhibitsDiv = windowHandle_1.document.createElement("div");  // 創建一個 DIV 層節點（以下為製作新創建的用於暫時動態呈現抓取結果的網頁元素 DIV 層的代碼 ResultExhibitsDiv）;
    ResultExhibitsDiv.setAttribute("id", "ResultExhibitsDiv");
    ResultExhibitsDiv.style.position = "static";
    // ResultExhibitsDiv.style.position = "fixed";
    // ResultExhibitsDiv.style.position = "absolute";
    ResultExhibitsDiv.style.backgroundColor = "transparent";  // "green" ;
    // ResultExhibitsDiv.style.width = "100%";
    // ResultExhibitsDiv.style.height = "100%";
    ResultExhibitsDiv.style.margin = "'auto'";
    // ResultExhibitsDiv.style.margin_left = "1%";
    // ResultExhibitsDiv.style.margin_top = "1%";
    // ResultExhibitsDiv.style.margin_right = "1%";
    // ResultExhibitsDiv.style.margin_bottom = "1%";
    ResultExhibitsDiv.style.border_style = "outset";  // none,solid,dashed,dotted,double ;
    // ResultExhibitsDiv.style.border_left_style = "outset";
    // ResultExhibitsDiv.style.border_top_style = "outset";
    // ResultExhibitsDiv.style.border_right_style = "outset";
    // ResultExhibitsDiv.style.border_bottom_style = "outset";
    ResultExhibitsDiv.style.border_color = "Gray";  // transparent,black,blue,green,orange,purple,red,white,yellow ;
    // ResultExhibitsDiv.style.border_left_color = "rgba(100,149,237,0.7)";
    // ResultExhibitsDiv.style.border_top_color = "rgba(100,149,237,0.7)";
    // ResultExhibitsDiv.style.border_right_color = "rgba(100,149,237,0.7)";
    // ResultExhibitsDiv.style.border_bottom_color = "rgba(100,149,237,0.7)";
    ResultExhibitsDiv.style.border_width = "medium";  // medium,thin,dashed;
    // ResultExhibitsDiv.style.border_left_width = "3px";
    // ResultExhibitsDiv.style.border_top_width = "3px";
    // ResultExhibitsDiv.style.border_right_width = "3px";
    // ResultExhibitsDiv.style.border_bottom_width = "3px";
    ResultExhibitsDiv.style.padding = "'auto'";
    // ResultExhibitsDiv.style.padding_left = "1%";
    // ResultExhibitsDiv.style.padding_top = "1%";
    // ResultExhibitsDiv.style.padding_right = "1%";
    // ResultExhibitsDiv.style.padding_bottom = "1%";
    ResultExhibitsDiv.style.overflow = "'auto'";
    // ResultExhibitsDiv.style.overflow_y = "'auto'";
    // ResultExhibitsDiv.style.overflow_x =  "'auto'";
    // ResultExhibitsDiv.style.float = "none";
    // ResultExhibitsDiv.style.clear = "none";
    // ResultExhibitsDiv.style.zindex = "99999";

    // 新創建一個網頁元素表格節點，用於作爲展示采集到的結果的載體;
    let ResultExhibitsDivTagTable = windowHandle_1.document.createElement("table");  // 使新創建的網頁元素 DIV 層中的，新增節點表格 <table></table> 標簽;
    ResultExhibitsDivTagTable.setAttribute("id", "ResultExhibitsDivTagTable");
    ResultExhibitsDivTagTable.style.border_Collapse = "collapse";  // separate,collapse,inherit ;
    // ResultExhibitsDivTagTable.style.border_width = "1px";
    // ResultExhibitsDivTagTable.style.border_color = "blue";
    // ResultExhibitsDivTagTable.style.border_style = "solid";  // none,solid ;
    // ResultExhibitsDivTagTable.frame= "box";
    // ResultExhibitsDivTagTable.rules = "all";  // "rows","cols" ;
    // ResultExhibitsDivTagTable.border = "1";
    // ResultExhibitsDivTagTable.border_color = "blue";
    // ResultExhibitsDivTagTable.border_style = "solid";  // none,solid ;
    // ResultExhibitsDivTagTable.backgroundColor = "transparent";
    ResultExhibitsDivTagTable.style.captionSide = "bottom";  // "top" ;
    ResultExhibitsDivTagTable.style.emptyCells = "hide";  // show,inherit ;
    // ResultExhibitsDivTagTable.cellpadding = "10";
    // ResultExhibitsDivTagTable.cellspacing = "10";
    // ResultExhibitsDivTagTable.width ="400";
    ResultExhibitsDivTagTable.style.tableLayout = "fixed";  // automatic,inherit,auto ;
    // ResultExhibitsDivTagTable.width = "100px";
    // ResultExhibitsDivTagTable.height = "50px";
    // ResultExhibitsDivTagTable.color = "white";
    // ResultExhibitsDivTagTable.summary="Collected Result Exhibits Table";

    // 新建一個網頁引用第三方包定義的網頁畫布網格元素<canvas-datagrid>用於展示采集到的結果的載體;
    // let Result_Exhibits_Div_Tag_Canvas_Datagrid = canvasDatagrid({
    //     // parentNode: Result_Exhibits_Div, // 聲明畫布(canvas)在網頁中的位置，parentNode: 表示父元素，此句代碼意味著新定義的這個 canvasDatagrid() 元素處在網頁中一個 id="data" 的元素裏邊，本例為網頁中的<div id="data_div"></div>;
    //     editable: true, // 設爲cell内容可編輯;
    //     copyText: true,
    //     pasteText: true,
    //     showCopy: true,
    //     showPaste: true,
    //     borderDragBehavior: 'move',
    //     allowMovingSelection: true,
    //     columnHeaderClickBehavior: 'select',
    //     allowFreezingRows: true,
    //     allowFreezingColumns: true,
    //     allowRowReordering: true,
    //     tree: false,
    //     debug: false,
    //     showPerformance: false,
    //     scrollPointerLock: true,
    //     scrollAnimationPPSThreshold: Number(0.75),
    //     showClearSettingsOption: true,
    //     snapToRow: true,
    //     showRowHeaders: true,
    //     showRowNumbers: true,
    //     showPerformance: false,
    //     touchContextMenuTimeMs: Number(800), // The length of time in milliseconds before a context menu appears on touch start within the touch dead zone.;
    //     autoGenerateSchema: true, // When true, every time data is set the schema will be automatically generated from the data overwriting any existing schema.;
    //     autoResizeColumns: true // When true, all columns will be automatically resized to fit the data in them. Warning! Expensive for large (>100k ~2 seconds) datasets.;
    // });
    let Result_Exhibits_Div_Tag_Canvas_Datagrid = windowHandle_1.document.createElement("canvas-datagrid"); // <canvas-datagrid></canvas-datagrid>;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.editable = true; // 設爲cell内容可編輯;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.copyText = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.pasteText = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.showCopy = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.showPaste = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.borderDragBehavior = 'move';
    Result_Exhibits_Div_Tag_Canvas_Datagrid.allowMovingSelection = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.columnHeaderClickBehavior = 'select';
    Result_Exhibits_Div_Tag_Canvas_Datagrid.allowFreezingRows = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.allowFreezingColumns = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.allowRowReordering = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.tree = false;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.debug = false;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.showPerformance = false;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.scrollPointerLock = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.scrollAnimationPPSThreshold = Number(0.75);
    Result_Exhibits_Div_Tag_Canvas_Datagrid.showClearSettingsOption = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.snapToRow = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.showRowHeaders = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.showRowNumbers = true;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.showPerformance = false;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.touchContextMenuTimeMs = Number(800); // The length of time in milliseconds before a context menu appears on touch start within the touch dead zone.;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.autoGenerateSchema = true; // When true, every time data is set the schema will be automatically generated from the data overwriting any existing schema.;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.autoResizeColumns = true; // When true, all columns will be automatically resized to fit the data in them. Warning! Expensive for large (>100k ~2 seconds) datasets.;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.attributes.showNewRow = true; // Allow the input of new rows at the bottom of the grid.;
    Result_Exhibits_Div_Tag_Canvas_Datagrid.setAttribute("id", "ResultExhibitsDivTagCanvasDatagrid");
    // Result_Exhibits_Div_Tag_Canvas_Datagrid.setAttribute("class", "grid");
    // Result_Exhibits_Div_Tag_Canvas_Datagrid.setAttribute("accesskey", "a");
    // Result_Exhibits_Div_Tag_Canvas_Datagrid.setAttribute("draggable", "true");
    // Result_Exhibits_Div_Tag_Canvas_Datagrid.setAttribute("tabindex", "1");
    // Result_Exhibits_Div_Tag_Canvas_Datagrid.setAttribute("dir", "ltr");
    // Result_Exhibits_Div_Tag_Canvas_Datagrid.setAttribute("data-type", "Upload data exhibition table");
    // Result_Exhibits_Div_Tag_Canvas_Datagrid.setAttribute("contenteditable", "true");
    Result_Exhibits_Div_Tag_Canvas_Datagrid.setAttribute("lang", "zh");
    // Result_Exhibits_Div_Tag_Canvas_Datagrid.style.height = '100%'; // 默認爲 grid.style.height = 'auto';
    // Result_Exhibits_Div_Tag_Canvas_Datagrid.style.width = '100%'; // 默認爲 grid.style.width = 'auto';

    // Add hierarchal items to the context menu.;
    // grid.addEventListener('contextmenu', function (e) {
    //     e.items.push({
    //         title: 'Top level item',
    //         items: [
    //             {
    //                 title: 'Child item #1',
    //                 click: function (ev) {
    //                     grid.data[0].col1 = e.cell.value;
    //                     grid.draw();
    //                 }
    //             },
    //             {
    //                 title: 'Child item #2',
    //                 click: function (ev) {
    //                     grid.data[0].col1 = e.cell.value;
    //                     grid.draw();
    //                 }
    //             }
    //         ]
    //     });
    //     e.items.push({
    //         title: 'You have '
    //             + grid.selectedRows.filter(function (row) { return !!row; }).length
    //             + ' rows selected'
    //     });
    // });

    // Instead of using an array, you can use a function that returns an array.;
    // grid.addEventListener('contextmenu', function (e) {
    //     e.items.push({
    //         title: 'Function based child context menu item',
    //         items: function () {
    //             return [{
    //                 title: 'I was added via a function',
    //                 click: function () { return; }
    //             }];
    //         }
    //     });
    // });

    // Instead of an array, you can use a function that invokes a callback.When you invoke the callback you pass an array to it to add items to the context menu asynchronously.;
    // grid.addEventListener('contextmenu', function (e) {
    //     e.items.push({
    //         title: 'Asynchronous child context menu item',
    //         items: function (callback) {
    //             setTimeout(function () {
    //                 callback([{
    //                     title: 'I was added later',
    //                     click: function () { return; }
    //                 }]);
    //             }, 500);
    //         }
    //     });
    // });

    // You can mutate the existing items in the context menu.;
    // grid.addEventListener('contextmenu', function (e) {
    //     e.items.splice(0, e.items.length);
    //     e.items.push({
    //         title: 'Just me now'
    //     });
    // });


    /*
    例子: 獲取頁面上的全部鏈接;

    let allLinks, thisLink;
    allLinks = document.evaluate('//a[@href]', document, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null);
    for (let i = 0; i < allLinks.snapshotLength; i++)
    {
        thisLink = allLinks.snapshotItem(i);
        // do something with thisLink;
    }

    // 這裏 .document.evaluate 是關鍵的部分。它把 XPath 查詢語句作爲一個字符串，這條 XPath 查詢語句可以找到全部具有 href 屬性的 <a> 元素，並將它們按照隨機的順序依次返回，（這就是説，第一個被返回的元素，并不一定也是網頁上的第一個鏈接元素），隨後，就可以用 allLinks.snapshotItem(i) 函數訪問每一個元素;
    // title[@lang='eng'] 是謂語，指條件選取，所有 title 元素，且這些元素擁有值為 eng 的 lang 屬性;
    // /bookstore/* 指選取 bookstore 元素的所有子元素，//* 指選取文檔中的所有元素，//title[@*] 指選取所有帶有屬性的 title 元素;
    */

    // windowHandle_1.document.evaluate("//a[@href]", windowHandle_1.document, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    // XPathResult.ORDERED_NODE_ITERATOR_TYPE 返回匹配節點的集合，順序和文檔中的一樣;
    // XPathResult.ORDERED_NODE_SNAPSHOT_TYPE 返回一個節點集合片段，在文檔外捕獲節點，這樣將來對文檔的任何修改，不會影響節點集合，節點集合中的順序要和文檔中的一樣;

    /* 以下爲佈局插入操作控制載體 DIV 層和各操作節點 tag 的代碼; */;
    if (windowHandle_1.document.getElementById("OperationModuleDiv") === null) {
        windowHandle_1.document.getElementsByTagName("body").item(0).appendChild(OperationModuleDiv);  /* // 在載入的 web 體 <body> 中新增插入一個 <div> 層節點 OperationModuleDiv 作爲所有操作和顯示按鈕 tag 的母體載體; */
        /* // windowHandle_1.document.body.appendChild(OperationModuleDiv); */
        OperationModuleDiv = windowHandle_1.document.getElementById("OperationModuleDiv");
    } else {
        OperationModuleDiv = windowHandle_1.document.getElementById("OperationModuleDiv");
        // if (window.console) { window.console.log('網頁中已經存在 id 值為: " OperationModuleDiv " 的元素，將獲取該元素作爲自定義元素編輯操作.'); } else { window.console = { log: function () { } }; };
    };

    /* // let SpaceSymbol = windowHandle_1.document.createTextNode("&nbsp");  // 創建一個 TextNode 節點（一個 “空格” 的 HTML 代碼，後面在元素中隔離時候的插入使用）; */
    OperationModuleDiv.appendChild(NewOpenWebPageContainDataButton);
    OperationModuleDiv.appendChild(windowHandle_1.document.createElement("br"));  /* 換行 */;
    OperationModuleDiv.appendChild(Delay_Duration_of_Click_Input_Label);
    OperationModuleDiv.appendChild(Interval_Of_Circle_Click_Input_TextBox_Input);
    OperationModuleDiv.appendChild(Randomization_Relative_Interval_Input_TextBox_Input);
    OperationModuleDiv.appendChild(windowHandle_1.document.createTextNode(" "));  /* // "&nbsp" 在兩個節點中間插入一個空格，首先創建一個TextNode節點（一個“空格”的HTML代碼"&nbsp"，然後再移入windowHandle_1.document）; */
    OperationModuleDiv.appendChild(Data_Source_Page_Level_Radio_Label);  // 想要采集的數據處在目標數據源網頁的第幾個層級上選擇單選框提示標簽;
    OperationModuleDiv.appendChild(windowHandle_1.document.createTextNode(" "));  /* // "&nbsp" 在兩個節點中間插入一個空格，首先創建一個TextNode節點（一個“空格”的HTML代碼"&nbsp"，然後再移入windowHandle_1.document）; */
    OperationModuleDiv.appendChild(Data_Source_Page_Level_1_Radio);  /* // 想要采集的數據處在目標數據源網頁的第幾個層級上選擇單選框元素<input type="radio" value="1">; */
    OperationModuleDiv.appendChild(windowHandle_1.document.createTextNode(Data_Source_Page_Level_1_Radio.getAttribute("value").toString()));  /* // 顯示提示文本"1" <input type="radio" value="1">; */
    OperationModuleDiv.appendChild(windowHandle_1.document.createTextNode(" "));  /* // "&nbsp" 在兩個節點中間插入一個空格，首先創建一個TextNode節點（一個“空格”的HTML代碼"&nbsp"，然後再移入windowHandle_1.document）; */
    OperationModuleDiv.appendChild(Data_Source_Page_Level_2_Radio);  /* // 想要采集的數據處在目標數據源網頁的第幾個層級上選擇單選框元素<input type="radio" value="2">; */
    OperationModuleDiv.appendChild(windowHandle_1.document.createTextNode(Data_Source_Page_Level_2_Radio.getAttribute("value").toString()));  /* // 顯示提示文本"2" <input type="radio" value="2">; */
    OperationModuleDiv.appendChild(windowHandle_1.document.createTextNode(" "));  /* // "&nbsp" 在兩個節點中間插入一個空格，首先創建一個TextNode節點（一個“空格”的HTML代碼"&nbsp"，然後再移入windowHandle_1.document）; */
    OperationModuleDiv.appendChild(Result_Display_Container_table_Radio);  /* // 結果展示載體單選框元素<input type="radio" value="table">; */
    OperationModuleDiv.appendChild(windowHandle_1.document.createTextNode(Result_Display_Container_table_Radio.getAttribute("value").toString()));  /* // 顯示提示文本"table" <input type="radio" value="table">; */
    OperationModuleDiv.appendChild(windowHandle_1.document.createTextNode(" "));  /* // "&nbsp" 在兩個節點中間插入一個空格，首先創建一個TextNode節點（一個“空格”的HTML代碼"&nbsp"，然後再移入windowHandle_1.document）; */
    OperationModuleDiv.appendChild(Result_Display_Container_canvasDatagrid_Radio);  /* // 結果展示載體單選框元素<input type="radio" value="canvas-datagrid">; */
    OperationModuleDiv.appendChild(windowHandle_1.document.createTextNode(Result_Display_Container_canvasDatagrid_Radio.getAttribute("value").toString()));  /* // 顯示提示文本"canvas-datagrid" <input type="radio" value="canvas-datagrid">; */
    /* // let Result_Display_Container_Radio = new Array; */  /* // 展示采集到的結果的載體元素類型選擇單選框<input type="radio" value="table">元素的數組; */;
    /*
    // Result_Display_Container_Radio = windowHandle_1_1.document.getElementsByName("ResultDisplayContainerRadio");
    // let Result_Display_Container_Radio_value = "";
    // for (let i=0; i < Result_Display_Container_Radio.length; i++) {
    //     if (Result_Display_Container_Radio[i].checked) {
    //         // Result_Display_Container_Radio[i].getAttribute("checked");
    //         Result_Display_Container_Radio_value = Result_Display_Container_Radio[i].getAttribute("value");
    //         // Result_Display_Container_Radio_value = Result_Display_Container_Radio[i].value;
    //     };
    // };
    */;
    OperationModuleDiv.appendChild(windowHandle_1.document.createTextNode(" "));  /* // "&nbsp" 在兩個節點中間插入一個空格，首先創建一個TextNode節點（一個“空格”的HTML代碼"&nbsp"，然後再移入windowHandle_1.document）; */
    /* OperationModuleDiv.appendChild(windowHandle_1.document.createElement("br")); */  /* 換行;*/
    OperationModuleDiv.appendChild(NewOpenWebPageButton);
    OperationModuleDiv.appendChild(windowHandle_1.document.createElement("br"));  /* 換行 */;
    OperationModuleDiv.appendChild(QueryKeyWordInputTextAreaLabel);
    OperationModuleDiv.appendChild(QueryKeyWordInputTextBoxInput);
    OperationModuleDiv.appendChild(QueryKeyWordSubmitButton);
    OperationModuleDiv.appendChild(windowHandle_1.document.createTextNode(" "));  /* // "&nbsp" 在兩個節點中間插入一個空格，首先創建一個TextNode節點（一個“空格”的HTML代碼"&nbsp"，然後再移入windowHandle_1.document）; */
    OperationModuleDiv.appendChild(CollectDataStartPageNumberInputTextBoxLabel);
    OperationModuleDiv.appendChild(CollectDataStartPageNumberInputTextBoxInput);
    OperationModuleDiv.appendChild(CollectDataStartPageStartEntryNumberInputTextBoxInput);
    OperationModuleDiv.appendChild(MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel);
    OperationModuleDiv.appendChild(windowHandle_1.document.createTextNode(" "));  /* // "&nbsp" 在兩個節點中間插入一個空格，首先創建一個TextNode節點（一個“空格”的HTML代碼"&nbsp"，然後再移入windowHandle_1.document）; */
    OperationModuleDiv.appendChild(CollectDataEndPageNumberInputTextBoxLabel);
    OperationModuleDiv.appendChild(CollectDataEndPageNumberInputTextBoxInput);
    OperationModuleDiv.appendChild(CollectDataEndPageEndEntryNumberInputTextBoxInput);
    OperationModuleDiv.appendChild(ExtractCanbeCollectedWebPageNumberButton);
    /* // OperationModuleDiv.appendChild(SpaceSymbol);  // 在兩個節點中間插入一個空格; */
    /* // OperationModuleDiv.appendChild(DataCollectStatusLabelOneLabel); */
    /* // OperationModuleDiv.appendChild(SpaceSymbol);  // 在兩個節點中間插入一個空格; */
    OperationModuleDiv.appendChild(windowHandle_1.document.createElement("br"));  /* 換行 */;
    OperationModuleDiv.appendChild(StartORStopCollectDataButton);
    /* // OperationModuleDiv.appendChild(SpaceSymbol);  // 在兩個節點中間插入一個空格; */
    OperationModuleDiv.appendChild(DataCollectStatusLabelTwoLabel);
    /* // OperationModuleDiv.appendChild(SpaceSymbol);  // 在兩個節點中間插入一個空格; */
    /* // OperationModuleDiv.appendChild(DataCollectStatusLabelThreeLabel); */
    /* // OperationModuleDiv.appendChild(SpaceSymbol);  // 在兩個節點中間插入一個空格; */
    OperationModuleDiv.appendChild(CollectResultFromMemoryToHardDiskButton);
    /* // OperationModuleDiv.appendChild(SpaceSymbol);  // 在兩個節點中間插入一個空格; */
    OperationModuleDiv.appendChild(StoredCollectResultFromHardDiskToMemoryButton);
    OperationModuleDiv.appendChild(FilePathSaveCollectedData);
    OperationModuleDiv.appendChild(windowHandle_1.document.createElement("br"));  /* 換行 */;

    /* // 在新增 <div> 塊 OperationModuleDiv 中插入一個 <p></p> 節點，用於暫存以後可能會寫入新創建打開的 Web 標籤頁 NewOpenWebPage 中的函數代碼字符串; */
    OperationModuleDiv.appendChild(OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton);
    let TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = windowHandle_1.document.createElement("span");  /* // 新增一個 <span></span> 標簽，用於存放以後可能會寫入新創建打開的 Web 標籤頁 NewOpenWebPage 中的其中某一個函數的代碼字符串; */
    TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton.setAttribute("id", "TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton");
    TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton.style.display = "none";  /* // none 此元素不會被顯示，block 此元素將顯示爲塊級元素，此元素前後會帶有換行符，inline 默認值，此元素會被顯示爲内聯元素，元素前後沒有換行符，inline-block 行内塊元素（CSS2.1 新增的值），table 此元素會作爲塊級表格來顯示（類似 <table>），表格前後帶有換行符，inline-table 此元素會作爲内聯表格來顯示（類似 <table>）; */
    TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton.innerHTML = TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton;
    OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton.appendChild(TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton);


    /* 以下爲佈局插入操作控制數據源網頁自定義常量值輸入載體 DIV 層和各文本輸入框 textarea 節點 tag 的代碼; */;
    if (windowHandle_1.document.getElementById("ParameterVariableDiv") === null) {
        windowHandle_1.document.getElementsByTagName("body").item(0).appendChild(ParameterVariableDiv);  // 在載入的 web 體 <body> 中新增插入一個 <div> 層節點 ParameterVariableDiv 作爲數據源網頁自定義常量值輸入的載體;
        // windowHandle_1.document.body.appendChild(ParameterVariableDiv);
        ParameterVariableDiv = windowHandle_1.document.getElementById("ParameterVariableDiv");
    } else {
        ParameterVariableDiv = windowHandle_1.document.getElementById("ParameterVariableDiv");
        // if (window.console) { window.console.log('網頁中已經存在 id 值為: " ParameterVariableDiv " 的元素，將獲取該元素作爲自定義元素編輯操作.'); } else { window.console = { log: function () { } }; };
    };
    ParameterVariableDiv.appendChild(CustomOpenContainDataWebPageNameInputLabel);
    ParameterVariableDiv.appendChild(CustomOpenContainDataWebPageNameInputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));  /* 換行 */;
    ParameterVariableDiv.appendChild(URLofDataWebPageInputLabel);
    ParameterVariableDiv.appendChild(URLofDataWebPageInputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));
    ParameterVariableDiv.appendChild(WebKeyWordTextboxElementXPathInputLabel);
    ParameterVariableDiv.appendChild(WebKeyWordTextboxElementXPathInputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));
    ParameterVariableDiv.appendChild(WebKeyWordQuerySubmitButtonElementXPathInputLabel);
    ParameterVariableDiv.appendChild(WebKeyWordQuerySubmitButtonElementXPathInputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));
    ParameterVariableDiv.appendChild(TableWebPageNumberTdElementXPath1InputLabel);
    ParameterVariableDiv.appendChild(TableWebPageNumberTdElementXPath1InputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));
    ParameterVariableDiv.appendChild(RetrievalResultXPath1InputLabel);
    ParameterVariableDiv.appendChild(RetrievalResultXPath1InputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));
    ParameterVariableDiv.appendChild(SecondLevelWebPageRetrievalResultXPathInputLabel);
    ParameterVariableDiv.appendChild(SecondLevelWebPageRetrievalResultXPathInputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));
    ParameterVariableDiv.appendChild(EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputLabel);
    ParameterVariableDiv.appendChild(EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));
    ParameterVariableDiv.appendChild(FromSecondLevelWebReturnFirstLevelWebXPathInputLabel);
    ParameterVariableDiv.appendChild(FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));
    ParameterVariableDiv.appendChild(TableSkipPageTextboxTdElementXPath1InputLabel);
    ParameterVariableDiv.appendChild(TableSkipPageTextboxTdElementXPath1InputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));
    ParameterVariableDiv.appendChild(TableSkipPageSubmitButtonTdElementXPath1InputLabel);
    ParameterVariableDiv.appendChild(TableSkipPageSubmitButtonTdElementXPath1InputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));
    ParameterVariableDiv.appendChild(TableNextPageSubmitButtonImgTdElementXPath1InputLabel);
    ParameterVariableDiv.appendChild(TableNextPageSubmitButtonImgTdElementXPath1InputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));
    ParameterVariableDiv.appendChild(TableBackPageSubmitButtonImgTdElementXPath1InputLabel);
    ParameterVariableDiv.appendChild(TableBackPageSubmitButtonImgTdElementXPath1InputTextarea);
    ParameterVariableDiv.appendChild(windowHandle_1.document.createElement("br"));

    /* // 在新增 <div> 塊 ParameterVariableDiv 中插入一個 <p></p> 節點，用於暫存以後可能會寫入新創建打開的 Web 標籤頁 NewOpenWebPageContainDataButton 中的函數代碼字符串; */
    ParameterVariableDiv.appendChild(OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton);
    let TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = windowHandle_1.document.createElement("span");  /* // 新增一個 <span></span> 標簽，用於存放以後可能會寫入新創建打開的 Web 標籤頁 NewOpenWebPageContainDataButton 中的其中某一個函數的代碼字符串; */
    TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton.setAttribute("id", "TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton");
    TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton.style.display = "none";  /* // none 此元素不會被顯示，block 此元素將顯示爲塊級元素，此元素前後會帶有換行符，inline 默認值，此元素會被顯示爲内聯元素，元素前後沒有換行符，inline-block 行内塊元素（CSS2.1 新增的值），table 此元素會作爲塊級表格來顯示（類似 <table>），表格前後帶有換行符，inline-table 此元素會作爲内聯表格來顯示（類似 <table>）; */
    TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton.innerHTML = TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton;
    OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton.appendChild(TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton);


    /* 以下為佈局插入抓取結果呈現載體 DIV 層的代碼; */;
    if (windowHandle_1.document.getElementById("ResultExhibitsDiv") === null) {
        windowHandle_1.document.getElementsByTagName("body").item(0).appendChild(ResultExhibitsDiv);  // 在載入的 web 體 <body> 中新增插入一個 <div> 層節點 ResultExhibitsDiv 作爲呈現抓取結果的載體;
        // windowHandle_1.document.body.appendChild(ResultExhibitsDiv);
        ResultExhibitsDiv = windowHandle_1.document.getElementById("ResultExhibitsDiv");
    } else {
        ResultExhibitsDiv = windowHandle_1.document.getElementById("ResultExhibitsDiv");
        // if (window.console) { window.console.log('網頁中已經存在 id 值為: " ResultExhibitsDiv " 的元素，將獲取該元素作爲自定義元素編輯操作.'); } else { window.console = { log: function () { } }; };
    };
    /*
    // let ResultExhibitsDivTagCenter = windowHandle_1.document.createElement("center");  // 使新增 DIV 層中的新增節點居中顯示，也就是在 DIV 層中先插入一個 <center></center> 標簽;
    // ResultExhibitsDivTagCenter.setAttribute("id", "ResultExhibitsDivTagCenter");
    // ResultExhibitsDiv.appendChild(ResultExhibitsDivTagCenter);
    // ResultExhibitsDivTagCenter.appendChild(ResultExhibitsDivTagTable);
    */;


    /* 以下為佈局插入自定義 JavaScript 代碼載體 <script> 標簽的代碼; */;
    // /* 創建一個 script 節點（各種操作所用到的 JavaScript 函數集合 DivJavaScriptFunctionAggregate） */;
    // let DivJavaScriptFunctionAggregateScript = windowHandle_1.document.createElement("script");  /* 創建一個 script 節點（各種操作所用到的 JavaScript 函數集合 DivJavaScriptFunctionAggregate） */;
    // DivJavaScriptFunctionAggregateScript.setAttribute("id", "DivJavaScriptFunctionAggregateScript");
    // DivJavaScriptFunctionAggregateScript.setAttribute("type", "text/javascript");
    // DivJavaScriptFunctionAggregateScript.setAttribute("language", "javascript");
    // /* // 在載入的 web 體 <body> 中新增插入一個 <script> 脚本節點 DivJavaScriptFunctionAggregateScript 作爲所有自定義的 JavaScript 代碼 tag 的母體載體; */
    // if (windowHandle_1.document.getElementById("DivJavaScriptFunctionAggregateScript") === null) {
    //     windowHandle_1.document.getElementsByTagName("body").item(0).appendChild(DivJavaScriptFunctionAggregateScript);  /* // 在載入的 web 體 <body> 中新增插入一個 <script> 脚本節點 DivJavaScriptFunctionAggregateScript 作爲所有自定義的 JavaScript 代碼 tag 的母體載體; */
    //     DivJavaScriptFunctionAggregateScript = windowHandle_1.document.getElementById("DivJavaScriptFunctionAggregateScript")
    // } else {
    //     DivJavaScriptFunctionAggregateScript = windowHandle_1.document.getElementById("DivJavaScriptFunctionAggregateScript");
    //     // if (window.console) { window.console.log('網頁中已經存在 id 值為: " DivJavaScriptFunctionAggregateScript " 的元素，將獲取該元素作爲自定義元素編輯操作.'); } else { window.console = { log: function () { } }; };
    // };

    // /* // 傳入全局變量，目標網頁元素的 XPath 值; */
    // let GlobalVariableWebElementXPathCodeString = windowHandle_1.document.createTextNode(';'+
    //     'var ContainDataWebPageURL = "' + ContainDataWebPageURL + '";' +
    //     'var WebKeyWordTextboxElement_XPath = "' + WebKeyWordTextboxElement_XPath + '";' +
    //     'var WebKeyWordQuerySubmitButtonElement_XPath = "' + WebKeyWordQuerySubmitButtonElement_XPath + '";' +
    //     'var TableWebPageNumberTdElement_XPath_1 = "' + TableWebPageNumberTdElement_XPath_1 + '";' +
    //     'var RetrievalResult_XPath_1 = "' + RetrievalResult_XPath_1 + '";' +
    //     /* 'var DelayAfterClickFirstLevelWebSkipPageButton = parseInt(' + DelayAfterClickFirstLevelWebSkipPageButton + ');' + */
    //     /* 'var DelayAfterClickFirstLevelWebNextPageButton = parseInt(' + DelayAfterClickFirstLevelWebNextPageButton + ');' + */
    //     /* 'var DelayAfterClickEntrySecondLevelWebButton = parseInt(' + DelayAfterClickEntrySecondLevelWebButton + ');' + */
    //     /* 'var DelayAfterClickReturnFirstLevelWebButton = parseInt(' + DelayAfterClickReturnFirstLevelWebButton + ');' + */
    //     /* 'var IntervalOfCircleClickNextPageButton = parseInt(' + IntervalOfCircleClickNextPageButton + ');' + */
    //     // 'var NumberOfItemInThisSecondLevelWebPage = parseInt(' + NumberOfItemInThisSecondLevelWebPage + ');' +
    //     'var SecondLevelWebPageRetrievalResult_XPath = "' + SecondLevelWebPageRetrievalResult_XPath + '";' +
    //     'var FromSecondLevelWebReturnFirstLevelWeb_XPath = "' + FromSecondLevelWebReturnFirstLevelWeb_XPath + '";' +
    //     'var TableSkipPageTextboxTdElement_XPath_1 = "' + TableSkipPageTextboxTdElement_XPath_1 + '";' +
    //     'var TableSkipPageSubmitButtonTdElement_XPath_1 = "' + TableSkipPageSubmitButtonTdElement_XPath_1 + '";' +
    //     'var TableNextPageSubmitButtonImgTdElement_XPath_1 = "' + TableNextPageSubmitButtonImgTdElement_XPath_1 + '";' +
    //     'var TableBackPageSubmitButtonImgTdElement_XPath_1 = "' + TableBackPageSubmitButtonImgTdElement_XPath_1 + '";' +
    //     'var TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = "' + TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton + '";' +
    //     'var TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = "' + TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton + '";'
    //     /* "var Interval_Of_Circle_Click_Input_TextBox_Input_value = '" + Interval_Of_Circle_Click_Input_TextBox_Input_value + "';" + */
    //     /* "var Randomization_Relative_Interval_Input_TextBox_Input_value = '" + Randomization_Relative_Interval_Input_TextBox_Input_value + "';" + */
    //     /* "let Result_Display_Container_Radio_value = '" + Result_Display_Container_Radio_value + "';" */
    // );  /* // 聲明全局變量，獲取網頁中元素的 XPath 路徑字符串; */
    // DivJavaScriptFunctionAggregateScript.appendChild(GlobalVariableWebElementXPathCodeString);  /* // 插入聲明的全局變量; */

    // /* // 聲明全局變量; */
    // let GlobalVariableDeclarationStatementCodeString = windowHandle_1.document.createTextNode(';var Interval_Of_Circle_Click_value = parseInt(1000);var Randomization_Relative_Interval = parseFloat(0.2);var Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));var Data_Level = parseInt(2);var PublicVariableCollectResultStoredStringArray = new Array();var PublicVariableNewOpenWebPageButtonClickNumber = parseInt(0);var PublicVariableStartORStopCollectDataButtonClickState = Boolean(true);var OpenResultExhibitsWebPageName = "' + OpenResultExhibitsWebPageName + '"; var PublicVariableResultExhibitsWebPage = new Object();PublicVariableResultExhibitsWebPage.name = "";var Open_Contain_Data_Web_Page_Name = "' + Open_Contain_Data_Web_Page_Name + '";var PublicVariableContainDataWebPage = new Object();PublicVariableContainDataWebPage.name = "";var PublicVariableNewOpenWebPageContainDataButtonClickNumber = parseInt(0);');  /* // 聲明全局變量; */
    // DivJavaScriptFunctionAggregateScript.appendChild(GlobalVariableDeclarationStatementCodeString);  /* // 插入聲明的全局變量; */

    // let FunctionNewDivOuterHTMLExhibits = windowHandle_1.document.createTextNode(FunctionNewDivOuterHTMLExhibitsCodeString);  /* 臨時語句用於調試查看; */
    // DivJavaScriptFunctionAggregateScript.appendChild(FunctionNewDivOuterHTMLExhibits);  /* 臨時語句用於調試; */
    // let FunctionOpenWebPageContainData = windowHandle_1.document.createTextNode(FunctionOpenWebPageContainDataCodeString);  /* // 創建一個 TextNode 節點（新增 DIV 層中的 <script> 節點裏的，創建新窗口並加載目標數據源網頁的函數的字符串 FunctionQueryKeyWordCodeString）; */
    // DivJavaScriptFunctionAggregateScript.appendChild(FunctionOpenWebPageContainData);  /* // 插入到 <script> 節點中; */
    // let FunctionQueryKeyWord = windowHandle_1.document.createTextNode(FunctionQueryKeyWordCodeString);  /* // 創建一個 TextNode 節點（新增 DIV 層中的 <script> 節點裏的，關鍵詞查詢函數的代碼字符串 FunctionQueryKeyWordCodeString）; */
    // DivJavaScriptFunctionAggregateScript.appendChild(FunctionQueryKeyWord);  /* // 插入到 <script> 節點中; */
    // let FunctionExtractPageNumber = windowHandle_1.document.createTextNode(FunctionExtractPageNumberCodeString);  /* // 創建一個 TextNode 節點（新增 DIV 層中的 <script> 節點裏的返回頁碼函數的代碼字符串 FunctionExtractPageNumberCodeString）; */
    // DivJavaScriptFunctionAggregateScript.appendChild(FunctionExtractPageNumber);
    // let FunctionSkipPage = windowHandle_1.document.createTextNode(FunctionSkipPageCodeString);  /* // 創建一個 TextNode 節點（新增 DIV 層中的 <script> 節點裏的跳頁 goint 函數的代碼字符串 FunctionSkipPageCodeString）; */
    // DivJavaScriptFunctionAggregateScript.appendChild(FunctionSkipPage);
    // let FunctionNextPage = windowHandle_1.document.createTextNode(FunctionNextPageCodeString);  /* // 創建一個 TextNode 節點（新增 DIV 層中的 <script> 節點裏的下一頁函數的代碼字符串 FunctionNextPageCodeString）; */
    // DivJavaScriptFunctionAggregateScript.appendChild(FunctionNextPage);
    // let FunctionObtainRetrievalResult = windowHandle_1.document.createTextNode(FunctionObtainRetrievalResultCodeString);  /* // 創建一個 TextNode 节点（新增 DIV 層中的 <script> 節點裏的獲取查詢結果的表格中的内容函數的代碼字符串 FunctionObtainRetrievalResultCodeString）; */
    // DivJavaScriptFunctionAggregateScript.appendChild(FunctionObtainRetrievalResult);
    // let FunctionDisplayData = windowHandle_1.document.createTextNode(FunctionDisplayDataCodeString);  /* // 創建一個 TextNode 節點（新增 DIV 層中的 <script> 節點裏的開始采集函數的代碼字符串 FunctionDisplayDataCodeString）; */
    // DivJavaScriptFunctionAggregateScript.appendChild(FunctionDisplayData);
    // let FunctionStartORStopCollectData = windowHandle_1.document.createTextNode(FunctionStartORStopCollectDataCodeString);  /* // 創建一個 TextNode 節點（新增 DIV 層中的 <script> 節點裏的開始采集函數的代碼字符串 FunctionStartORStopCollectDataCodeString）; */
    // DivJavaScriptFunctionAggregateScript.appendChild(FunctionStartORStopCollectData);
    // let FunctionCollectResultFromMemoryToHardDisk = windowHandle_1.document.createTextNode(FunctionCollectResultFromMemoryToHardDiskCodeString);  /* // 創建一個 TextNode 節點（新增 DIV 層中的 <script> 節點裏的保存結果函數的代碼字符串 FunctionCollectResultFromMemoryToHardDiskCodeString）; */
    // DivJavaScriptFunctionAggregateScript.appendChild(FunctionCollectResultFromMemoryToHardDisk);
    // let FunctionStoredCollectResultFromHardDiskToMemory = windowHandle_1.document.createTextNode(FunctionStoredCollectResultFromHardDiskToMemoryCodeString);  /* // 創建一個 TextNode 節點（新增 DIV 層中的 <script> 節點裏的導入硬盤文檔函數的代碼字符串 FunctionStoredCollectResultFromHardDiskToMemoryCodeString）; */
    // DivJavaScriptFunctionAggregateScript.appendChild(FunctionStoredCollectResultFromHardDiskToMemory);  
    // let FunctionNewOpenWebPage = windowHandle_1.document.createTextNode(FunctionNewOpenWebPageCodeString);  /* // 創建一個 TextNode 節點（新增 DIV 層中的 <script> 節點裏的新建一個 Web 標籤頁函數的代碼字符串 FunctionNewOpenWebPageCodeString）; */
    // DivJavaScriptFunctionAggregateScript.appendChild(FunctionNewOpenWebPage);
    // let ForSubpageCallFunction = windowHandle_1.document.createTextNode(ForSubpageCallFunctionCodeString);  /* // 創建一個 TextNode 節點（新增 DIV 層中的 <script> 節點裏保存的用於新創建打開網頁調用的函數的代碼字符串 ForSubpageCallFunctionCodeString）; */
    // DivJavaScriptFunctionAggregateScript.appendChild(ForSubpageCallFunction);

    // /* // let FunctionCollectResultFromMemoryToHardDisk = windowHandle_1.document.createTextNode(FunctionCollectResultFromMemoryToHardDiskCodeString);  // 創建一個 TextNode 節點（新增 DIV 層中的 <script> 節點裏的返回頁碼函數的代碼字符串 FunctionCollectResultFromMemoryToHardDiskCodeString）; */
    // /* // DivJavaScriptFunctionAggregateScript.appendChild(FunctionCollectResultFromMemoryToHardDisk); */
};


// 數據源網頁的網址;
var ContainDataWebPageURL = "http://127.0.0.1:8000/ajax.html";
if (window.document.getElementById("URLofDataWebPageInputTextarea") !== null) {
    ContainDataWebPageURL = window.document.getElementById("URLofDataWebPageInputTextarea").value;
};
/*
// 目標網頁中的查詢關鍵詞輸入文本框 xpath ;
<input name="TextBox1" type="text" maxlength="20" id="TextBox1" style="width:250px;"></input>
//*[@id="TextBox1"]
//*[@id="keyword"]
/html/body/div/centre/input[1]
/html/body/div/centre/input[1][@id="TextBox1"]
// /html/body/div/centre/input[1]#TextBox1;
/html/body/div/centre/input[1][@name="TextBox1"]
*/
// 網頁中關鍵詞輸入框元素的 XPath 值;
var WebKeyWordTextboxElement_XPath = "/html/body/div/centre/input[1]";
if (window.document.getElementById("WebKeyWordTextboxElementXPathInputTextarea") !== null) {
    WebKeyWordTextboxElement_XPath = window.document.getElementById("WebKeyWordTextboxElementXPathInputTextarea").value;
};
/*
// 目標網頁中的關鍵詞查詢按鈕 xpath ;
<input type="submit" name="Button27" value="收费查询" id="Button27" class="btclass1">
/html/body/div/centre/button[1]
/html/body/div/centre/button[1][@id="Button27"]
/html/body/div/centre/button[1][@name="Button27"]
*/
// 網頁中關鍵詞查詢按鈕元素的 XPath 值;
var WebKeyWordQuerySubmitButtonElement_XPath = "/html/body/div/centre/button[1]";
if (window.document.getElementById("WebKeyWordQuerySubmitButtonElementXPathInputTextarea") !== null) {
    WebKeyWordQuerySubmitButtonElement_XPath = window.document.getElementById("WebKeyWordQuerySubmitButtonElementXPathInputTextarea").value;
};
/*
// 目標網頁中的結果頁碼顯示表格元素 xpath ;
//*[@id="content"]/table[4]/tbody/tr/td[1]
/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div[@id="content"]/div/table[4]/tbody/tr/td[1]
/html/body/div/centre/label
*/
// 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
var TableWebPageNumberTdElement_XPath_1 = "/html/body/div/centre/label";
if (window.document.getElementById("TableWebPageNumberTdElementXPath1InputTextarea") !== null) {
    TableWebPageNumberTdElement_XPath_1 = window.document.getElementById("TableWebPageNumberTdElementXPath1InputTextarea").value;
};
/*
// 目標網頁中的數據表格 xpath ;
//*[@id="content"]/table[2]/tbody
/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div/div/table[2]/tbody
/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div/table[2]/tbody
/html/body/div/centre/div/table[1]/td/p
/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div/table[2]/tbody/tr[1]/td/p
//*[@id="content"]
//*[@id="content"]/table[4]
*/
// 當前網頁中可采集數據元素的 XPath 值;
var RetrievalResult_XPath_1 = "/html/body/div/centre/div/table";
if (window.document.getElementById("RetrievalResultXPath1InputTextarea") !== null) {
    RetrievalResult_XPath_1 = window.document.getElementById("RetrievalResultXPath1InputTextarea").value;
};
// // 第二層網頁中需要抓取的數據的條目數目;
var NumberOfItemInThisSecondLevelWebPage = parseInt(27);
if (window.document.getElementById("NumberOfItemInThisSecondLevelWebPageInputTextarea") !== null) {
    NumberOfItemInThisSecondLevelWebPage = parseInt(window.document.getElementById("NumberOfItemInThisSecondLevelWebPageInputTextarea").value);
};
// 第二層網頁中需要抓取的數據元素的 XPath 值;
var SecondLevelWebPageRetrievalResult_XPath = "/html/body/div/centre/div/table";
if (window.document.getElementById("SecondLevelWebPageRetrievalResultXPathInputTextarea") !== null) {
    SecondLevelWebPageRetrievalResult_XPath = window.document.getElementById("SecondLevelWebPageRetrievalResultXPathInputTextarea").value;
};
// 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
var EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1 = "/html/body/div/centre/div/table";
if (window.document.getElementById("EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea") !== null) {
    EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1 = window.document.getElementById("EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea").value;
};
// 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
var FromSecondLevelWebReturnFirstLevelWeb_XPath = "/html/body/div/centre/button[5]";
if (window.document.getElementById("FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea") !== null) {
    FromSecondLevelWebReturnFirstLevelWeb_XPath = window.document.getElementById("FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea").value;
};
/*
// 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
//*[@id="goInt"]
//*[@id="content"]/table[4]/tbody/tr/form
/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div/table[4]/tbody/tr/form
/html/body/div/centre/input[2]
/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div/table[4]/tbody/tr/td[7]/input[1]
<input name="goInt" id="goInt" value="1" size="4" type="text">
*/
// 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
var TableSkipPageTextboxTdElement_XPath_1 = "/html/body/div/centre/input[2]";
if (window.document.getElementById("TableSkipPageTextboxTdElementXPath1InputTextarea") !== null) {
    TableSkipPageTextboxTdElement_XPath_1 = window.document.getElementById("TableSkipPageTextboxTdElementXPath1InputTextarea").value;
};
/*
// 目標網頁中的跳頁按鈕的 xpath 值;
//*[@id="content"]/table[4]/tbody/tr/td[8]/input
/html/body/div/centre/button[4][1]
/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div/table[4]/tbody/tr/td[8]/input[1]
<input src="images/dataanniu_11.gif" style="cursor:pointer" type="image" width="37" height="17">
*/
// 目標網頁中的跳頁按鈕的 xpath 值;
var TableSkipPageSubmitButtonTdElement_XPath_1 = "/html/body/div/centre/button[4]";
if (window.document.getElementById("TableSkipPageSubmitButtonTdElementXPath1InputTextarea") !== null) {
    TableSkipPageSubmitButtonTdElement_XPath_1 = window.document.getElementById("TableSkipPageSubmitButtonTdElementXPath1InputTextarea").value;
};
/*
// 目標網頁中的下一頁按鈕的 xpath 值;
//*[@id="content"]/table[4]/tbody/tr/td[5]/img  
/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div[@id="content"]/div/table[4]/tbody/tr/td[4]/img
/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div/table[4]/tbody/tr/td[5]/img
<img src="images/dataanniu_07.gif" onclick="javascript:devPage(2)" style="cursor:pointer" width="57" height="17">
*/
// 目標網頁中的下一頁按鈕的 xpath 值;
var TableNextPageSubmitButtonImgTdElement_XPath_1 = "/html/body/div/centre/button[3]";
if (window.document.getElementById("TableNextPageSubmitButtonImgTdElementXPath1InputTextarea") !== null) {
    TableNextPageSubmitButtonImgTdElement_XPath_1 = window.document.getElementById("TableNextPageSubmitButtonImgTdElementXPath1InputTextarea").value;
};
/*
// 目標網頁中的上一頁按鈕的 xpath 值;
//*[@id="content"]/table[4]/tbody/tr/td[5]/img  
/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div[@id="content"]/div/table[4]/tbody/tr/td[4]/img
/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div/table[4]/tbody/tr/td[5]/img
<img src="images/dataanniu_07.gif" onclick="javascript:devPage(2)" style="cursor:pointer" width="57" height="17">
*/
// 目標網頁中的上一頁按鈕的 xpath 值;
var TableBackPageSubmitButtonImgTdElement_XPath_1 = "/html/body/div/centre/button[2]";
if (window.document.getElementById("TableBackPageSubmitButtonImgTdElementXPath1InputTextarea") !== null) {
    TableBackPageSubmitButtonImgTdElement_XPath_1 = window.document.getElementById("TableBackPageSubmitButtonImgTdElementXPath1InputTextarea").value;
};


// 用於加載數據源網頁的新建窗口變量;
var Open_Contain_Data_Web_Page_Name = "testContainDataWebPage";  // 自定義的窗口命名;
if (window.document.getElementById("CustomOpenContainDataWebPageNameInputTextarea") !== null) {
    Open_Contain_Data_Web_Page_Name = window.document.getElementById("CustomOpenContainDataWebPageNameInputTextarea").value;
};
var PublicVariableNewOpenWebPageContainDataButtonClickNumber = parseInt(0);
var PublicVariableContainDataWebPage = new Object();
PublicVariableContainDataWebPage.name = "";  // "testContainDataWebPage";


// 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
var TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = ';' +
'window.onbeforeunload = function(event) { event.returnValue = "是否現在就要離開本頁面？"+"///n"+"比如要不要先點擊 < 取消 > 關閉本頁面，在保存一下之後再離開呢？"; };' +
'function NewFunction() { alert(window.document.getElementsByTagName("html")[0].outerHTML);  /* (function(j) {})(j) 表示定義了一個，有一個形參（第一個 j ）的空匿名函數，然後以第二個 j 為實參進行調用 */; };';
// if (window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton") !== null) {
//     TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton").innerHTML;
// };
if (window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton") !== null) {
    TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton").innerHTML;
};

// 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
var TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = ';' +
'window.onbeforeunload = function(event) { event.returnValue = "是否現在就要離開本頁面？"+"///n"+"比如要不要先點擊 < 取消 > 關閉本頁面，在保存一下之後再離開呢？"; };' +
'function NewFunction() { alert(window.document.getElementsByTagName("html")[0].outerHTML);  /* (function(j) {})(j) 表示定義了一個，有一個形參（第一個 j ）的空匿名函數，然後以第二個 j 為實參進行調用 */; };';
// if (window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton") !== null) {
//     TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton").innerHTML;
// };
if (window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton") !== null) {
    TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton").innerHTML;
};


// 用於呈現采集結果的的新建窗口變量;
var OpenResultExhibitsWebPageName = "ResultExhibitsWebPage";  // 自定義的窗口命名;
var PublicVariableNewOpenWebPageButtonClickNumber = parseInt(0);
var PublicVariableResultExhibitsWebPage = new Object();
PublicVariableResultExhibitsWebPage.name = "";  // "ResultExhibitsWebPage";


if (window.document.getElementById("CustomOpenContainDataWebPageNameInputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("CustomOpenContainDataWebPageNameInputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("CustomOpenContainDataWebPageNameInputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};

if (window.document.getElementById("URLofDataWebPageInputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("URLofDataWebPageInputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("URLofDataWebPageInputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};

if (window.document.getElementById("WebKeyWordTextboxElementXPathInputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("WebKeyWordTextboxElementXPathInputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("WebKeyWordTextboxElementXPathInputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};

if (window.document.getElementById("WebKeyWordQuerySubmitButtonElementXPathInputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("WebKeyWordQuerySubmitButtonElementXPathInputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("WebKeyWordQuerySubmitButtonElementXPathInputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};

if (window.document.getElementById("TableWebPageNumberTdElementXPath1InputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("TableWebPageNumberTdElementXPath1InputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("TableWebPageNumberTdElementXPath1InputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};

if (window.document.getElementById("RetrievalResultXPath1InputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("RetrievalResultXPath1InputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("RetrievalResultXPath1InputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};

if (window.document.getElementById("SecondLevelWebPageRetrievalResultXPathInputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("SecondLevelWebPageRetrievalResultXPathInputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("SecondLevelWebPageRetrievalResultXPathInputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};

if (window.document.getElementById("EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};

if (window.document.getElementById("FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};

if (window.document.getElementById("TableSkipPageTextboxTdElementXPath1InputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("TableSkipPageTextboxTdElementXPath1InputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("TableSkipPageTextboxTdElementXPath1InputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};

if (window.document.getElementById("TableSkipPageSubmitButtonTdElementXPath1InputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("TableSkipPageSubmitButtonTdElementXPath1InputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("TableSkipPageSubmitButtonTdElementXPath1InputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};

if (window.document.getElementById("TableNextPageSubmitButtonImgTdElementXPath1InputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("TableNextPageSubmitButtonImgTdElementXPath1InputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("TableNextPageSubmitButtonImgTdElementXPath1InputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};

if (window.document.getElementById("TableBackPageSubmitButtonImgTdElementXPath1InputTextarea") !== null) {

    // 配置監聽textarea多行文本框内文本修改自動保存功能;
    window.document.getElementById("TableBackPageSubmitButtonImgTdElementXPath1InputTextarea").onchange = function() {
        // let Config_Flie_JSON = {};
        // // 閉包函數;
        // (
        //     function (Config_JSON) {
        //         // 獲取策略名字輸入框textarea中的文本，作爲JSON對象Config_Flie_JSON["Acquisition_Strategy_file_path"]中的字符串值;
        //         Config_JSON["Acquisition_Strategy_file_path"] = this.textContent;
        //     }
        // )(
        //     Config_Flie_JSON
        // );
    };

    // 配置監聽textarea多行文本框伸縮自適應高度;
    window.document.getElementById("TableBackPageSubmitButtonImgTdElementXPath1InputTextarea").oninput = function() {

        // 創建一個 pre 元素，用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能;
        let textarea_Pre = window.document.createElement("pre"); // 創建一個pre節點（用於控制 textarea 文本框元素高度，實現 textarea 文本框高度自適應功能，ID === "textarea_ID" + "_pre"）;
        textarea_Pre.setAttribute("id", (this.getAttribute("id")).toString().concat("_pre"));
        // textarea_Pre.style.border = this.style.border;
        textarea_Pre.style.padding = this.style.padding;
        // textarea_Pre.style.paddingleft = this.style.paddingleft;
        textarea_Pre.style.verticalalign = this.style.verticalalign;
        textarea_Pre.style.textalign = this.style.textalign;
        textarea_Pre.style.fontfamily = this.style.fontfamily;
        textarea_Pre.style.fontstyle = this.style.fontstyle;
        textarea_Pre.style.fontsize = this.style.fontsize;
        textarea_Pre.style.color = this.style.color;
        textarea_Pre.style.width = this.style.width;
        textarea_Pre.style.height = this.style.height;
        // textarea_Pre.style.min_height = this.style.min_height;
        // textarea_Pre.style.resize = this.style.resize;
        // textarea_Pre.style.line_height = this.style.line_height;
        // textarea_Pre.style.overflow = this.style.overflow;
        textarea_Pre.style.word_wrap = this.style.word_wrap;
        textarea_Pre.rows = this.rows;
        // textarea_Pre.cols = this.cols;
        textarea_Pre.style.position = "absolute";
        textarea_Pre.style.z_index = "-100";
        textarea_Pre.style.visibility = "hidden"; // 隱藏pre元素不在網頁中顯示;
        this.parentNode.appendChild(textarea_Pre);

        // 將 textarea 多行文本框中的文本傳遞給 pre 元素中;
        window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).textContent = this.textContent;
        // window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).innerHTML;

        // 計算pre元素高度，并將這個高度參數傳遞給textarea文本框元素，從而實現textarea文本框自適應高度伸縮的效果;
        if (window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight > 120) {
            // offsetHeight = .style.height = "auto" + .style.padding = "5px" + style.border = "1px";

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) + parseInt(30) - parseInt(6)).toString().concat("px");
            // 加 30 為一行文本的高度（.style.line_height），減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;

        } else {

            this.style.height = (parseInt(window.document.getElementById((this.getAttribute("id")).toString().concat("_pre")).offsetHeight) - parseInt(6)).toString().concat("px");
            // 減 6 為邊框内距（.style.padding）和邊框寬度（.style.border）;
        };
    };
};


// 采集到的結果，如果需要保存到數據庫服務器，則在這裏讀取輸入框<input>中傳入的數據庫服務器的鏈接 Url 地址;
// http://localhost:27016/insertMany?dbName=testWebData&dbTableName=test20220703&dbUser=admin_testWebData&dbPass=admin&Key=username:password
var Data_Server_Url = "";  // 用於存儲采集結果的數據庫服務器網址，字符串變量;
if (window.document.getElementById("DataServerUrlInput") !== null) {
    Data_Server_Url = String(window.document.getElementById("DataServerUrlInput").value);
};
// console.log(Data_Server_Url);

/* 循環周期時長（單位毫秒）輸入文本框 input 的值; */;
var Interval_Of_Circle_Click_value = parseInt(1000);
if (window.document.getElementById("IntervalOfCircleClickInputTextBoxInput") !== null) {
    Interval_Of_Circle_Click_value = parseInt(window.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
    Randomization_Relative_Interval = parseFloat(window.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);

    // 配置監聽 input 輸入框内文本變動時監聽功能，需要元素失去焦點時才會被擊發;
    // window.document.getElementById("IntervalOfCircleClickInputTextBoxInput").onchange = function() {Interval_Of_Circle_Click_value = parseInt(this.value);};
    window.document.getElementById("IntervalOfCircleClickInputTextBoxInput").addEventListener(
        "change",
        () => {
            Interval_Of_Circle_Click_value = parseInt(window.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
            Randomization_Relative_Interval = parseFloat(window.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
            // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
            Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));

            // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
            chrome.runtime.sendMessage(
                {
                    "message": 'userInterface->background:Update_Interval_Of_Circle_Click_value',
                    "url": String(window.document.location.href),
                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,
                    "ContainDataWebPageURL": ContainDataWebPageURL,
                    "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,
                    "Randomization_Relative_Interval": Randomization_Relative_Interval,
                    "data": ""  // JSON.stringify(request_Dict, function (key, value) {}, 4);
                },  // 發送的具體數據，可以是 JSON 對象;
                (response_Data) => {
                    // console.log(response_Data);
                    // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                    // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                    // console.log(response_Data["message"]);
                    // console.log(response_Data["Open_Contain_Data_Web_Page_Name"]);
                    // console.log(response_Data["ContainDataWebPageURL"]);
                    // console.log(response_Data["Interval_Of_Circle_Click_value"]);
                }
            );
        }
    );
};
/* 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值; */;
var Randomization_Relative_Interval = parseFloat(0.2);  // Number(0.2);
if (window.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput") !== null) {
    Interval_Of_Circle_Click_value = parseInt(window.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
    Randomization_Relative_Interval = parseFloat(window.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);

    // 配置監聽 input 輸入框内文本變動時監聽功能，需要元素失去焦點時才會被擊發;
    // window.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").onchange = function() {Randomization_Relative_Interval = parseFloat(this.value);};
    window.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").addEventListener(
        "change",
        () => {
            Interval_Of_Circle_Click_value = parseInt(window.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
            Randomization_Relative_Interval = parseFloat(window.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
            // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
            Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));

            // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
            chrome.runtime.sendMessage(
                {
                    "message": 'userInterface->background:Update_Randomization_Relative_Interval',
                    "url": String(window.document.location.href),
                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,
                    "ContainDataWebPageURL": ContainDataWebPageURL,
                    "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,
                    "Randomization_Relative_Interval": Randomization_Relative_Interval,
                    "data": ""  // JSON.stringify(request_Dict, function (key, value) {}, 4);
                },  // 發送的具體數據，可以是 JSON 對象;
                (response_Data) => {
                    // console.log(response_Data);
                    // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                    // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                    // console.log(response_Data["message"]);
                    // console.log(response_Data["Open_Contain_Data_Web_Page_Name"]);
                    // console.log(response_Data["ContainDataWebPageURL"]);
                    // console.log(response_Data["Randomization_Relative_Interval"]);
                }
            );
        }
    );
};
// var Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
var Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
/* // 只抓取第一層網頁中數據的參數; */
/* let DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
/* let DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
/* let DelayAfterClickEntrySecondLevelWebButton = parseInt(0); */  /* 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
/* let DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
/* let IntervalOfCircleClickNextPageButton = parseInt(0); */  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
/* // 抓取第一層網頁中的數據，然後自動進入第二層網頁，抓取第二層網頁中的數據，然後再返回第一層網頁，循環往復，的參數; */
/* let DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
/* let DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
/* let DelayAfterClickEntrySecondLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
/* let DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
/* let IntervalOfCircleClickNextPageButton = parseInt(0); */  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
/* IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickEntrySecondLevelWebButton) * ( parseInt(MaxNumberOfItemInThisFirstLevelWebPage) - parseInt(StartItemNumberInThisStartPage) + parseInt(1) ) + parseInt(DelayAfterClickFirstLevelWebNextPageButton); */;

/* 采集到的結果數據保存形式選擇複選框<input id="DataReceptorsDatabaseCheckbox" type="checkbox" name="DataReceptorsCheckbox" value="Database"> 或者 <input id="DataReceptorsWebpageCheckbox" type="checkbox" name="DataReceptorsCheckbox" value="Webpage" checked="true">; */;
var Data_Receptors = String("Webpage");  // 用於存儲采集結果的容器類型複選框值，字符串變量，可取 "Database"，"Database_and_Webpage"，"Webpage" 值，例如取值：String("Webpage");
// 判斷指定名稱的複選框元素是否存在;
if (window.document.getElementsByName("DataReceptorsCheckbox") !== null && window.document.getElementsByName("DataReceptorsCheckbox").length > 0) {
    // window.document.getElementsByName("DataReceptorsCheckbox");
    // window.document.getElementById("DataReceptorsDatabaseCheckbox");
    // window.document.getElementById("DataReceptorsWebpageCheckbox");

    let Data_Receptors_Checkbox = new Array;
    Data_Receptors_Checkbox = window.document.getElementsByName("DataReceptorsCheckbox");
    Data_Receptors = "";
    // 遍歷指定名稱的複選框元素;
    for (let i = 0; i < Data_Receptors_Checkbox.length; i++) {

        // 判斷複選框元素的選中狀態;
        if (Data_Receptors_Checkbox[i].checked) {
            if (Data_Receptors === "") {
                /* Data_Receptors_Checkbox[i].getAttribute("checked"); */
                Data_Receptors = String(Data_Receptors_Checkbox[i].getAttribute("value"));  // 從複選框張提取值，並强制轉換爲字符串類型;
                /* Data_Receptors = String(Data_Receptors_Checkbox[i].value); */
            } else {
                /* Data_Receptors_Checkbox[i].getAttribute("checked"); */
                Data_Receptors = String(Data_Receptors) + "_and_" + String(Data_Receptors_Checkbox[i].getAttribute("value"));  // 從複選框張提取值，並强制轉換爲字符串類型，然後與已有字符串值拼接;
                /* Data_Receptors = String(Data_Receptors) + "_and_" + String(Data_Receptors_Checkbox[i].value); */
            };
            // console.log(String(Data_Receptors_Checkbox[i].getAttribute("value")));
            // console.log(Data_Receptors);
        };

        // 配置監聽單擊事件;
        if (Data_Receptors_Checkbox[i].nodeType === 1) {
            Data_Receptors_Checkbox[i].addEventListener(
                "click",
                async () => {

                    let Data_Receptors_Checkbox = new Array;
                    Data_Receptors_Checkbox = window.document.getElementsByName("DataReceptorsCheckbox");
                    Data_Receptors = "";
                    for (let i = 0; i < Data_Receptors_Checkbox.length; i++) {
                        // 判斷複選框元素的選中狀態;
                        if (Data_Receptors_Checkbox[i].checked) {
                            if (Data_Receptors === "") {
                                /* Data_Receptors_Checkbox[i].getAttribute("checked"); */
                                Data_Receptors = String(Data_Receptors_Checkbox[i].getAttribute("value"));  // 從複選框張提取值，並强制轉換爲字符串類型;
                                /* Data_Receptors = String(Data_Receptors_Checkbox[i].value); */
                            } else {
                                /* Data_Receptors_Checkbox[i].getAttribute("checked"); */
                                Data_Receptors = String(Data_Receptors) + "_and_" + String(Data_Receptors_Checkbox[i].getAttribute("value"));  // 從複選框張提取值，並强制轉換爲字符串類型，然後與已有字符串值拼接;
                                /* Data_Receptors = String(Data_Receptors) + "_and_" + String(Data_Receptors_Checkbox[i].value); */
                            };
                            // console.log(String(Data_Receptors_Checkbox[i].getAttribute("value")));
                            // console.log(Data_Receptors);
                        };
                    };
                    // console.log(Data_Receptors);
                }
            );
        };
    };
};

/* 想要采集的數據處在目標數據源網頁的第幾個層級上選擇單選框<input type="radio" name="DataSourcePageLevelRadio" value="1" checked="false"> 或者 <input type="radio"  name="DataSourcePageLevelRadio" value="2" checked="true">; */;
var Data_Level = parseInt(2);  // parseInt(1);  // 想要采集的數據處在目標數據源網頁的第幾個層級上;
if (window.document.getElementsByName("DataSourcePageLevelRadio") !== null && window.document.getElementsByName("DataSourcePageLevelRadio").length > 0) {
    // window.document.getElementsByName("test_acquisition_strategy_import_source_type_radio");
    // window.document.getElementById("test_acquisition_strategy_import_source_http_radio");
    // window.document.getElementById("test_acquisition_strategy_import_source_file_radio");

    let Data_Source_Page_Level_Radio = new Array;
    Data_Source_Page_Level_Radio = window.document.getElementsByName("DataSourcePageLevelRadio");
    // let Data_Level = "";
    for (let i = 0; i < Data_Source_Page_Level_Radio.length; i++) {

        if (Data_Source_Page_Level_Radio[i].checked) {
            /* Data_Source_Page_Level_Radio[i].getAttribute("checked"); */
            Data_Level = parseInt(Data_Source_Page_Level_Radio[i].getAttribute("value"));
            /* Data_Level = parseInt(Data_Source_Page_Level_Radio[i].value); */
        };

        // 配置監聽單擊事件;
        if (Data_Source_Page_Level_Radio[i].nodeType === 1) {
            Data_Source_Page_Level_Radio[i].addEventListener(
                "click",
                async () => {

                    for (let i = 0; i < Data_Source_Page_Level_Radio.length; i++) {

                        if (Data_Source_Page_Level_Radio[i].checked === true) {

                            Data_Level = parseInt(Data_Source_Page_Level_Radio[i].getAttribute("value"));
                            /* Data_Level = parseInt(Data_Source_Page_Level_Radio[i].value); */

                            if (parseInt(Data_Source_Page_Level_Radio[i].value) === parseInt(1)) {
                                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    // window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").getAttribute("disabled");
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled === false) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled = "disabled";
                                        // window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").setAttribute("disabled", "disabled");
                                    };
                                    // if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").style.display !== "none") {
                                    //     window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").style.display = "none";  // "inline"; block;
                                    // };
                                };
                                if (window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput") !== null) {
                                    // window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").getAttribute("disabled");
                                    if (window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").disabled === false) {
                                        window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").disabled = "disabled";
                                        // window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").setAttribute("disabled", "disabled");
                                    };
                                    // if (window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").style.display !== "none") {
                                    //     window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").style.display = "none";  // "inline"; block;
                                    // };
                                };
                            };
                            if (parseInt(Data_Source_Page_Level_Radio[i].value) === parseInt(2)) {
                                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    // window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").getAttribute("disabled");
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled === true) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    // if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").style.display === "none") {
                                    //     window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").style.display = "inline";  // none; block;
                                    // };
                                };
                                if (window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput") !== null) {
                                    // window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").getAttribute("disabled");
                                    if (window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").disabled === true) {
                                        window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    // if (window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").style.display === "none") {
                                    //     window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").style.display = "inline";  // none; block;
                                    // };
                                };
                            };
                        };
                    };
                }
            );
        };
    };
};

/* 展示采集到的結果的載體元素類型選擇單選框<input type="radio" name="ResultDisplayContainerRadio" value="table" checked="false"> 或者 <input type="radio"  name="ResultDisplayContainerRadio" value="canvas-datagrid" checked="true">; */;
var Result_Display_Container_Radio_value = "table";  // "canvas-datagrid";
if (window.document.getElementsByName("ResultDisplayContainerRadio") !== null && window.document.getElementsByName("ResultDisplayContainerRadio").length > 0) {
    let Result_Display_Container_Radio = new Array;
    Result_Display_Container_Radio = window.document.getElementsByName("ResultDisplayContainerRadio");
    // let Result_Display_Container_Radio_value = "";
    for (let i=0; i < Result_Display_Container_Radio.length; i++) {
        if (Result_Display_Container_Radio[i].checked) {
            /* Result_Display_Container_Radio[i].getAttribute("checked"); */
            Result_Display_Container_Radio_value = Result_Display_Container_Radio[i].getAttribute("value");
            /* Result_Display_Container_Radio_value = Result_Display_Container_Radio[i].value; */
        };
    };
};


var PublicVariableCollectResultStoredStringArray = new Array();  // 保存采集到的數據結果的二維數組變量;
var TemporaryFirstLevelWebCollectResultArray = new Array();  // 臨時暫存一級頁面中的數據，用於與對應的二級頁面中的數據整合;
// var TemporaryPublicVariableCollectResultStoredStringArray = new Array();
var PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;


if (window.document.getElementById("HideParameterVariableDivHr") !== null) {
    window.document.getElementById("HideParameterVariableDivHr").addEventListener(
        "dblclick",
        async () => {
            if (window.document.getElementById("ParameterVariableDiv") !== null) {
                if (window.document.getElementById("ParameterVariableDiv").style.display === "block") {
                    window.document.getElementById("ParameterVariableDiv").style.display = "none";
                } else if (window.document.getElementById("ParameterVariableDiv").style.display === "none") {
                    window.document.getElementById("ParameterVariableDiv").style.display = "block";  // "inline";
                } else {};
            };
        }
    );
};

if (window.document.getElementById("HideResultExhibitsDivHr") !== null) {
    window.document.getElementById("HideResultExhibitsDivHr").addEventListener(
        "dblclick",
        async () => {
            if (window.document.getElementById("ResultExhibitsDiv") !== null) {
                if (window.document.getElementById("ResultExhibitsDiv").style.display === "block") {
                    window.document.getElementById("ResultExhibitsDiv").style.display = "none";
                } else if (window.document.getElementById("ResultExhibitsDiv").style.display === "none") {
                    window.document.getElementById("ResultExhibitsDiv").style.display = "block";  // "inline";
                } else {};
            };
        }
    );
};

if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
    // onclick="javascript:OpenWebPageContainData(window, true, Open_Contain_Data_Web_Page_Name, ContainDataWebPageURL, TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton, PublicVariableContainDataWebPage, (error, Win_Obj) => {})"
    // window.document.getElementById("NewOpenWebPageContainDataButton").addEventListener(
    //     "click",
    //     async () => {
    //         PublicVariableContainDataWebPage = OpenWebPageContainData(
    //             window,
    //             true,
    //             Open_Contain_Data_Web_Page_Name,  // 'testContainDataWebPage',
    //             ContainDataWebPageURL,
    //             TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,
    //             PublicVariableContainDataWebPage,
    //             (error, Win_Obj) => {}
    //         );
    //     }
    // );
    window.document.getElementById("NewOpenWebPageContainDataButton").addEventListener(
        "click",
        async () => {

            if (window.document.getElementById("CustomOpenContainDataWebPageNameInputTextarea") !== null) {
                Open_Contain_Data_Web_Page_Name = window.document.getElementById("CustomOpenContainDataWebPageNameInputTextarea").value;
            };
            if (window.document.getElementById("URLofDataWebPageInputTextarea") !== null) {
                ContainDataWebPageURL = window.document.getElementById("URLofDataWebPageInputTextarea").value;
            };
            // if (window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton") !== null) {
            //     TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton").innerHTML;
            // };
            if (window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton") !== null) {
                TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton").innerHTML;
            };

            /* 配置相關按鈕不可再操作 */;
            if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) { window.document.getElementById("NewOpenWebPageContainDataButton").disabled = "disabled"; };
            if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) { window.document.getElementById("QueryKeyWordSubmitButton").disabled = "disabled"; };
            if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) { window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").disabled = "disabled"; };
            if (window.document.getElementById("StartORStopCollectDataButton") !== null) { window.document.getElementById("StartORStopCollectDataButton").disabled = "disabled"; };
            if (window.document.getElementById("URLofDataWebPageInputTextarea") !== null) { window.document.getElementById("URLofDataWebPageInputTextarea").disabled = "disabled"; };
            if (window.document.getElementById("OperationModuleDiv") !== null) {
                if (window.document.getElementById("OperationModuleDiv").style.display !== "none") {
                    window.document.getElementById("OperationModuleDiv").style.display = "none";
                };
            };
            // if (window.document.getElementById("ResultExhibitsDiv") !== null) {
            //     if (window.document.getElementById("ResultExhibitsDiv").style.display !== "none") {
            //         window.document.getElementById("ResultExhibitsDiv").style.display = "none";
            //     };
            // };

            PublicVariableNewOpenWebPageContainDataButtonClickNumber = parseInt(PublicVariableNewOpenWebPageContainDataButtonClickNumber) + parseInt(1);

            // if (PublicVariableContainDataWebPage.name === "") {
            //     // Object.prototype.toString.call(PublicVariableContainDataWebPage) === "[object Object]"

            //     PublicVariableContainDataWebPage = window.open(
            //         ContainDataWebPageURL,
            //         Open_Contain_Data_Web_Page_Name,  // "testContainDataWebPage",
            //         "menubar=no, scrollbars=yes, resizable=yes, status=yes, titlebar=no, toolbar=no, location=yes"
            //     );
            //     /*
            //     // window.open("page.html", "newwindow", "height=100, width=400, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, status=no");
            //     // 參數解釋;
            //     // window.open 瀏覽器環境中彈出新窗口的命令;
            //     // "page.html" 表示打開窗口加載的 html 頁面文檔，可以是網絡服務器的 URL 地址，如果取 "about:blank" 值則表示只打開一個空白頁面不加載任何;
            //     // "newwindow" 瀏覽器環境中新彈出窗口的自定義名字（不是文件名），非必須，可用空字符串 "" 代替;
            //     // height=100 瀏覽器環境中新彈出窗口的高度，單位像素;
            //     // width=400 瀏覽器環境中新彈出窗口的寬度單位像素;
            //     // top=0 瀏覽器環境中新彈出窗口距離屏幕上方的像素值;
            //     // left=0 瀏覽器環境中新彈出窗口距離屏幕左側的像素值;
            //     // toolbar=no 瀏覽器環境中新彈出窗口是否顯示工具欄，yes 為顯示;
            //     // menubar，scrollbars 瀏覽器環境中新彈出窗口的菜單欄和滾動欄;
            //     // resizable=no 瀏覽器環境中新彈出窗口是否允許改變窗口大小，yes 為允許;
            //     // location=no 瀏覽器環境中新彈出窗口是否顯示地址欄，yes 為允許;
            //     // status=no 瀏覽器環境中新彈出窗口是否顯示狀態欄内的信息（通常是文件已經打開），yes 為允許;
            //     */;
            //     PublicVariableContainDataWebPage.focus();

            // } else if (PublicVariableContainDataWebPage.name === Open_Contain_Data_Web_Page_Name) {
            //     // Object.prototype.toString.call(PublicVariableContainDataWebPage) === "[object Window]"
            //     // PublicVariableContainDataWebPage.closed

            //     PublicVariableContainDataWebPage.replace(ContainDataWebPageURL);  // "about:blank" 刷新窗口替換為新鏈接 ContainDataWebPageURL ;
            //     // PublicVariableContainDataWebPage.assign(ContainDataWebPageURL);  // "about:blank" 窗口打開新鏈接 ContainDataWebPageURL ;
            //     // PublicVariableContainDataWebPage.location.href = "";  // "about:blank" 窗口的 url 地址;
            //     PublicVariableContainDataWebPage.focus();

            // } else {};

            // let NewOpenWebPageJavaScriptFunctionAggregateScript = window.document.createElement("script");
            // NewOpenWebPageJavaScriptFunctionAggregateScript.setAttribute("id", "NewOpenWebPageJavaScriptFunctionAggregateScript");
            // NewOpenWebPageJavaScriptFunctionAggregateScript.setAttribute("type", "text/javascript");
            // NewOpenWebPageJavaScriptFunctionAggregateScript.setAttribute("language", "javascript");

            // /* let NewOpenWebPageInsertFunctionCodeString = window.document.createTextNode(window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton").innerHTML); */;  /* 關聯到 3874 行的語句; */;
            // // /* let TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = '+' \';\'+ */
            // // TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = ';'+
            // //     ' window.onbeforeunload = function(event) { '+
            // //     '       event.returnValue = "是否現在就要離開本頁面？"+"//n"+"比如要不要先點擊 < 取消 > 關閉本頁面，在保存一下之後再離開呢？"; '+
            // //     ' } '+
            // //     ' ; '
            // //     +
            // //     ' function NewFunction() { '+
            // //     '    alert(window.document.getElementsByTagName("html")[0].outerHTML); '+
            // //     ' }; ';

            // let NewOpenWebPageInsertFunctionCodeString = window.document.createTextNode(TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton);

            // // if (Object.prototype.toString.call(PublicVariableContainDataWebPage) === "[object Window]") {
            //     PublicVariableContainDataWebPage.document.addEventListener(
            //         'DOMContentLoaded',  // 'load';
            //         () => {
            //             // 判斷打開的網頁的主機域名，對特定網頁進行操作;
            //             // if (PublicVariableContainDataWebPage.document.location.host === ContainDataWebPageURL) {
            //                 // PublicVariableContainDataWebPage.location.href === ContainDataWebPageURL
            //                 /* PublicVariableContainDataWebPage.document.write("<h1>这是新打开的窗口</h1>"); */; /* 注意不能使用 .write() 方法向網頁插入代碼，因爲執行 .write() 方法會重繪網頁 DOM 導致網頁原有内容被清空; */;
            //                 /* PublicVariableContainDataWebPage.document.head.appendChild(NewOpenWebPageJavaScriptFunctionAggregateScript); */;
            //                 PublicVariableContainDataWebPage.document.getElementsByTagName("head")[0].appendChild(NewOpenWebPageJavaScriptFunctionAggregateScript);
            //                 PublicVariableContainDataWebPage.NewOpenWebPageJavaScriptFunctionAggregateScript.appendChild(NewOpenWebPageInsertFunctionCodeString);
            //             // };
            //         }
            //     );
            // // };

            // /* if(!window.console){window.console = {log:function(){}};}else{window.console.log(PublicVariableContainDataWebPage.document.getElementsByTagName("html")[0].outerHTML);}; */;
            // /* alert(PublicVariableContainDataWebPage.document.getElementsByTagName("html")[0].outerHTML); */;

            // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
            chrome.runtime.sendMessage(
                {
                    "message": 'userInterface->background:Open_Contain_Data_Web_Page',
                    "url": String(window.document.location.href),
                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // "testContainDataWebPage",
                    "ContainDataWebPageURL": ContainDataWebPageURL,
                    "data": ""  // JSON.stringify(request_Dict, function (key, value) {}, 4);
                },  // 發送的具體數據，可以是 JSON 對象;
                // (response_Data) => {
                //     // console.log(response_Data);
                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});

                //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                //     //     console.log('background instruction: { StandBy }.');
                //     // };
                // }
            );

            window.setTimeout(function () {
                if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) { window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled"); };
                if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) { window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled"); };
                if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) { window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled"); };
                if (window.document.getElementById("StartORStopCollectDataButton") !== null) { window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled"); };
                if (window.document.getElementById("URLofDataWebPageInputTextarea") !== null) { window.document.getElementById("URLofDataWebPageInputTextarea").removeAttribute("disabled"); };
            }, 3000);
        }
    );
};

if (window.document.getElementById("NewOpenWebPageButton") !== null) {
    // onclick="javascript:NewOpenWebPage(window, true, OpenResultExhibitsWebPageName, TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton, PublicVariableResultExhibitsWebPage, (error, Win_Obj) => {})"
    // window.document.getElementById("NewOpenWebPageButton").addEventListener(
    //     "click",
    //     async () => {
    //         PublicVariableResultExhibitsWebPage = NewOpenWebPage(
    //             window,
    //             true,
    //             OpenResultExhibitsWebPageName,  // 'ResultExhibitsWebPage',
    //             TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,
    //             PublicVariableResultExhibitsWebPage,
    //             (error, Win_Obj) => {}
    //         );
    //     }
    // );
    window.document.getElementById("NewOpenWebPageButton").addEventListener(
        "click",
        async () => {

            // if (window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton") !== null) {
            //     TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton").innerHTML;
            // };
            if (window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton") !== null) {
                TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton").innerHTML;
            };

            /* 配置相關按鈕不可再操作 */;
            if (window.document.getElementById("NewOpenWebPageButton") !== null) { window.document.getElementById("NewOpenWebPageButton").disabled = "disabled"; };
            if (window.document.getElementById("StartORStopCollectDataButton") !== null) { window.document.getElementById("StartORStopCollectDataButton").disabled = "disabled"; };

            PublicVariableNewOpenWebPageButtonClickNumber = parseInt(PublicVariableNewOpenWebPageButtonClickNumber) + parseInt(1);

            if (PublicVariableResultExhibitsWebPage.name === "") {
                // Object.prototype.toString.call(PublicVariableResultExhibitsWebPage) === "[object Object]"

                PublicVariableResultExhibitsWebPage = window.open(
                    "about:blank",
                    OpenResultExhibitsWebPageName,  // "ResultExhibitsWebPage",
                    "menubar=no, scrollbars=yes, resizable=yes, status=yes, titlebar=no, toolbar=no, location=yes"
                );
                /*
                // window.open("page.html", "newwindow", "height=100, width=400, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, status=no");
                // 參數解釋;
                // window.open 瀏覽器環境中彈出新窗口的命令;
                // "page.html" 表示打開窗口加載的 html 頁面文檔，可以是網絡服務器的 URL 地址，如果取 "about:blank" 值則表示只打開一個空白頁面不加載任何;
                // "newwindow" 瀏覽器環境中新彈出窗口的自定義名字（不是文件名），非必須，可用空字符串 "" 代替;
                // height=100 瀏覽器環境中新彈出窗口的高度，單位像素;
                // width=400 瀏覽器環境中新彈出窗口的寬度單位像素;
                // top=0 瀏覽器環境中新彈出窗口距離屏幕上方的像素值;
                // left=0 瀏覽器環境中新彈出窗口距離屏幕左側的像素值;
                // toolbar=no 瀏覽器環境中新彈出窗口是否顯示工具欄，yes 為顯示;
                // menubar，scrollbars 瀏覽器環境中新彈出窗口的菜單欄和滾動欄;
                // resizable=no 瀏覽器環境中新彈出窗口是否允許改變窗口大小，yes 為允許;
                // location=no 瀏覽器環境中新彈出窗口是否顯示地址欄，yes 為允許;
                // status=no 瀏覽器環境中新彈出窗口是否顯示狀態欄内的信息（通常是文件已經打開），yes 為允許;
                */;
                PublicVariableResultExhibitsWebPage.focus();

            } else if (PublicVariableResultExhibitsWebPage.name === OpenResultExhibitsWebPageName) {
                // Object.prototype.toString.call(PublicVariableResultExhibitsWebPage) === "[object Window]"
                // PublicVariableResultExhibitsWebPage.closed

                // PublicVariableResultExhibitsWebPage.replace("about:blank");  // "about:blank" 刷新窗口替換為新鏈接 ContainDataWebPageURL ;
                // PublicVariableResultExhibitsWebPage.assign("about:blank");  // "about:blank" 窗口打開新鏈接 ContainDataWebPageURL ;
                // PublicVariableResultExhibitsWebPage.location.href = "";  // "about:blank" 窗口的 url 地址;
                PublicVariableResultExhibitsWebPage.focus();

            } else {};

            let NewOpenWebPageJavaScriptFunctionAggregateScript = window.document.createElement("script");
            NewOpenWebPageJavaScriptFunctionAggregateScript.setAttribute("id", "NewOpenWebPageJavaScriptFunctionAggregateScript");
            NewOpenWebPageJavaScriptFunctionAggregateScript.setAttribute("type", "text/javascript");
            NewOpenWebPageJavaScriptFunctionAggregateScript.setAttribute("language", "javascript");

            /* let NewOpenWebPageInsertFunctionCodeString = window.document.createTextNode(window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton").innerHTML); */;  /* 關聯到 3874 行的語句; */;
            // /* let TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = '+' \';\'+ */
            // TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = ';'+
            //     ' window.onbeforeunload = function(event) { '+
            //     '       event.returnValue = "是否現在就要離開本頁面？"+"//n"+"比如要不要先點擊 < 取消 > 關閉本頁面，在保存一下之後再離開呢？"; '+
            //     ' } '+
            //     ' ; '
            //     +
            //     ' function NewFunction() { '+
            //     '    alert(window.document.getElementsByTagName("html")[0].outerHTML); '+
            //     ' }; ';

            let NewOpenWebPageInsertFunctionCodeString = window.document.createTextNode(TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton);

            // if (Object.prototype.toString.call(PublicVariableResultExhibitsWebPage) === "[object Window]") {
            //     PublicVariableResultExhibitsWebPage.document.addEventListener(
            //         'DOMContentLoaded',  // 'load';
            //         () => {
            //             // 判斷打開的網頁的主機域名，對特定網頁進行操作;
            //             if (PublicVariableResultExhibitsWebPage.document.location.host === "about:blank") {
                            // PublicVariableResultExhibitsWebPage.location.href === "about:blank"
                            /* PublicVariableResultExhibitsWebPage.document.write("<h1>这是新打开的窗口</h1>"); */; /* 注意不能使用 .write() 方法向網頁插入代碼，因爲執行 .write() 方法會重繪網頁 DOM 導致網頁原有内容被清空; */;
                            /* PublicVariableResultExhibitsWebPage.document.head.appendChild(NewOpenWebPageJavaScriptFunctionAggregateScript); */;
                            PublicVariableResultExhibitsWebPage.document.getElementsByTagName("head")[0].appendChild(NewOpenWebPageJavaScriptFunctionAggregateScript);
                            PublicVariableResultExhibitsWebPage.NewOpenWebPageJavaScriptFunctionAggregateScript.appendChild(NewOpenWebPageInsertFunctionCodeString);
            //             };
            //         }
            //     );
            // };

            /* if(!window.console){window.console = {log:function(){}};}else{window.console.log(PublicVariableResultExhibitsWebPage.document.getElementsByTagName("html")[0].outerHTML);}; */;
            /* alert(PublicVariableResultExhibitsWebPage.document.getElementsByTagName("html")[0].outerHTML); */;

            window.setTimeout(function () {
                if (window.document.getElementById("NewOpenWebPageButton") !== null) { window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled"); };
                if (window.document.getElementById("StartORStopCollectDataButton") !== null) { window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled"); };
            }, 1000);
        }
    );
};

if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
    // onclick="javascript:QueryKeyWord(window, window, WebKeyWordTextboxElement_XPath, WebKeyWordQuerySubmitButtonElement_XPath)"
    window.document.getElementById("QueryKeyWordSubmitButton").addEventListener(
        "click",
        async () => {

            // 暫時禁用啓動按鈕，防止頻繁連續點擊操作;
            if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                window.document.getElementById("QueryKeyWordSubmitButton").disabled = "disabled";
                // 延時 1000 毫秒後取消禁用啓動按鈕;
                window.setTimeout(
                    function() {
                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                    },
                    1000
                );
            };

            // 刷新傳入參數;
            if (window.document.getElementById("WebKeyWordTextboxElementXPathInputTextarea") !== null) {
                WebKeyWordTextboxElement_XPath = window.document.getElementById("WebKeyWordTextboxElementXPathInputTextarea").value;
            };
            if (window.document.getElementById("WebKeyWordQuerySubmitButtonElementXPathInputTextarea") !== null) {
                WebKeyWordQuerySubmitButtonElement_XPath = window.document.getElementById("WebKeyWordQuerySubmitButtonElementXPathInputTextarea").value;
            };
            let Key_Word = "";
            if (window.document.getElementById("QueryKeyWordInputTextBoxInput") !== null) {
                Key_Word = String(window.document.getElementById("QueryKeyWordInputTextBoxInput").value);
            };

            // 配置相關按鈕禁用不可再操作;
            if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                window.document.getElementById("NewOpenWebPageContainDataButton").disabled = "disabled";
            };
            // if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
            //     window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").disabled = "disabled";
            // };
            // if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
            //     window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled = "disabled";
            // };
            // if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
            //     window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").disabled = "disabled";
            // };
            if (window.document.getElementById("QueryKeyWordInputTextBoxInput") !== null) {
                window.document.getElementById("QueryKeyWordInputTextBoxInput").disabled = "disabled";
            };
            // if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
            //     window.document.getElementById("QueryKeyWordSubmitButton").disabled = "disabled";
            // };
            if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").disabled = "disabled";
            };
            // if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
            //     window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").disabled = "disabled";
            // };
            // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
            //     window.document.getElementById("NewOpenWebPageButton").disabled = "disabled";
            // };
            // if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
            //     window.document.getElementById("DataSourcePageLevel1Radio").disabled = "disabled";
            // };
            // if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
            //     window.document.getElementById("DataSourcePageLevel2Radio").disabled = "disabled";
            // };
            // if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
            //     window.document.getElementById("ResultDisplayContainerTableRadio").disabled = "disabled";
            // };
            // if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
            //     window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").disabled = "disabled";
            // };
            if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                window.document.getElementById("StartORStopCollectDataButton").disabled = "disabled";
            };

            level = 'First_Level_Page';  // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';  // 當前打開目標數據源網頁的層級類型;
            // 在自定義的用戶操作交互頁面窗口(test.html)進程中主動向後臺頁面(background.html)進程傳遞指令;
            chrome.runtime.sendMessage(
                {
                    "message": 'userInterface->background:Query_Key_Word',
                    "error": "",
                    "url": String(window.document.location.href),
                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 目標數據源網頁的 URL 網址;
                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 給打開目標數據源網頁所在窗口標籤頁取的自定義命名;
                    "level": level,  // 'First_Level_Page', 'Second_Level_Page',
                    "Data_Level": Data_Level,  // parseInt(2), parseInt(1),
                    // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Current_Second_Level_Page_Number),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                    "Current_First_Level_Page_Number": Current_First_Level_Page_Number,
                    "Maximum_First_Level_Page_Number": Maximum_First_Level_Page_Number,
                    "Total_Data_in_Current_First_Level_Page": Total_Data_in_Current_First_Level_Page,
                    // "Data_in_Current_First_Level_Page": Data_in_Current_First_Level_Page,
                    "Total_Entry_from_First_Level_Page_to_Second_Level_Page": Total_Entry_from_First_Level_Page_to_Second_Level_Page,
                    // "XPath_from_First_Level_Page_to_Second_Level_Page": XPath_from_First_Level_Page_to_Second_Level_Page,
                    "Current_Second_Level_Page_Number": Current_Second_Level_Page_Number,
                    "Maximum_Second_Level_Page_Number": Maximum_Second_Level_Page_Number,
                    "Total_Data_in_Current_Second_Level_Page": Total_Data_in_Current_Second_Level_Page,
                    // "Data_in_Current_Second_Level_Page": Data_in_Current_Second_Level_Page,
                    "Total_Entry_from_Second_Level_Page_to_First_Level_Page": Total_Entry_from_Second_Level_Page_to_First_Level_Page,
                    // "XPath_from_Second_Level_Page_to_First_Level_Page": XPath_from_Second_Level_Page_to_First_Level_Page,
                    "Start_First_Level_Page_Number": Start_First_Level_Page_Number,
                    "End_First_Level_Page_Number": End_First_Level_Page_Number,
                    "Start_Current_Second_Level_Page_In_Current_First_Level_Page": Start_Current_Second_Level_Page_In_Current_First_Level_Page,
                    "End_Current_Second_Level_Page_In_Current_First_Level_Page": End_Current_Second_Level_Page_In_Current_First_Level_Page,
                    "Key_Word": String(Key_Word),
                    "Configuration_Parameters": {
                        "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                        "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                        "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                        "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                        "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                        "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                        "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                        "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                        "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                        "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                        "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                        "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                        "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                        "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                        "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                        "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                        "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                    },
                    "data": ""  // JSON.stringify(request_Dict, function (key, value) {}, 4);
                },  // 發送的具體數據，可以是 JSON 對象;
                // (response_Data) => {
                //     // console.log(response_Data);
                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});

                //     // if (response_Data["message"] === "background->userInterface:Querying_Key_Word") {
                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                //     // };

                //     // if (response_Data["message"] === "background->userInterface:Query_Key_Word_Error") {
                //     //     console.log(response_Data["error"]);
                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                //     // };

                //     // if (response_Data["message"] === "background->userInterface:Real_Time_Data") {
                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                //     //     if (response_Data["level"] === "First_and_Second_Level_Page") {
                //     //         // 'First_Level_Page'; 'Second_Level_Page';
                //     //         console.log(response_Data["message"]);
                //     //         console.log(response_Data["error"]);
                //     //         console.log(response_Data["url"]);
                //     //         console.log(response_Data["level"]);
                //     //         console.log(response_Data["Current_First_Level_Page_Number"]);
                //     //         console.log(response_Data["Current_Second_Level_Page_Number"]);
                //     //         console.log(response_Data["page_number"]);
                //     //         console.log(response_Data["data"]);
                //     //     };
                //     // };
                // }
            );
        }
    );
};

if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
    // onclick="javascript:ExtractPageNumber(window, window, 0, TableWebPageNumberTdElement_XPath_1, TableWebPageNumberTdElement_XPath_2, RetrievalResult_XPath_1, RetrievalResult_XPath_2)"
    window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").addEventListener(
        "click",
        async () => {

            // 刷新傳入參數;
            if (window.document.getElementById("TableWebPageNumberTdElementXPath1InputTextarea") !== null) {
                TableWebPageNumberTdElement_XPath_1 = window.document.getElementById("TableWebPageNumberTdElementXPath1InputTextarea").value;
            };
            // if (window.document.getElementById("TableWebPageNumberTdElementXPath2InputTextarea") !== null) {
            //     TableWebPageNumberTdElement_XPath_2 = window.document.getElementById("TableWebPageNumberTdElementXPath2InputTextarea").value;
            // };
            if (window.document.getElementById("RetrievalResultXPath1InputTextarea") !== null) {
                RetrievalResult_XPath_1 = window.document.getElementById("RetrievalResultXPath1InputTextarea").value;
            };
            // if (window.document.getElementById("RetrievalResultXPath2InputTextarea") !== null) {
            //     RetrievalResult_XPath_2 = window.document.getElementById("RetrievalResultXPath2InputTextarea").value;
            // };

            // 配置相關按鈕禁用不可再操作;
            if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                window.document.getElementById("NewOpenWebPageContainDataButton").disabled = "disabled";
            };
            if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").disabled = "disabled";
            };
            if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled = "disabled";
            };
            if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").disabled = "disabled";
            };
            if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                window.document.getElementById("QueryKeyWordSubmitButton").disabled = "disabled";
            };
            // if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
            //     window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").disabled = "disabled";
            // };
            // if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
            //     window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").disabled = "disabled";
            // };
            // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
            //     window.document.getElementById("NewOpenWebPageButton").disabled = "disabled";
            // };
            // if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
            //     window.document.getElementById("DataSourcePageLevel1Radio").disabled = "disabled";
            // };
            // if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
            //     window.document.getElementById("DataSourcePageLevel2Radio").disabled = "disabled";
            // };
            // if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
            //     window.document.getElementById("ResultDisplayContainerTableRadio").disabled = "disabled";
            // };
            // if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
            //     window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").disabled = "disabled";
            // };
            if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                window.document.getElementById("StartORStopCollectDataButton").disabled = "disabled";
            };

            level = 'First_Level_Page';  // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';  // 當前打開目標數據源網頁的層級類型;
            // 在自定義的用戶操作交互頁面窗口(test.html)進程中主動向後臺頁面(background.html)進程傳遞指令;
            chrome.runtime.sendMessage(
                {
                    "message": 'userInterface->background:Ask_for_Extract_Page_Information',
                    "error": "",
                    "url": String(window.document.location.href),
                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 目標數據源網頁的 URL 網址;
                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 給打開目標數據源網頁所在窗口標籤頁取的自定義命名;
                    "level": level,  // 'First_Level_Page', 'Second_Level_Page',
                    "Data_Level": Data_Level,  // parseInt(2), parseInt(1),
                    // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Current_Second_Level_Page_Number),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                    "Current_First_Level_Page_Number": Current_First_Level_Page_Number,
                    "Maximum_First_Level_Page_Number": Maximum_First_Level_Page_Number,
                    "Total_Data_in_Current_First_Level_Page": Total_Data_in_Current_First_Level_Page,
                    // "Data_in_Current_First_Level_Page": Data_in_Current_First_Level_Page,
                    "Total_Entry_from_First_Level_Page_to_Second_Level_Page": Total_Entry_from_First_Level_Page_to_Second_Level_Page,
                    // "XPath_from_First_Level_Page_to_Second_Level_Page": XPath_from_First_Level_Page_to_Second_Level_Page,
                    "Current_Second_Level_Page_Number": Current_Second_Level_Page_Number,
                    "Maximum_Second_Level_Page_Number": Maximum_Second_Level_Page_Number,
                    "Total_Data_in_Current_Second_Level_Page": Total_Data_in_Current_Second_Level_Page,
                    // "Data_in_Current_Second_Level_Page": Data_in_Current_Second_Level_Page,
                    "Total_Entry_from_Second_Level_Page_to_First_Level_Page": Total_Entry_from_Second_Level_Page_to_First_Level_Page,
                    // "XPath_from_Second_Level_Page_to_First_Level_Page": XPath_from_Second_Level_Page_to_First_Level_Page,
                    "Start_First_Level_Page_Number": Start_First_Level_Page_Number,
                    "End_First_Level_Page_Number": End_First_Level_Page_Number,
                    "Start_Current_Second_Level_Page_In_Current_First_Level_Page": Start_Current_Second_Level_Page_In_Current_First_Level_Page,
                    "End_Current_Second_Level_Page_In_Current_First_Level_Page": End_Current_Second_Level_Page_In_Current_First_Level_Page,
                    "Configuration_Parameters": {
                        "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                        "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                        "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                        "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                        "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                        "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                        "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                        "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                        "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                        "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                        "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                        "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                        "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                        "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                        "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                        "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                        "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                    },
                    "data": ""  // JSON.stringify(request_Dict, function (key, value) {}, 4);
                },  // 發送的具體數據，可以是 JSON 對象;
                // (response_Data) => {
                //     // console.log(response_Data);
                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});

                //     // if (response_Data["message"] === "background->userInterface:Extract_Page_Information") {
                //     //     // 更新目標數據源網頁返回的信息;
                //     //     if (response_Data.hasOwnProperty("Current_First_Level_Page_Number") && parseInt(response_Data["Current_First_Level_Page_Number"]) !== parseInt(0)) {
                //     //         Current_First_Level_Page_Number = parseInt(response_Data["Current_First_Level_Page_Number"]);
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Maximum_First_Level_Page_Number") && parseInt(response_Data["Maximum_First_Level_Page_Number"]) !== parseInt(0)) {
                //     //         Maximum_First_Level_Page_Number = parseInt(response_Data["Maximum_First_Level_Page_Number"]);
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(response_Data["Current_Second_Level_Page_Number"]) !== parseInt(0)) {
                //     //         Current_Second_Level_Page_Number = parseInt(response_Data["Current_Second_Level_Page_Number"]);
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Maximum_Second_Level_Page_Number") && parseInt(response_Data["Maximum_Second_Level_Page_Number"]) !== parseInt(0)) {
                //     //         Maximum_Second_Level_Page_Number = parseInt(response_Data["Maximum_Second_Level_Page_Number"]);
                //     //     };
                //     //     if (response_Data.hasOwnProperty("ContainDataWebPageURL") && response_Data["ContainDataWebPageURL"] !== "") {
                //     //         ContainDataWebPageURL = String(response_Data["ContainDataWebPageURL"]);  // String(response_Data["url"]);
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Open_Contain_Data_Web_Page_Name") && response_Data["Open_Contain_Data_Web_Page_Name"] !== "") {
                //     //         Open_Contain_Data_Web_Page_Name = String(response_Data["Open_Contain_Data_Web_Page_Name"]);
                //     //     };
                //     //     if (response_Data.hasOwnProperty("level") && response_Data["level"] !== "") {
                //     //         level = String(response_Data["level"]);
                //     //     };
                //     //     if (response_Data.hasOwnProperty("page_number") && response_Data["page_number"] !== "") {
                //     //         level = String(response_Data["page_number"]);
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Total_Data_in_Current_First_Level_Page")) {
                //     //         Total_Data_in_Current_First_Level_Page = parseInt(response_Data["Total_Data_in_Current_First_Level_Page"]);
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Total_Entry_from_First_Level_Page_to_Second_Level_Page")) {
                //     //         Total_Entry_from_First_Level_Page_to_Second_Level_Page = parseInt(response_Data["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]);
                //     //     };
                //     //     if (response_Data.hasOwnProperty("XPath_from_First_Level_Page_to_Second_Level_Page")) {
                //     //         XPath_from_First_Level_Page_to_Second_Level_Page = response_Data["XPath_from_First_Level_Page_to_Second_Level_Page"];
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Total_Data_in_Current_Second_Level_Page")) {
                //     //         Total_Data_in_Current_Second_Level_Page = parseInt(response_Data["Total_Data_in_Current_Second_Level_Page"]);
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Total_Entry_from_Second_Level_Page_to_First_Level_Page")) {
                //     //         Total_Entry_from_Second_Level_Page_to_First_Level_Page = parseInt(response_Data["Total_Entry_from_Second_Level_Page_to_First_Level_Page"]);
                //     //     };
                //     //     if (response_Data.hasOwnProperty("XPath_from_Second_Level_Page_to_First_Level_Page")) {
                //     //         XPath_from_Second_Level_Page_to_First_Level_Page = response_Data["XPath_from_Second_Level_Page_to_First_Level_Page"];
                //     //     };
                //     //     // if (response_Data.hasOwnProperty("Data_in_Current_First_Level_Page")) {
                //     //     //     Data_in_Current_First_Level_Page = response_Data["Data_in_Current_First_Level_Page"];
                //     //     // };
                //     //     // if (response_Data.hasOwnProperty("Data_in_Current_Second_Level_Page")) {
                //     //     //     Data_in_Current_Second_Level_Page = response_Data["Data_in_Current_Second_Level_Page"];
                //     //     // };
                //     //     if (response_Data.hasOwnProperty("Query_Key_Word_First_Level_Page_Textbox_XPath")) {
                //     //         Query_Key_Word_First_Level_Page_Textbox_XPath = response_Data["Query_Key_Word_First_Level_Page_Textbox_XPath"];
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Query_Key_Word_First_Level_Page_Button_XPath")) {
                //     //         Query_Key_Word_First_Level_Page_Button_XPath = response_Data["Query_Key_Word_First_Level_Page_Button_XPath"];
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Skip_First_Level_Page_Textbox_XPath")) {
                //     //         Skip_First_Level_Page_Textbox_XPath = response_Data["Skip_First_Level_Page_Textbox_XPath"];
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Skip_First_Level_Page_Button_XPath")) {
                //     //         Skip_First_Level_Page_Button_XPath = response_Data["Skip_First_Level_Page_Button_XPath"];
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Next_First_Level_Page_Button_XPath")) {
                //     //         Next_First_Level_Page_Button_XPath = response_Data["Next_First_Level_Page_Button_XPath"];
                //     //     };
                //     //     if (response_Data.hasOwnProperty("Back_First_Level_Page_Button_XPath")) {
                //     //         Back_First_Level_Page_Button_XPath = response_Data["Back_First_Level_Page_Button_XPath"];
                //     //     };
                //     // };

                //     // if (response_Data["message"] === "background->userInterface:Extract_Page_Number_Error" || response_Data["message"] === "background->userInterface:Obtain_First_Level_Page_Data_Error" || response_Data["message"] === "background->userInterface:from_First_Level_Page_to_Second_Level_Page_Error" || response_Data["message"] === "background->userInterface:Obtain_Second_Level_Page_Data_Error" || response_Data["message"] === "background->userInterface:from_Second_Level_Page_to_First_Level_Page_Error") {
                //     //     console.log(response_Data["error"]);
                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                //     // };

                //     // if (response_Data["message"] === "background->userInterface:Real_Time_Data") {
                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                //     //     if (response_Data["level"] === "First_and_Second_Level_Page") {
                //     //         // 'First_Level_Page'; 'Second_Level_Page';
                //     //         console.log(response_Data["message"]);
                //     //         console.log(response_Data["error"]);
                //     //         console.log(response_Data["url"]);
                //     //         console.log(response_Data["level"]);
                //     //         console.log(response_Data["Current_First_Level_Page_Number"]);
                //     //         console.log(response_Data["Current_Second_Level_Page_Number"]);
                //     //         console.log(response_Data["page_number"]);
                //     //         console.log(response_Data["data"]);
                //     //     };
                //     // };
                // }
            );
        }
    );
};

if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
    // onclick="javascript:StartORStopCollectData(window, window, 2, TableSkipPageTextboxTdElement_XPath_1, TableSkipPageTextboxTdElement_XPath_2, TableSkipPageTextboxTdElement_XPath_3, TableSkipPageSubmitButtonTdElement_XPath_1, TableSkipPageSubmitButtonTdElement_XPath_2, TableSkipPageSubmitButtonTdElement_XPath_3, TableNextPageSubmitButtonImgTdElement_XPath_1, TableNextPageSubmitButtonImgTdElement_XPath_2, TableNextPageSubmitButtonImgTdElement_XPath_3, TableWebPageNumberTdElement_XPath_1, TableWebPageNumberTdElement_XPath_2, RetrievalResult_XPath_1, RetrievalResult_XPath_2, NumberOfItemInThisSecondLevelWebPage, SecondLevelWebPageRetrievalResult_XPath, FromSecondLevelWebReturnFirstLevelWeb_XPath, 'ResultExhibitsDiv', 'ResultExhibitsDivTagTable', PublicVariableResultExhibitsWebPage, Data_Server_Url, Data_Receptors)"
    window.document.getElementById("StartORStopCollectDataButton").addEventListener(
        "click",
        async () => {

            // 暫時禁用啓動按鈕，防止頻繁連續點擊操作;
            if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                window.document.getElementById("StartORStopCollectDataButton").disabled = "disabled";
                // 延時 1000 毫秒後取消禁用啓動按鈕;
                window.setTimeout(
                    function() {
                        window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                    },
                    1000
                );
            };

            // 更新啓動配置常量參數值;
            // 數據源網頁的網址;
            if (window.document.getElementById("URLofDataWebPageInputTextarea") !== null) {
                ContainDataWebPageURL = window.document.getElementById("URLofDataWebPageInputTextarea").value;
            };
            // 用於加載數據源網頁的新建窗口變量;
            if (window.document.getElementById("CustomOpenContainDataWebPageNameInputTextarea") !== null) {
                Open_Contain_Data_Web_Page_Name = window.document.getElementById("CustomOpenContainDataWebPageNameInputTextarea").value;
            };
            // 每一次點擊操作的延時長度值輸入框;
            if (window.document.getElementById("IntervalOfCircleClickInputTextBoxInput") !== null) {
                Interval_Of_Circle_Click_value = parseInt(window.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
                // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
            };
            // 每一次點擊操作的延時長度隨機化增減值輸入框;
            if (window.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput") !== null) {
                Randomization_Relative_Interval = parseFloat(window.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
                // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
            };
            // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
            // if (window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton") !== null) {
            //     TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton").innerHTML;
            // };
            if (window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton") !== null) {
                TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton").innerHTML;
            };
            // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
            // if (window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton") !== null) {
            //     TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton").innerHTML;
            // };
            if (window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton") !== null) {
                TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton").innerHTML;
            };
            // // 網頁中關鍵詞輸入框元素的 XPath 值;
            // if (window.document.getElementById("WebKeyWordTextboxElementXPathInputTextarea") !== null) {
            //     WebKeyWordTextboxElement_XPath = window.document.getElementById("WebKeyWordTextboxElementXPathInputTextarea").value;
            // };
            // // 網頁中關鍵詞查詢按鈕元素的 XPath 值;
            // if (window.document.getElementById("WebKeyWordQuerySubmitButtonElementXPathInputTextarea") !== null) {
            //     WebKeyWordQuerySubmitButtonElement_XPath = window.document.getElementById("WebKeyWordQuerySubmitButtonElementXPathInputTextarea").value;
            // };
            // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
            if (window.document.getElementById("TableSkipPageTextboxTdElementXPath1InputTextarea") !== null) {
                TableSkipPageTextboxTdElement_XPath_1 = window.document.getElementById("TableSkipPageTextboxTdElementXPath1InputTextarea").value;
            };
            // 目標網頁中的跳頁按鈕的 xpath 值;
            if (window.document.getElementById("TableSkipPageSubmitButtonTdElementXPath1InputTextarea") !== null) {
                TableSkipPageSubmitButtonTdElement_XPath_1 = window.document.getElementById("TableSkipPageSubmitButtonTdElementXPath1InputTextarea").value;
            };
            // 目標網頁中的下一頁按鈕的 xpath 值;
            if (window.document.getElementById("TableNextPageSubmitButtonImgTdElementXPath1InputTextarea") !== null) {
                TableNextPageSubmitButtonImgTdElement_XPath_1 = window.document.getElementById("TableNextPageSubmitButtonImgTdElementXPath1InputTextarea").value;
            };
            // 目標網頁中的上一頁按鈕的 xpath 值;
            if (window.document.getElementById("TableBackPageSubmitButtonImgTdElementXPath1InputTextarea") !== null) {
                TableBackPageSubmitButtonImgTdElement_XPath_1 = window.document.getElementById("TableBackPageSubmitButtonImgTdElementXPath1InputTextarea").value;
            };
            // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
            if (window.document.getElementById("TableWebPageNumberTdElementXPath1InputTextarea") !== null) {
                TableWebPageNumberTdElement_XPath_1 = window.document.getElementById("TableWebPageNumberTdElementXPath1InputTextarea").value;
            };
            // 當前網頁中可采集數據元素的 XPath 值;
            if (window.document.getElementById("RetrievalResultXPath1InputTextarea") !== null) {
                RetrievalResult_XPath_1 = window.document.getElementById("RetrievalResultXPath1InputTextarea").value;
            };
            // // 第二層網頁中需要抓取的數據的條目數目;
            // if (window.document.getElementById("NumberOfItemInThisSecondLevelWebPageInputTextarea") !== null) {
            //     NumberOfItemInThisSecondLevelWebPage = parseInt(window.document.getElementById("NumberOfItemInThisSecondLevelWebPageInputTextarea").value);
            // };
            // 第二層網頁中需要抓取的數據元素的 XPath 值;
            if (window.document.getElementById("SecondLevelWebPageRetrievalResultXPathInputTextarea") !== null) {
                SecondLevelWebPageRetrievalResult_XPath = window.document.getElementById("SecondLevelWebPageRetrievalResultXPathInputTextarea").value;
            };
            // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
            if (window.document.getElementById("EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea") !== null) {
                EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1 = window.document.getElementById("EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea").value;
            };
            // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
            if (window.document.getElementById("FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea") !== null) {
                FromSecondLevelWebReturnFirstLevelWeb_XPath = window.document.getElementById("FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea").value;
            };

            /* 展示采集到的結果的載體元素類型選擇單選框<input type="radio" name="ResultDisplayContainerRadio" value="table" checked="false"> 或者 <input type="radio"  name="ResultDisplayContainerRadio" value="canvas-datagrid" checked="true">; */;
            // let Result_Display_Container_Radio_value = "table";  // "canvas-datagrid";
            if (window.document.getElementsByName("ResultDisplayContainerRadio") !== null && window.document.getElementsByName("ResultDisplayContainerRadio").length > 0) {
                let Result_Display_Container_Radio = new Array;
                Result_Display_Container_Radio = window.document.getElementsByName("ResultDisplayContainerRadio");
                // let Result_Display_Container_Radio_value = "";
                for (let i=0; i < Result_Display_Container_Radio.length; i++) {
                    if (Result_Display_Container_Radio[i].checked) {
                        /* Result_Display_Container_Radio[i].getAttribute("checked"); */
                        Result_Display_Container_Radio_value = Result_Display_Container_Radio[i].getAttribute("value");
                        /* Result_Display_Container_Radio_value = Result_Display_Container_Radio[i].value; */
                    };
                };
            };
            /* 想要采集的數據處在目標數據源網頁的第幾個層級上選擇單選框<input type="radio" name="DataSourcePageLevelRadio" value="1" checked="false"> 或者 <input type="radio"  name="DataSourcePageLevelRadio" value="2" checked="true">; */;
            // let Data_Level = parseInt(2);  // parseInt(1);  // 想要采集的數據處在目標數據源網頁的第幾個層級上;
            if (window.document.getElementsByName("DataSourcePageLevelRadio") !== null && window.document.getElementsByName("DataSourcePageLevelRadio").length > 0) {
                let Data_Source_Page_Level_Radio = new Array;
                Data_Source_Page_Level_Radio = window.document.getElementsByName("DataSourcePageLevelRadio");
                // let Data_Level = "";
                for (let i=0; i < Data_Source_Page_Level_Radio.length; i++) {
                    if (Data_Source_Page_Level_Radio[i].checked) {
                        /* Data_Source_Page_Level_Radio[i].getAttribute("checked"); */
                        Data_Level = parseInt(Data_Source_Page_Level_Radio[i].getAttribute("value"));
                        /* Data_Level = parseInt(Data_Source_Page_Level_Radio[i].value); */
                    };
                };
            };

            /* 判斷自定義輸入的想要開始采集的第一層級網頁的序號值是否合規; */;
            if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                if (isNaN(window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value)) {
                    alert("採集起始頁碼輸入錯誤." + " \n { " + String(window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value) + " } \n " + "採集起始頁碼應寫入正整數.");
                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                    };
                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                    // };
                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataServerUrlInput") !== null) {
                        window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                        window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                        window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                    };
                    PublicVariableStartORStopCollectDataButtonClickState = true;
                    if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                        // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                    };
                    return false;
                };
                if (parseInt(window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value) < parseInt(1)) {
                    alert("採集起始頁碼輸入錯誤." + " \n { " + String(window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value) + " } \n " + "採集起始頁碼至少應在第一頁或之後.");
                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                    };
                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                    // };
                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataServerUrlInput") !== null) {
                        window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                        window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                        window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                    };
                    PublicVariableStartORStopCollectDataButtonClickState = true;
                    if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                        // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                    };
                    return false;
                };
            };
            if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                if (isNaN(window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value)) {
                    alert("採集終止頁碼輸入錯誤." + " \n { " + String(window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value) + " } \n " + "採集終止頁碼應寫入正整數.");
                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                    };
                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                    // };
                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataServerUrlInput") !== null) {
                        window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                        window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                        window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                    };
                    PublicVariableStartORStopCollectDataButtonClickState = true;
                    if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                        // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                    };
                    return false;
                };
            };

            /* 判斷自定義輸入的當前第一層級網頁中想要開始采集的第二層級網頁的序號值是否合規; */;
            if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                if (isNaN(window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value)) {
                    alert("採集起始頁碼中的起始採集條目輸入錯誤." + " \n { " + String(window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value) + " } \n " + "採集起始頁碼中的起始採集條目應寫入正整數.");
                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                    };
                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                    // };
                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataServerUrlInput") !== null) {
                        window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                        window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                        window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                    };
                    PublicVariableStartORStopCollectDataButtonClickState = true;
                    if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                        // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                    };
                    return false;
                };
                if (parseInt(window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value) < parseInt(1)) {
                    alert("採集起始頁碼中的起始採集條目輸入錯誤." + " \n { " + String(window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value) + " } \n " + "採集起始頁碼中輸入的起始採集條目至少應在第一條或之後.");
                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                    };
                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                    // };
                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataServerUrlInput") !== null) {
                        window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                        window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                    };
                    if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                        window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                    };
                    PublicVariableStartORStopCollectDataButtonClickState = true;
                    if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                        // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                    };
                    return false;
                };
            };

            // 讀取輸入框中自定義輸入的起止頁碼號;
            Start_First_Level_Page_Number = StartFirstLevelPageNumber;
            if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value === "") {
                    window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(Start_First_Level_Page_Number);
                };
                StartFirstLevelPageNumber = parseInt(window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value);
                Start_First_Level_Page_Number = parseInt(window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value);
            };
            End_First_Level_Page_Number = EndFirstLevelPageNumber;
            if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value === "") {
                    window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value = String(End_First_Level_Page_Number);
                };
                EndFirstLevelPageNumber = parseInt(window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value);
                End_First_Level_Page_Number = parseInt(window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value);
            };
            Start_Current_Second_Level_Page_In_Current_First_Level_Page = StartCurrentSecondLevelPageInCurrentFirstLevelPage;
            if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value === "") {
                    window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(Start_Current_Second_Level_Page_In_Current_First_Level_Page);
                };
                StartCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value);
                Start_Current_Second_Level_Page_In_Current_First_Level_Page = parseInt(window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value);
            };
            End_Current_Second_Level_Page_In_Current_First_Level_Page = EndCurrentSecondLevelPageInCurrentFirstLevelPage;
            if (window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput") !== null) {
                if (window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").value === "") {
                    window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").value = String(End_Current_Second_Level_Page_In_Current_First_Level_Page);
                };
                EndCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").value);
                End_Current_Second_Level_Page_In_Current_First_Level_Page = parseInt(window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").value);
            };

            Maximum_First_Level_Page_Number = MaximumPageNumber;
            Maximum_Second_Level_Page_Number = Total_Of_Second_Level_Page_in_Current_First_Level_Page;
            Total_Entry_from_First_Level_Page_to_Second_Level_Page = Total_Of_Second_Level_Page_in_Current_First_Level_Page;
            Total_Data_in_Current_First_Level_Page = Total_Of_Second_Level_Page_in_Current_First_Level_Page;

            // 用於存儲采集結果的數據庫服務器網址，字符串變量;
            // http://localhost:27016/insertMany?dbName=testWebData&dbTableName=test20220703&dbUser=admin_testWebData&dbPass=admin&Key=username:password
            // Data_Server_Url = "";  // 用於存儲采集結果的數據庫服務器網址，字符串變量;
            if (window.document.getElementById("DataServerUrlInput") !== null) {
                Data_Server_Url = String(window.document.getElementById("DataServerUrlInput").value);
            };
            // console.log(Data_Server_Url);

            /* 采集到的結果數據保存形式選擇複選框<input id="DataReceptorsDatabaseCheckbox" type="checkbox" name="DataReceptorsCheckbox" value="Database"> 或者 <input id="DataReceptorsWebpageCheckbox" type="checkbox" name="DataReceptorsCheckbox" value="Webpage" checked="true">; */;
            // Data_Receptors = String("Webpage");  // 用於存儲采集結果的容器類型複選框值，字符串變量，可取 "Database"，"Database_and_Webpage"，"Webpage" 值，例如取值：String("Webpage");
            // 判斷指定名稱的複選框元素是否存在;
            if (window.document.getElementsByName("DataReceptorsCheckbox") !== null && window.document.getElementsByName("DataReceptorsCheckbox").length > 0) {
                // window.document.getElementsByName("DataReceptorsCheckbox");
                // window.document.getElementById("DataReceptorsDatabaseCheckbox");
                // window.document.getElementById("DataReceptorsWebpageCheckbox");

                let Data_Receptors_Checkbox = new Array;
                Data_Receptors_Checkbox = window.document.getElementsByName("DataReceptorsCheckbox");
                Data_Receptors = "";
                // 遍歷指定名稱的複選框元素;
                for (let i = 0; i < Data_Receptors_Checkbox.length; i++) {

                    // 判斷複選框元素的選中狀態;
                    if (Data_Receptors_Checkbox[i].checked) {
                        if (Data_Receptors === "") {
                            /* Data_Receptors_Checkbox[i].getAttribute("checked"); */
                            Data_Receptors = String(Data_Receptors_Checkbox[i].getAttribute("value"));  // 從複選框張提取值，並强制轉換爲字符串類型;
                            /* Data_Receptors = String(Data_Receptors_Checkbox[i].value); */
                        } else {
                            /* Data_Receptors_Checkbox[i].getAttribute("checked"); */
                            Data_Receptors = String(Data_Receptors) + "_and_" + String(Data_Receptors_Checkbox[i].getAttribute("value"));  // 從複選框張提取值，並强制轉換爲字符串類型，然後與已有字符串值拼接;
                            /* Data_Receptors = String(Data_Receptors) + "_and_" + String(Data_Receptors_Checkbox[i].value); */
                        };
                        // console.log(String(Data_Receptors_Checkbox[i].getAttribute("value")));
                        // console.log(Data_Receptors);
                    };
                };
            };
            // console.log(Data_Receptors);

            // 判斷結果數據的保存模式（數據庫或者 Web Page 網頁）;
            if (Data_Receptors === "Database" || Data_Receptors === "Database_and_Webpage") {

                if (Data_Server_Url === "") {

                    console.log("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");
    
                    if (Data_Receptors === "Database") {

                        if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                        };
                        // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                        if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                            window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                            window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                            window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                            window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        };
                        // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                        //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        // };
                        if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                            window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                            window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                            window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                            window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("DataServerUrlInput") !== null) {
                            window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                            window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                            window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                        };

                        PublicVariableStartORStopCollectDataButtonClickState = true;

                        if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                            // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        };

                        return false;
                    };

                    let confirmReteurn = confirm(
                        "傳入的用於保存結果的數據庫服務器地址參數值錯誤." + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空." + "\n" + "在數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空的情況下，將不會向數據庫服務器發送數據，結果只寫入網頁含有的表格元素中." + "\n" + "單擊 { 確定 } 按鈕將繼續運行，單擊 { 取消 } 按鈕將中止運行.",
                        "確定",
                        "取消"
                    );

                    if (confirmReteurn === true) {
                        // 鼠標左鍵單擊 { 確定 } 按鈕，程序不會中止運行，繼續執行後面的語句;
                    } else if (confirmReteurn === false) {
                        // 鼠標左鍵單擊 { 取消 } 按鈕，程序中止運行;

                        if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                        };
                        // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                        if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                            window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                            window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                            window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                            window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        };
                        // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                        //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        // };
                        if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                            window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                            window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                            window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                            window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("DataServerUrlInput") !== null) {
                            window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                            window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                        };
                        if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                            window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                        };

                        PublicVariableStartORStopCollectDataButtonClickState = true;

                        if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                            // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        };

                        return false;

                    } else {

                        console.log("參數錯誤 ( Window Confirm Reteurn = " + String(confirmReteurn) + " )，只能取布爾值 true、false 之一.");

                        // // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                        // chrome.runtime.sendMessage(
                        //     {
                        //         "message": 'userInterface->background:StopCollect',  // 'contentScript->background:Input_Start_First_Level_Page_Number_Error',  // 'Input_Start_First_Level_Page_Number_' + String(StartPageNumber) + '_Error',
                        //         "error": "Input Start Number = { " + String(StartPageNumber) + " } > Input End Number = { " + String(EndPageNumber) + " }.",
                        //         "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                        //         // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                        //         "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                        //         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                        //         "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                        //         "url": String(window.document.location.href),
                        //         "page_number": String(CurrentFirstLevelPageNumber) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                        //         "Current_First_Level_Page_Number": parseInt(CurrentFirstLevelPageNumber),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                        //         "Current_Second_Level_Page_Number": parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                        //         "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                        //     },  // 發送的具體數據，可以是 JSON 對象;
                        //     // (response_Data) => {
                        //     //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                        //     //     // console.log(response_Data);
                        //     //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                        //     //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                        //     //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                        //     //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                        //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                        //     //     //     console.log('background instruction: { Stop collecting }.');
                        //     //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //     //     //     console.log('{ Stand By }.');
                        //     //     // };
                        //     //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                        //     //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                        //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                        //     //     //     console.log('background instruction: { StandBy }.');
                        //     //     // };
                        //     // }
                        // );

                        // // if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        // //     window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                        // // };
                        // // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                        // if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        //     window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        // };
                        // if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        //     window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        // };
                        // if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        //     window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        // };
                        // if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        //     window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        // };
                        // if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        //     window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        // };
                        // if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        //     window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        // };
                        // if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        //     window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        // };
                        // // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                        // //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        // // };
                        // if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        //     window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        // };
                        // if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        //     window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        // };
                        // if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        //     window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        // };
                        // if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        //     window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        // };
                        // if (window.document.getElementById("DataServerUrlInput") !== null) {
                        //     window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                        // };
                        // if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                        //     window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                        // };
                        // if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                        //     window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                        // };

                        // PublicVariableStartORStopCollectDataButtonClickState = true;

                        // if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                        //     // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        //     window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        // };

                        // // alert("參數錯誤 ( Window Confirm Reteurn = " + String(confirmReteurn) + " )，只能取布爾值 true、false 之一.");

                        // return false;
                    };
                };
            };

            // 對目標數據源網頁執行循環操作的函數在當前人機交互頁面的 JavaScript 脚本中時的啓動入口;
            // http://127.0.0.1:8000/a.html
            // /html/body/div/centre/a[3]
            // /html/body/div/centre/button[2]
            // /html/body/div/centre/a[2]
            // /html/body/div/centre/a[1]
            level = 'First_Level_Page';  // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';  // 當前打開目標數據源網頁的層級類型;
            let back_value = StartORStopCollectData(
                window,  // 交互操作頁面窗口對象;
                window,  // 目標數據源頁面窗口對象;
                parseInt(Data_Level),  // 1, 2, 目標數據源網頁的層級結構，是一級還是二層頁面;
                String(Result_Display_Container_Radio_value),  // "table", "canvas-datagrid", 展示采集到的結果的載體元素類型;
                parseInt(CurrentFirstLevelPageNumber),  // 當前第一層級網頁的頁碼號;
                parseInt(NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage),  // 當前第一層級網頁的頁碼號;
                parseInt(StartFirstLevelPageNumber),  // 自定義設定的啓動采集的的第一層級網頁的頁碼號;
                parseInt(EndFirstLevelPageNumber),  // 自定義設定的終止采集的的第一層級網頁的頁碼號;
                parseInt(StartCurrentSecondLevelPageInCurrentFirstLevelPage),  // 自定義設定的從第一層級網頁中的第幾個第二層級網頁啓動采集的頁碼號;
                // parseInt(EndCurrentSecondLevelPageInCurrentFirstLevelPage),  // 自定義設定的目標數據源網頁中至第一層級網頁中的第幾個第二層級網頁終止采集的頁碼號;
                /* DelayAfterClickFirstLevelWebSkipPageButton, */
                /* DelayAfterClickFirstLevelWebNextPageButton, */
                /* DelayAfterClickEntrySecondLevelWebButton, */
                /* DelayAfterClickReturnFirstLevelWebButton, */
                /* IntervalOfCircleClickNextPageButton, */
                // TableSkipPageTextboxTdElement_XPath_1,
                // TableSkipPageSubmitButtonTdElement_XPath_1,
                // TableNextPageSubmitButtonImgTdElement_XPath_1,
                // TableWebPageNumberTdElement_XPath_1,
                // RetrievalResult_XPath_1,
                // // parseInt(NumberOfItemInThisSecondLevelWebPage),
                // SecondLevelWebPageRetrievalResult_XPath,
                // EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                // FromSecondLevelWebReturnFirstLevelWeb_XPath,
                String('ResultExhibitsDiv'),  // ResultExhibitsDivID,
                String('ResultExhibitsDivTagTable'),  // ResultExhibitsDivTagTableID,
                PublicVariableResultExhibitsWebPage,
                String(Data_Server_Url),  // 自定義的保存采集結果的數據庫服務器地址字符串，例如取值：http://localhost:27016/insertMany?dbName=testWebData&dbTableName=test20220703&dbUser=admin_testWebData&dbPass=admin&Key=username:password;
                String(Data_Receptors),  // 用於判斷采集到的結果數據的保存形式，是保存在網頁中，還是保存到數據庫服務器中，可取字符串值 "Database"，"Database_and_Webpage"，"Webpage" 其中之一;
                /* DelayAfterClickFirstLevelWebSkipPageButton, */
                /* DelayAfterClickFirstLevelWebNextPageButton, */
                /* DelayAfterClickEntrySecondLevelWebButton, */
                /* DelayAfterClickReturnFirstLevelWebButton, */
                /* IntervalOfCircleClickNextPageButton, */
                // use_AJAX,  // 自定義函數，用於使用 AJAX 方法向保存結果的數據庫服務器發送采集到的結果數據;
                DisplayData  // 自定義函數，在結果承載窗口頁面展示采集到的數據;
                // Open_Second_Level_Pages_in_Current_First_Level_in_Order  // 自定義函數，讀取當前所在的第一層級頁面中的數據，並循環點擊進入當前第一層級網頁中包含的的第二層級頁面，並讀取第二層級頁面中的目標數據;
            );

            /*
            // 對目標數據源網頁執行循環操作的函數在目標數據源網頁的插入 JavaScript 脚本（_injected.js）中時的啓動入口;
            // http://127.0.0.1:8000/ajax.html
            level = 'First_and_Second_Level_Page';  // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';  // 當前打開目標數據源網頁的層級類型;
            // 更改按鈕狀態和標志;
            PublicVariableStartORStopCollectDataButtonClickState = !PublicVariableStartORStopCollectDataButtonClickState;
            if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                switch(PublicVariableStartORStopCollectDataButtonClickState) {
                    case true: window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data"; break;
                    case false: window.document.getElementById("StartORStopCollectDataButton").innerText = "Stop Collect Data"; break;
                    default: alert("Start OR Stop Collect Data Button" + "\n" + "Function StartORStopCollectData() Variable { PublicVariableStartORStopCollectDataButtonClickState } Error !" + "\n" + PublicVariableStartORStopCollectDataButtonClickState);
                };
            };
            if (PublicVariableStartORStopCollectDataButtonClickState) {
                // 在自定義的用戶操作交互頁面窗口(test.html)進程中主動向後臺頁面(background.html)進程傳遞指令;
                chrome.runtime.sendMessage(
                    {
                        "message": 'userInterface->background:StopCollect',
                        "error": "",
                        "url": String(window.document.location.href),
                        "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                        // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                        "ContainDataWebPageURL": ContainDataWebPageURL,  // 目標數據源網頁的 URL 網址;
                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 給打開目標數據源網頁所在窗口標籤頁取的自定義命名;
                        "level": level,  // 'First_Level_Page', 'Second_Level_Page',
                        "Data_Level": Data_Level,  // parseInt(2), parseInt(1),
                        // "page_number": String(CurrentFirstLevelPageNumber) + '--' + String(NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                        "Current_First_Level_Page_Number": CurrentFirstLevelPageNumber,
                        "Maximum_First_Level_Page_Number": MaximumPageNumber,
                        "Total_Data_in_Current_First_Level_Page": Total_Data_in_Current_First_Level_Page,
                        // "Data_in_Current_First_Level_Page": Data_in_Current_First_Level_Page,
                        "Total_Entry_from_First_Level_Page_to_Second_Level_Page": Total_Of_Second_Level_Page_in_Current_First_Level_Page,  // Total_Entry_from_First_Level_Page_to_Second_Level_Page,
                        // "XPath_from_First_Level_Page_to_Second_Level_Page": XPath_from_First_Level_Page_to_Second_Level_Page,
                        "Current_Second_Level_Page_Number": NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage,
                        "Maximum_Second_Level_Page_Number": Total_Of_Second_Level_Page_in_Current_First_Level_Page,
                        "Total_Data_in_Current_Second_Level_Page": Total_Data_in_Current_Second_Level_Page,
                        // "Data_in_Current_Second_Level_Page": Data_in_Current_Second_Level_Page,
                        "Total_Entry_from_Second_Level_Page_to_First_Level_Page": Total_Entry_from_Second_Level_Page_to_First_Level_Page,
                        // "XPath_from_Second_Level_Page_to_First_Level_Page": XPath_from_Second_Level_Page_to_First_Level_Page,
                        "Start_First_Level_Page_Number": StartFirstLevelPageNumber,
                        "End_First_Level_Page_Number": EndFirstLevelPageNumber,
                        "Start_Current_Second_Level_Page_In_Current_First_Level_Page": StartCurrentSecondLevelPageInCurrentFirstLevelPage,
                        "End_Current_Second_Level_Page_In_Current_First_Level_Page": EndCurrentSecondLevelPageInCurrentFirstLevelPage,
                        "Configuration_Parameters": {
                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                            "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                            "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                            "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                            "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                            "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                            "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                            "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                            "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                            "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                            "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                            "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                            "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                            "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                            "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                        },
                        "data": ""  // JSON.stringify(request_Dict, function (key, value) {}, 4);
                    },  // 發送的具體數據，可以是 JSON 對象;
                    // (response_Data) => {
                    //     // console.log(response_Data);
                    //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                    //     // if (response_Data["message"] === "background->userInterface:Real_Time_Data") {
                    //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                    //     //     if (response_Data["level"] === "First_and_Second_Level_Page") {
                    //     //         // 'First_Level_Page'; 'Second_Level_Page';
                    //     //         console.log(response_Data["message"]);
                    //     //         console.log(response_Data["error"]);
                    //     //         console.log(response_Data["url"]);
                    //     //         console.log(response_Data["level"]);
                    //     //         console.log(response_Data["Current_First_Level_Page_Number"]);
                    //     //         console.log(response_Data["Current_Second_Level_Page_Number"]);
                    //     //         console.log(response_Data["page_number"]);
                    //     //         console.log(response_Data["data"]);
                    //     //     };
                    //     // };
                    // }
                );
                // if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                //     window.document.getElementById("StartORStopCollectDataButton").disabled = "disabled";  // 暫時禁用啓動按鈕，防止頻繁連續點擊操作;
                //     // 延時 1000 毫秒後取消禁用啓動按鈕;
                //     window.setTimeout(
                //         function() {
                //             window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                //         },
                //         1000
                //     );
                // };
                if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                    window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                };
                if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                    window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                };
                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                    window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                };
                if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                    window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                };
                if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                    window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                };
                if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                    window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                };
                if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                    window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                };
                // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                // };
                if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                    window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                };
                if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                    window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                };
                if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                    window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                };
                if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                    window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                };
                if (window.document.getElementById("DataServerUrlInput") !== null) {
                    window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                };
                if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                    window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                };
                if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                    window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                };
                return "StopCollect";
            };
            // 配置相關按鈕禁用不可再操作;
            if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                window.document.getElementById("NewOpenWebPageContainDataButton").disabled = "disabled";
            };
            if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").disabled = "disabled";
            };
            if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled = "disabled";
            };
            if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").disabled = "disabled";
            };
            if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                window.document.getElementById("QueryKeyWordSubmitButton").disabled = "disabled";
            };
            if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").disabled = "disabled";
            };
            if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").disabled = "disabled";
            };
            // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
            //     window.document.getElementById("NewOpenWebPageButton").disabled = "disabled";
            // };
            if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                window.document.getElementById("DataSourcePageLevel1Radio").disabled = "disabled";
            };
            if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                window.document.getElementById("DataSourcePageLevel2Radio").disabled = "disabled";
            };
            if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                window.document.getElementById("ResultDisplayContainerTableRadio").disabled = "disabled";
            };
            if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").disabled = "disabled";
            };
            if (window.document.getElementById("DataServerUrlInput") !== null) {
                window.document.getElementById("DataServerUrlInput").disabled = "disabled";
            };
            if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                window.document.getElementById("DataReceptorsDatabaseCheckbox").disabled = "disabled";
            };
            if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                window.document.getElementById("DataReceptorsWebpageCheckbox").disabled = "disabled";
            };
            // 在自定義的用戶操作交互頁面窗口(test.html)進程中主動向後臺頁面(background.html)進程傳遞指令;
            chrome.runtime.sendMessage(
                {
                    "message": 'userInterface->background:StartCollect',
                    "error": "",
                    "url": String(window.document.location.href),
                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 目標數據源網頁的 URL 網址;
                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 給打開目標數據源網頁所在窗口標籤頁取的自定義命名;
                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                    "Data_Level": Data_Level,  // parseInt(2), parseInt(1),
                    // "page_number": String(CurrentFirstLevelPageNumber) + '--' + String(NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                    "Current_First_Level_Page_Number": CurrentFirstLevelPageNumber,
                    "Maximum_First_Level_Page_Number": MaximumPageNumber,
                    "Total_Data_in_Current_First_Level_Page": Total_Data_in_Current_First_Level_Page,
                    // "Data_in_Current_First_Level_Page": Data_in_Current_First_Level_Page,
                    "Total_Entry_from_First_Level_Page_to_Second_Level_Page": Total_Of_Second_Level_Page_in_Current_First_Level_Page,  // Total_Entry_from_First_Level_Page_to_Second_Level_Page,
                    // "XPath_from_First_Level_Page_to_Second_Level_Page": XPath_from_First_Level_Page_to_Second_Level_Page,
                    "Current_Second_Level_Page_Number": NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage,
                    "Maximum_Second_Level_Page_Number": Total_Of_Second_Level_Page_in_Current_First_Level_Page,
                    "Total_Data_in_Current_Second_Level_Page": Total_Data_in_Current_Second_Level_Page,
                    // "Data_in_Current_Second_Level_Page": Data_in_Current_Second_Level_Page,
                    "Total_Entry_from_Second_Level_Page_to_First_Level_Page": Total_Entry_from_Second_Level_Page_to_First_Level_Page,
                    // "XPath_from_Second_Level_Page_to_First_Level_Page": XPath_from_Second_Level_Page_to_First_Level_Page,
                    "Start_First_Level_Page_Number": StartFirstLevelPageNumber,
                    "End_First_Level_Page_Number": EndFirstLevelPageNumber,
                    "Start_Current_Second_Level_Page_In_Current_First_Level_Page": StartCurrentSecondLevelPageInCurrentFirstLevelPage,
                    "End_Current_Second_Level_Page_In_Current_First_Level_Page": EndCurrentSecondLevelPageInCurrentFirstLevelPage,
                    "Configuration_Parameters": {
                        "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                        "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                        "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                        "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                        "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                        "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                        "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                        "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                        "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                        "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                        "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                        "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                        "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                        "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                        "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                        "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                        "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                    },
                    "data": ""  // JSON.stringify(request_Dict, function (key, value) {}, 4);
                },  // 發送的具體數據，可以是 JSON 對象;
                // (response_Data) => {
                //     // console.log(response_Data);
                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                //     // if (response_Data["message"] === "background->userInterface:Real_Time_Data") {
                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                //     //     if (response_Data["level"] === "First_and_Second_Level_Page") {
                //     //         // 'First_Level_Page'; 'Second_Level_Page';
                //     //         console.log(response_Data["message"]);
                //     //         console.log(response_Data["error"]);
                //     //         console.log(response_Data["url"]);
                //     //         console.log(response_Data["level"]);
                //     //         console.log(response_Data["Current_First_Level_Page_Number"]);
                //     //         console.log(response_Data["Current_Second_Level_Page_Number"]);
                //     //         console.log(response_Data["page_number"]);
                //     //         console.log(response_Data["data"]);
                //     //     };
                //     // };
                // }
            );
            */
        }
    );
};

if (window.document.getElementById("CollectResultFromMemoryToHardDiskButton") !== null) {
    // onclick="javascript:CollectResultFromMemoryToHardDisk(window, '2', '<fenliejiangefuhao>', '\n', PublicVariableCollectResultStoredStringArray)"
    window.document.getElementById("CollectResultFromMemoryToHardDiskButton").addEventListener(
        "click",
        async () => {

            let stored_string = CollectResultFromMemoryToHardDisk(
                window,
                "2",
                "<fenliejiangefuhao>",
                "\n",
                PublicVariableCollectResultStoredStringArray
            );
        }
    );
};

if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
    // onclick="javascript:StoredCollectResultFromHardDiskToMemory(window, '2', '<fenliejiangefuhao>', '\n', 'table', 'ResultExhibitsDiv', 'ResultExhibitsDivTagTable', PublicVariableResultExhibitsWebPage, DisplayData)"
    window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").addEventListener(
        "click",
        async () => {

            let stored_string_array = StoredCollectResultFromHardDiskToMemory(
                window,
                '2',
                '<fenliejiangefuhao>',
                '\n',
                Result_Display_Container_Radio_value,
                'ResultExhibitsDiv',
                'ResultExhibitsDivTagTable',
                PublicVariableResultExhibitsWebPage,
                DisplayData
            );
        }
    );
};

if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
    // ondblclick="javascript:NewDivOuterHTMLExhibits(window)"
    window.document.getElementById("DataCollectStatusLabelTwoLabel").addEventListener(
        "dblclick",
        async () => {
            NewDivOuterHTMLExhibits(window);
        }
    );
};


function NewDivOuterHTMLExhibits(windowHandle_1) {
    let NewDivOuterHTML = "";
    let NewDivOuterHTML_head = 'window.document.getElementsByTagName("head").item(0).outerHTML';
    if (windowHandle_1.document.getElementsByTagName("head") !== null) {
        NewDivOuterHTML_head = windowHandle_1.document.getElementsByTagName("head").item(0).outerHTML;
    };
    let NewDivOuterHTML_OperationModuleDiv = 'window.document.getElementById("OperationModuleDiv").outerHTML';
    if (windowHandle_1.document.getElementById("OperationModuleDiv") !== null) {
        NewDivOuterHTML_OperationModuleDiv = windowHandle_1.document.getElementById("OperationModuleDiv").outerHTML;
    };
    let NewDivOuterHTML_ParameterVariableDiv = 'window.document.getElementById("ParameterVariableDiv").outerHTML';
    if (windowHandle_1.document.getElementById("ParameterVariableDiv") !== null) {
        NewDivOuterHTML_ParameterVariableDiv = windowHandle_1.document.getElementById("ParameterVariableDiv").outerHTML;
    };
    let NewDivOuterHTML_ResultExhibitsDiv = 'window.document.getElementById("ResultExhibitsDiv").outerHTML';
    if (windowHandle_1.document.getElementById("ResultExhibitsDiv") !== null) {
        NewDivOuterHTML_ResultExhibitsDiv = windowHandle_1.document.getElementById("ResultExhibitsDiv").outerHTML;
    };
    let NewDivOuterHTML_srctestjs = 'window.document.getElementById("srctestjs").outerHTML';
    if (windowHandle_1.document.getElementById("srctestjs") !== null) {
        NewDivOuterHTML_srctestjs = windowHandle_1.document.getElementById("srctestjs").outerHTML;
    };
    let NewDivOuterHTML_DivJavaScriptFunctionAggregateScript = 'window.document.getElementById("DivJavaScriptFunctionAggregateScript").outerHTML';
    if (windowHandle_1.document.getElementById("DivJavaScriptFunctionAggregateScript") !== null) {
        NewDivOuterHTML_DivJavaScriptFunctionAggregateScript = windowHandle_1.document.getElementById("DivJavaScriptFunctionAggregateScript").outerHTML;
    };
    NewDivOuterHTML = NewDivOuterHTML_head + "\n" + NewDivOuterHTML_OperationModuleDiv + "\n" + NewDivOuterHTML_ParameterVariableDiv + "\n" + NewDivOuterHTML_ResultExhibitsDiv + "\n" + NewDivOuterHTML_srctestjs + "\n" + NewDivOuterHTML_DivJavaScriptFunctionAggregateScript;
    if (!window.console) { window.console = { log: function() {} }; } else { window.console.log(NewDivOuterHTML); };
    alert(NewDivOuterHTML_OperationModuleDiv);
    return NewDivOuterHTML;
};

function OpenWebPageContainData(
    windowHandle_1,
    BranchSwitch,
    OpenWebPageName,
    ContainDataWebPageURL,
    TemporaryStorageNewOpenWebPageInsertFunctionCodeString,
    PublicVariableContainDataWebPage,
    callback
){

    switch(BranchSwitch) {

        case true: {

            /* 配置相關按鈕不可再操作 */;
            if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) { windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").disabled = "disabled"; };
            if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) { windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").disabled = "disabled"; };
            if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) { windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").disabled = "disabled"; };
            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) { windowHandle_1.document.getElementById("StartORStopCollectDataButton").disabled = "disabled"; };
            if (windowHandle_1.document.getElementById("URLofDataWebPageInputTextarea") !== null) { windowHandle_1.document.getElementById("URLofDataWebPageInputTextarea").disabled = "disabled"; };
            if (windowHandle_1.document.getElementById("OperationModuleDiv") !== null) {
                if (windowHandle_1.document.getElementById("OperationModuleDiv").style.display !== "none") {
                    windowHandle_1.document.getElementById("OperationModuleDiv").style.display = "none";
                };
            };
            // if (windowHandle_1.document.getElementById("ResultExhibitsDiv") !== null) {
            //     if (windowHandle_1.document.getElementById("ResultExhibitsDiv").style.display !== "none") {
            //         windowHandle_1.document.getElementById("ResultExhibitsDiv").style.display = "none";
            //     };
            // };

            PublicVariableNewOpenWebPageContainDataButtonClickNumber = parseInt(PublicVariableNewOpenWebPageContainDataButtonClickNumber) + parseInt(1);

            if (PublicVariableContainDataWebPage.name === "") {
                // Object.prototype.toString.call(PublicVariableContainDataWebPage) === "[object Object]"

                PublicVariableContainDataWebPage = windowHandle_1.open(
                    ContainDataWebPageURL,
                    OpenWebPageName,
                    "menubar=no, scrollbars=yes, resizable=yes, status=yes, titlebar=no, toolbar=no, location=yes"
                );
                /*
                // window.open("page.html", "newwindow", "height=100, width=400, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, status=no");
                // 參數解釋;
                // window.open 瀏覽器環境中彈出新窗口的命令;
                // "newwindow" 瀏覽器環境中新彈出窗口的名字（不是文件名），非必須，可用空字符串 "" 代替;
                // height=100 瀏覽器環境中新彈出窗口的高度，單位像素;
                // width=400 瀏覽器環境中新彈出窗口的寬度單位像素;
                // top=0 瀏覽器環境中新彈出窗口距離屏幕上方的像素值;
                // left=0 瀏覽器環境中新彈出窗口距離屏幕左側的像素值;
                // toolbar=no 瀏覽器環境中新彈出窗口是否顯示工具欄，yes 為顯示;
                // menubar，scrollbars 瀏覽器環境中新彈出窗口的菜單欄和滾動欄;
                // resizable=no 瀏覽器環境中新彈出窗口是否允許改變窗口大小，yes 為允許;
                // location=no 瀏覽器環境中新彈出窗口是否顯示地址欄，yes 為允許;
                // status=no 瀏覽器環境中新彈出窗口是否顯示狀態欄内的信息（通常是文件已經打開），yes 為允許;
                */;
                PublicVariableContainDataWebPage.focus();

            } else if (PublicVariableContainDataWebPage.name === OpenWebPageName) {
                // Object.prototype.toString.call(PublicVariableContainDataWebPage) === "[object Window]"
                // PublicVariableContainDataWebPage.closed

                PublicVariableContainDataWebPage.replace(ContainDataWebPageURL);  // "about:blank" 刷新窗口替換為新鏈接 ContainDataWebPageURL ;
                // PublicVariableContainDataWebPage.assign(ContainDataWebPageURL);  // "about:blank" 窗口打開新鏈接 ContainDataWebPageURL ;
                // PublicVariableContainDataWebPage.location.href = "";  // "about:blank" 窗口的 url 地址;
                PublicVariableContainDataWebPage.focus();

            } else {};

            // chrome.tabs.create(
            //     {
            //         // windowId: 1,
            //         url: ContainDataWebPageURL
            //     },
            //     (tabPage) => {
            //         // console.log(tabPage.id);
            //         // alert(tabPage.id);
            //     }
            // );
            // chrome.tabs.get(tabPage.id, (tabPage) => {
            //     console.log(tabPage.id);
            //     alert(tabPage.id);
            // });
            // chrome.tabs.getSelected(tabPage.windowId, (tabPage) => {
            //     console.log(tabPage.id);
            //     alert(tabPage.id);
            // });
            // chrome.tabs.query(
            //     {
            //         // active: true,
            //         // status: "complete",  // "loading";
            //         // title: "",
            //         url: chrome.extension.getURL('./background/background.html')
            //     },
            //     function(tabs) {
            //         alert(tabs.length ? tabs[0].id: null);
            //         alert(tabs.length ? tabs[0].windowId: null);
            //     }
            // );
            // chrome.windows.remove(tabPage.id, function() {});  // 關閉標籤頁;

            // let delay_ms = 30000;
            // let start_time = new Date().getTime();
            // while (new Date().getTime() < start_time + delay_ms) {
            //     continue;
            // };

            let NewOpenWebPageJavaScriptFunctionAggregateScript = windowHandle_1.document.createElement("script");
            NewOpenWebPageJavaScriptFunctionAggregateScript.setAttribute("id", "NewOpenWebPageJavaScriptFunctionAggregateScript");
            NewOpenWebPageJavaScriptFunctionAggregateScript.setAttribute("type", "text/javascript");
            NewOpenWebPageJavaScriptFunctionAggregateScript.setAttribute("language", "javascript");

            /* let NewOpenWebPageInsertFunctionCodeString = windowHandle_1.document.createTextNode(windowHandle_1.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString").innerHTML); */;  /* 關聯到 3874 行的語句; */;

            // /* let TemporaryStorageNewOpenWebPageInsertFunctionCodeString = '+' \';\'+ */
            // TemporaryStorageNewOpenWebPageInsertFunctionCodeString = ';'+
            //     ' window.onbeforeunload = function(event) { '+
            //     '       event.returnValue = "是否現在就要離開本頁面？"+"//n"+"比如要不要先點擊 < 取消 > 關閉本頁面，在保存一下之後再離開呢？"; '+
            //     ' } '+
            //     ' ; '
            //     +
            //     ' function NewFunction() { '+
            //     '    alert(window.document.getElementsByTagName("html")[0].outerHTML); '+
            //     ' }; ';

            let NewOpenWebPageInsertFunctionCodeString = windowHandle_1.document.createTextNode(TemporaryStorageNewOpenWebPageInsertFunctionCodeString);

            // if (Object.prototype.toString.call(PublicVariableContainDataWebPage) === "[object Window]") {
                PublicVariableContainDataWebPage.document.addEventListener(
                    'DOMContentLoaded',  // 'load';
                    () => {
                        // 判斷打開的網頁的主機域名，對特定網頁進行操作;
                        // if (PublicVariableContainDataWebPage.document.location.host === ContainDataWebPageURL) {
                            // PublicVariableContainDataWebPage.location.href === ContainDataWebPageURL
                            /* PublicVariableContainDataWebPage.document.write("<h1>这是新打开的窗口</h1>"); */; /* 注意不能使用 .write() 方法向網頁插入代碼，因爲執行 .write() 方法會重繪網頁 DOM 導致網頁原有内容被清空; */;
                            /* PublicVariableContainDataWebPage.document.head.appendChild(NewOpenWebPageJavaScriptFunctionAggregateScript); */;
                            PublicVariableContainDataWebPage.document.getElementsByTagName("head")[0].appendChild(NewOpenWebPageJavaScriptFunctionAggregateScript);
                            PublicVariableContainDataWebPage.NewOpenWebPageJavaScriptFunctionAggregateScript.appendChild(NewOpenWebPageInsertFunctionCodeString);
                        // };
                    }
                );
            // };

            if (callback) { callback(null, PublicVariableContainDataWebPage); };
            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(PublicVariableContainDataWebPage.document.getElementsByTagName("html")[0].outerHTML);}; */;
            /* alert(PublicVariableContainDataWebPage.document.getElementsByTagName("html")[0].outerHTML); */;

            // // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
            // chrome.runtime.sendMessage(
            //     {
            //         "message": 'userInterface->background:Open_Contain_Data_Web_Page',
            //         "url": String(windowHandle_1.document.location.href),
            //         "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
            //         // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
            //         "Open_Contain_Data_Web_Page_Name": OpenWebPageName,  // "testContainDataWebPage",
            //         "ContainDataWebPageURL": ContainDataWebPageURL,
            //         "data": ""  // JSON.stringify(request_Dict, function (key, value) {}, 4);
            //     },  // 發送的具體數據，可以是 JSON 對象;
            //     (response_Data) => {
            //         // console.log(response_Data);
            //         // response_data = JSON.parse(response_Data["data"], function (key, value) {});
            //         if (response_Data["message"] === "background->userInterface:StandBy") {
            //             // console.log('background instruction: { ' + response_Data["message"] + ' }.');
            //             // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
            //             console.log('background instruction: { StandBy }.');
            //         };
            //     }
            // );

            window.setTimeout(function () {
                if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) { windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled"); };
                if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) { windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled"); };
                if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) { windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled"); };
                if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) { windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled"); };
                if (windowHandle_1.document.getElementById("URLofDataWebPageInputTextarea") !== null) { windowHandle_1.document.getElementById("URLofDataWebPageInputTextarea").removeAttribute("disabled"); };
            }, 3000);

            return PublicVariableContainDataWebPage;
            // break;
        };

        case false: {
            return PublicVariableNewOpenWebPageContainDataButtonClickNumber;
            // break;
        };

        default: {
            alert("Function: NewOpenWebPage(Parameter1,Parameter2)"+"\n"+"<Parameter1> input Error !"+"\n"+ BranchSwitch);
            return null;
        };
    };
};

function DisplayData(
    windowHandle_1,  // 操作界面窗口對象;
    BranchSwitch,
    DataStringArray,
    ResultExhibitsDivID,
    ResultExhibitsDivTagTableID,
    RetrievalResultUnitTRID
){
    /* 下面代碼將抓取到的結果展示在網頁元素 DIV 層 ResultExhibitsDiv 中; */;
    let ResultExhibitsDiv = null;
    if (windowHandle_1.document.getElementById(ResultExhibitsDivID)) {        
        ResultExhibitsDiv = windowHandle_1.document.getElementById(ResultExhibitsDivID);        
    } else if (!(windowHandle_1.document.getElementById(ResultExhibitsDivID))) {
        ResultExhibitsDiv = windowHandle_1.document.createElement("div");
        ResultExhibitsDiv.setAttribute("id", ResultExhibitsDivID);
        ResultExhibitsDiv.style.position = "static";
        /* ResultExhibitsDiv.style.position = "fixed"; */;
        /* ResultExhibitsDiv.style.position = "absolute"; */;
        ResultExhibitsDiv.style.backgroundColor = "transparent";  /* green */;
        /* ResultExhibitsDiv.style.width = "100%"; */;
        /* ResultExhibitsDiv.style.height = "100%"; */;
        ResultExhibitsDiv.style.margin = "auto";
        /* ResultExhibitsDiv.style.margin_left = "1%"; */;
        /* ResultExhibitsDiv.style.margin_top = "1%"; */;
        /* ResultExhibitsDiv.style.margin_right = "1%"; */;
        /* ResultExhibitsDiv.style.margin_bottom = "1%"; */;
        ResultExhibitsDiv.style.border_style = "outset";  /* none,solid,dashed,dotted,double */;
        /* ResultExhibitsDiv.style.border_left_style = "outset"; */;
        /* ResultExhibitsDiv.style.border_top_style = "outset"; */;
        /* ResultExhibitsDiv.style.border_right_style = "outset"; */;
        /* ResultExhibitsDiv.style.border_bottom_style = "outset"; */;
        ResultExhibitsDiv.style.border_color = "Gray";  /* transparent,black,blue,green,orange,purple,red,white,yellow */;
        /* ResultExhibitsDiv.style.border_left_color = "rgba(100,149,237,0.7)"; */;
        /* ResultExhibitsDiv.style.border_top_color = "rgba(100,149,237,0.7)"; */;
        /* ResultExhibitsDiv.style.border_right_color = "rgba(100,149,237,0.7)"; */;
        /* ResultExhibitsDiv.style.border_bottom_color = "rgba(100,149,237,0.7)"; */;
        ResultExhibitsDiv.style.border_width = "medium";  /* medium,thin,dashed */;
        /* ResultExhibitsDiv.style.border_left_width = "3px"; */;
        /* ResultExhibitsDiv.style.border_top_width = "3px"; */;
        /* ResultExhibitsDiv.style.border_right_width = "3px"; */;
        /* ResultExhibitsDiv.style.border_bottom_width = "3px"; */;
        ResultExhibitsDiv.style.padding = "auto";
        /* ResultExhibitsDiv.style.padding_left = "1%"; */;
        /* ResultExhibitsDiv.style.padding_top = "1%"; */;
        /* ResultExhibitsDiv.style.padding_right = "1%"; */;
        /* ResultExhibitsDiv.style.padding_bottom = "1%"; */;
        ResultExhibitsDiv.style.overflow = "auto";
        /* ResultExhibitsDiv.style.overflow_y = "auto"; */;
        /* ResultExhibitsDiv.style.overflow_x =  "auto"; */;
        /* ResultExhibitsDiv.style.float = "none"; */;
        /* ResultExhibitsDiv.style.clear = "none"; */;
        /* ResultExhibitsDiv.style.zindex = "99999"; */;

        /* windowHandle_1.document.write(ResultExhibitsDiv); */;
        windowHandle_1.document.body.appendChild(ResultExhibitsDiv);
        /* alert(windowHandle_1.document.getElementsByTagName("body").item(0).outerHTML); */;
    };
    /*
    if ( windowHandle_1.document.getElementById(ResultExhibitsDivID) ) {
        alert("Warning ! : " + "\n" + "Newly added DIV ID <ResultExhibitsDiv>" + "\n" + "Naming conflicts !  Please rename !" + "\n" + "Function DisplayData() 2316: case 2. Variable { ResultExhibitsDiv }.");
        return false;
    };
    */;

    switch(BranchSwitch) {

        case "table": {
            /*
            let ResultExhibitionUnitP = windowHandle_1.document.createElement("p");
            // ResultExhibitionUnitP.style.display = "table";  // none 此元素不會被顯示，block 此元素將顯示爲塊級元素，此元素前後會帶有換行符。inline 默認，此元素會被顯示爲内聯元素，元素前後沒有換行符。inline-block 行内塊元素（CSS2.1 新增的值）。list-item 此元素會作爲列表顯示。run-in 此元素會根據上下文作爲塊級元素或内聯元素顯示。table 此元素會作爲塊級表格來顯示（類似 <table>），表格前後帶有換行符。inline-table 此元素會作爲内聯表格來顯示（類似 <table>），表格前後沒有換行符;
            ResultExhibitionUnitP.style.backgroundColor = "transparent";
            ResultExhibitionUnitP.style.color = "rgba(0,0,0,0.7)";
            ResultExhibitionUnitP.style.font_family = "TimesNewRoman,Georgia,Serif";
            ResultExhibitionUnitP.style.font_style = "normal";
            ResultExhibitionUnitP.style.font_size = "1em";
            // ResultExhibitionUnitP.style.width = "60%";
            // ResultExhibitionUnitP.style.word_wrap = "break-word";
            // ResultExhibitionUnitP.style.white_space = "normal";  // white-space：通過 HTML 文檔的源代碼的排版方式控制頁面顯示文本的排版方式，取值: normal | pre | nowrap | pre-wrap | pre-line | inherit, normal: 正常無變化（默認處理方式，文本自動處理換行，假如抵達容器邊界，内容會轉到下一行），pre: 保持 HTML 源代碼的空格與換行，等同於 pre 標簽，nowrap: 强制文本在一行，除非遇到 br 換行標簽，pre-wrap: 同 pre 屬性，但是遇到超出容器範圍的時候，會自動換行。pre-line: 同 pre 屬性，但是遇到連續空格將會被看作一個空格;
            */;

            let ResultExhibitsDivTagTable = null;
            if (windowHandle_1.document.getElementById(ResultExhibitsDivTagTableID)) {
                ResultExhibitsDivTagTable = windowHandle_1.document.getElementById(ResultExhibitsDivTagTableID);
            } else if (!(windowHandle_1.document.getElementById(ResultExhibitsDivTagTableID))) {
                ResultExhibitsDivTagTable = windowHandle_1.document.createElement("table");
                ResultExhibitsDivTagTable.setAttribute("id", ResultExhibitsDivTagTableID);  // "ResultExhibitsDivTagTable";
                ResultExhibitsDivTagTable.style.border_Collapse = "collapse";  /* separate,collapse,inherit */;
                /* ResultExhibitsDivTagTable.style.border_width = "1px"; */;
                /* ResultExhibitsDivTagTable.style.border_color = "blue"; */;
                /* ResultExhibitsDivTagTable.style.border_style = "solid"; //none,solid; */;
                /* ResultExhibitsDivTagTable.frame= "box"; */;
                /* ResultExhibitsDivTagTable.rules = "all"; // "rows","cols"; */;
                /* ResultExhibitsDivTagTable.border = "1"; */;
                /* ResultExhibitsDivTagTable.border_color = "blue"; */;
                /* ResultExhibitsDivTagTable.border_style = "solid"; //none,solid; */;
                /* ResultExhibitsDivTagTable.backgroundColor = "transparent"; */;
                ResultExhibitsDivTagTable.style.captionSide = "bottom";  /* top */;
                ResultExhibitsDivTagTable.style.emptyCells = "show";  /* show,inherit,hide */;
                /* ResultExhibitsDivTagTable.cellpadding = "10"; */;
                /* ResultExhibitsDivTagTable.cellspacing = "10"; */;
                /* ResultExhibitsDivTagTable.width ="400"; */;
                ResultExhibitsDivTagTable.style.tableLayout = "fixed";  /* automatic,inherit,auto */;
                /* ResultExhibitsDivTagTable.width = "100px"; */;
                /* ResultExhibitsDivTagTable.height = "50px"; */;
                /* ResultExhibitsDivTagTable.color = "white"; */;
                /* ResultExhibitsDivTagTable.summary="Collected Result Exhibits Table"; */;

                windowHandle_1.document.getElementById(ResultExhibitsDivID).appendChild(ResultExhibitsDivTagTable);
            };

            /* Object.prototype.toString.call(DataStringArray) === "[object Array]"; */;
            for (let i in DataStringArray) {

                // 創建展示表格的一行 <tr> 元素，並賦 ID 值;
                let RetrievalResultUnitTR = null;
                if (windowHandle_1.document.getElementById(RetrievalResultUnitTRID[i])) {
                    RetrievalResultUnitTR = windowHandle_1.document.getElementById(RetrievalResultUnitTRID[i]);
                } else if (!(windowHandle_1.document.getElementById(RetrievalResultUnitTRID[i]))) {
                    RetrievalResultUnitTR = windowHandle_1.document.createElement("tr");
                    RetrievalResultUnitTR.style.border = "1px solid blue";
                    /* RetrievalResultUnitTR.style.border_width = "1px" */;
                    /* RetrievalResultUnitTR.style.border_color = "blue" */;
                    /* RetrievalResultUnitTR.style.border_style = "solid" */;
                    RetrievalResultUnitTR.style.background_color = "transparent";
                    /* RetrievalResultUnitTR.style.height = "50px" */;
                    RetrievalResultUnitTR.style.color = "black";
                    /* RetrievalResultUnitTR.align = "center" */;  /* center,justify,right,left,char*/;
                    /* RetrievalResultUnitTR.char = "." */;
                    RetrievalResultUnitTR.valign = "middle";  /*top,middle,bottom,baseline*/;
    
                    // let RetrievalResultPageNumber = parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number);
                    // let RetrievalResultEntryNumber = parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1);
                    // let RetrievalResultUnitTRID[i] = "RetrievalResult<" + RetrievalResultPageNumber + ">page<" + RetrievalResultEntryNumber + ">";
                    if(RetrievalResultUnitTRID[i] !== ""){
                        RetrievalResultUnitTR.setAttribute("id", RetrievalResultUnitTRID[i]);
                    };
    
                    windowHandle_1.document.getElementById(ResultExhibitsDivTagTableID).appendChild(RetrievalResultUnitTR);
    
                    if(RetrievalResultUnitTRID[i] !== ""){
                        RetrievalResultUnitTR = windowHandle_1.document.getElementById(RetrievalResultUnitTRID[i]);
                    };
                };

                /*
                let RetrievalResultUnit = windowHandle_1.document.createElement("span");
                RetrievalResultUnit.style.display = "table";  // none 此元素不會被顯示，block 此元素將顯示爲塊級元素，此元素前後會帶有換行符。inline 默認，此元素會被顯示爲内聯元素，元素前後沒有換行符。inline-block 行内塊元素（CSS2.1 新增的值）。list-item 此元素會作爲列表顯示。run-in 此元素會根據上下文作爲塊級元素或内聯元素顯示。table 此元素會作爲塊級表格來顯示（類似 <table>），表格前後帶有換行符。inline-table 此元素會作爲内聯表格來顯示（類似 <table>），表格前後沒有換行符;
                RetrievalResultUnit.style.backgroundColor = "transparent";
                RetrievalResultUnit.style.color = "rgba(0,0,0,0.7)";
                RetrievalResultUnit.style.font_family = "TimesNewRoman,Georgia,Serif";
                RetrievalResultUnit.style.font_style = "normal";
                RetrievalResultUnit.style.font_size = "1em";
                // RetrievalResultUnit.style.width = "60%";
                // RetrievalResultUnit.style.word_wrap = "break-word";
                // RetrievalResultUnit.style.white_space = "normal";  // white-space：通過 HTML 文檔的源代碼的排版方式控制頁面顯示文本的排版方式，取值: normal | pre | nowrap | pre-wrap | pre-line | inherit, normal: 正常無變化（默認處理方式，文本自動處理換行，假如抵達容器邊界，内容會轉到下一行），pre: 保持 HTML 源代碼的空格與換行，等同於 pre 標簽，nowrap: 强制文本在一行，除非遇到 br 換行標簽，pre-wrap: 同 pre 屬性，但是遇到超出容器範圍的時候，會自動換行。pre-line: 同 pre 屬性，但是遇到連續空格將會被看作一個空格;
                // let RetrievalResultPageNumber = parseInt(StartPageNumber);
                // let RetrievalResultEntryNumber = parseInt(j) + parseInt(1);
                // let RetrievalResultUnitTRID[i] = "RetrievalResult<" + RetrievalResultPageNumber + ">page<" + RetrievalResultEntryNumber + ">";
                RetrievalResultUnit.setAttribute("id", RetrievalResultUnitTRID[i]);
                RetrievalResultUnit.innerHTML = DataStringArray[i];
                windowHandle_1.document.getElementById("ResultExhibitsDivTagCenter").appendChild(RetrievalResultUnit);
                */;

                for (let j in DataStringArray[i]) {

                    let RetrievalResultUnitTD = windowHandle_1.document.createElement("td");
                    RetrievalResultUnitTD.style.border = "1px solid blue";
                    /* RetrievalResultUnitTD.style.border_width = "1px" */;
                    /* RetrievalResultUnitTD.style.border_color = "blue" */;
                    /* RetrievalResultUnitTD.style.border_style = "solid" */;
                    RetrievalResultUnitTD.style.text_align = "center";  /*center,justify,right,left,char*/;
                    RetrievalResultUnitTD.style.vertical_align = "middle";  /*top,middle,bottom,baseline*/;
                    RetrievalResultUnitTD.style.background_color = "transparent";
                    /* RetrievalResultUnitTD.style.white_space = "nowrap" */;
                    RetrievalResultUnitTD.style.padding = "5px";
                    /* RetrievalResultUnitTD.style.height = "50px" */;
                    /* RetrievalResultUnitTD.style.width = "70%" */;
                    /* RetrievalResultUnitTD.colspan = "2" */;
                    /* RetrievalResultUnitTD.rowspan = "2" */;
                    /* RetrievalResultUnitTD.align = "left" */;  /*center,justify,right,left,char*/;
                    /* RetrievalResultUnitTD.char = "." */;
                    /* RetrievalResultUnitTD.valign = "middle" */;  /*top,middle,bottom,baseline*/;

                    RetrievalResultUnitTD.innerHTML = DataStringArray[i][j];
                    RetrievalResultUnitTR.appendChild(RetrievalResultUnitTD);
                };
            };

            return ResultExhibitsDivTagTableID;
            // break;
        };

        case "canvas-datagrid": {

            /* 以網頁畫布(canvas)元素利用第三方包(canvas-datagrid)的網格(grid)形式在網頁展示二維數組數據Array[][]; */;
            /* canvas-datagrid 擴展包説明文檔：https://tonygermaneri.github.io/canvas-datagrid/docs/#canvasDatagrid.args.editable; */;
            /* 需要先在控制臺 root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org 安裝成功第三方擴展包，然後再從網頁 dom 中使用 script 標簽的屬性 src="dist/canvas-datagrid.js" 載入之後，才能使用;*/;
            /* 在綫加載，可以在網頁 DOM 中使用 script 標簽的屬性 src="https://unpkg.com/canvas-datagrid" 從服務器下載; */;

            let ResultExhibitsDivTagCanvasDatagrid = null;
            if (windowHandle_1.document.getElementById(ResultExhibitsDivTagTableID)) {
                ResultExhibitsDivTagCanvasDatagrid = windowHandle_1.document.getElementById(ResultExhibitsDivTagTableID);
            } else if (!(windowHandle_1.document.getElementById(ResultExhibitsDivTagTableID))) {

                /* 使用第三方擴展包 canvas-datagrid.js 中的 canvasDatagrid() 定義一個網頁畫布(canvas)元素 canvasDatagrid(); */;
                ResultExhibitsDivTagCanvasDatagrid = canvasDatagrid({
                    parentNode: windowHandle_1.document.getElementById(ResultExhibitsDivID), /* 聲明畫布(canvas)在網頁中的位置，parentNode: 表示父元素，此句代碼意味著新定義的這個 canvasDatagrid() 元素處在網頁中一個 id="data" 的元素裏邊，本例為網頁中的<div id="data_div"></div>; */
                    editable: true, /* 設爲cell内容可編輯; */
                    copyText: true,
                    pasteText: true,
                    showCopy: true,
                    showPaste: true,
                    borderDragBehavior: 'move',
                    allowMovingSelection: true,
                    columnHeaderClickBehavior: 'select',
                    allowFreezingRows: true,
                    allowFreezingColumns: true,
                    allowRowReordering: true,
                    tree: false,
                    debug: false,
                    showPerformance: false,
                    scrollPointerLock: true,
                    scrollAnimationPPSThreshold: Number(0.75),
                    showClearSettingsOption: true,
                    snapToRow: true,
                    showRowHeaders: true,
                    showRowNumbers: true,
                    showPerformance: false,
                    touchContextMenuTimeMs: Number(800), /* The length of time in milliseconds before a context menu appears on touch start within the touch dead zone.; */
                    autoGenerateSchema: true, /* When true, every time data is set the schema will be automatically generated from the data overwriting any existing schema.; */
                    autoResizeColumns: true /* When true, all columns will be automatically resized to fit the data in them. Warning! Expensive for large (>100k ~2 seconds) datasets.; */
                });
                ResultExhibitsDivTagCanvasDatagrid.attributes.showNewRow = true; /* Allow the input of new rows at the bottom of the grid.; */;
                /* ResultExhibitsDivTagCanvasDatagrid = windowHandle_1.document.createElement("canvas-datagrid"); */; /* <canvas-datagrid></canvas-datagrid>; */;
                /* ResultExhibitsDivTagCanvasDatagrid.parentNode = windowHandle_1.document.getElementById(ResultExhibitsDivID); */;  /* 聲明畫布(canvas)在網頁中的位置，parentNode: 表示父元素，此句代碼意味著新定義的這個 canvasDatagrid() 元素處在網頁中一個 id="data" 的元素裏邊，本例為網頁中的<div id="data_div"></div>; */;
                /* ResultExhibitsDivTagCanvasDatagrid.editable = true; */; /* 設爲cell内容可編輯; */;
                /* ResultExhibitsDivTagCanvasDatagrid.copyText = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.pasteText = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.showCopy = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.showPaste = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.borderDragBehavior = 'move'; */;
                /* ResultExhibitsDivTagCanvasDatagrid.allowMovingSelection = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.columnHeaderClickBehavior = 'select'; */;
                /* ResultExhibitsDivTagCanvasDatagrid.allowFreezingRows = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.allowFreezingColumns = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.allowRowReordering = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.tree = false; */;
                /* ResultExhibitsDivTagCanvasDatagrid.debug = false; */;
                /* ResultExhibitsDivTagCanvasDatagrid.showPerformance = false; */;
                /* ResultExhibitsDivTagCanvasDatagrid.scrollPointerLock = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.scrollAnimationPPSThreshold = Number(0.75); */;
                /* ResultExhibitsDivTagCanvasDatagrid.showClearSettingsOption = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.snapToRow = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.showRowHeaders = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.showRowNumbers = true; */;
                /* ResultExhibitsDivTagCanvasDatagrid.showPerformance = false; */;
                /* ResultExhibitsDivTagCanvasDatagrid.touchContextMenuTimeMs = Number(800); */; /* The length of time in milliseconds before a context menu appears on touch start within the touch dead zone.; */;
                /* ResultExhibitsDivTagCanvasDatagrid.autoGenerateSchema = true; */; /* When true, every time data is set the schema will be automatically generated from the data overwriting any existing schema.; */;
                /* ResultExhibitsDivTagCanvasDatagrid.autoResizeColumns = true; */; /* When true, all columns will be automatically resized to fit the data in them. Warning! Expensive for large (>100k ~2 seconds) datasets.; */;
                /* ResultExhibitsDivTagCanvasDatagrid.attributes.showNewRow = true; */; /* Allow the input of new rows at the bottom of the grid.; */;

                ResultExhibitsDivTagCanvasDatagrid.setAttribute("id", ResultExhibitsDivTagTableID);
    
                ResultExhibitsDivTagCanvasDatagrid.style.height = '100%'; /* 默認爲 grid.style.height = 'auto'; */;
                ResultExhibitsDivTagCanvasDatagrid.style.width = '100%'; /* 默認爲 grid.style.width = 'auto'; */;
                /* ResultExhibitsDivTagCanvasDatagrid.setAttribute("translate", "yes"); */;  /* 指定是否一個元素的值在頁面載入時是否需要翻譯; */;
                /* ResultExhibitsDivTagCanvasDatagrid.setAttribute("class", "grid"); */;
                /* ResultExhibitsDivTagCanvasDatagrid.setAttribute("accesskey", "a"); */;  /* 設置鍵盤快捷鍵選擇元素; */;
                /* ResultExhibitsDivTagCanvasDatagrid.setAttribute("draggable", "true"); */;  /* 設置元素值可拖動 draggable="true|false|auto"; */;
                /* ResultExhibitsDivTagCanvasDatagrid.setAttribute("tabindex", "1"); */;  /* 規定當使用 "tab" 鍵進行導航時元素的順序為第一個; */;
                /* ResultExhibitsDivTagCanvasDatagrid.setAttribute("dir", "ltr"); */;  /* 規定元素内容的文本方向為從左向右 dir="ltr|rtl|auto"; */;
                /* ResultExhibitsDivTagCanvasDatagrid.setAttribute("spellcheck", "true"); */;  /* 規定是否對元素進行拼寫和語法檢查; */;
                /* ResultExhibitsDivTagCanvasDatagrid.setAttribute("data-type", "Upload data exhibition table"); */;  /* 用於存儲私有頁面後應用的自定義數據，自定義屬性前綴 "data-" 會被客戶端忽略; */;
                /* ResultExhibitsDivTagCanvasDatagrid.setAttribute("title", "Upload data exhibition table"); */;  /* 規定在鼠標移動到元素上時顯示一段工具提示文本; */;
                /* ResultExhibitsDivTagCanvasDatagrid.setAttribute("dropzone", "copy"); */;  /* 規定當被拖動的數據在拖放到元素上時，是否被複製、移動或鏈接 dropzone="copy|move|link"; */;
                /* ResultExhibitsDivTagCanvasDatagrid.setAttribute("contentEditable", "true"); */;  /* 設置元素值可編輯; */;
                ResultExhibitsDivTagCanvasDatagrid.setAttribute("lang", "zh");  /* 設置元素中内容的語言代號; */;

                ResultExhibitsDivTagCanvasDatagrid = windowHandle_1.document.getElementById(ResultExhibitsDivTagTableID);
            };

            /* 擴展包canvasDatagrid()自帶函數.parsers['text/csv']解析CSV文件字符串數據; */;
            /*
            canvasDatagrid.parsers['text/csv'] = function (data, callback) {
                let String_Array = data.split('\n');
                for (let i = 0; i < String_Array.length; i += 1) {
                    String_Array[i] = String_Array[i].split(',');
                };
                callback(String_Array);
            };
            */;

            /* 填寫數據; */;
            /* Object.prototype.toString.call(DataStringArray) === "[object Array]"; */;
            /* ResultExhibitsDivTagCanvasDatagrid.data = DataStringArray; */; /* load data; */;

            /* 設置 canvasDatagrid 的表頭和格式; */;
            /*
            // 判斷最長的那一行中，有多少列;
            let type_array = new Array;
            let max_column_length = 0;
            for (let i = 0; i < data_array.length; i++) {
                if (data_array[i].length > max_column_length) {
                    max_column_length = data_array[i].length;
                };

                if (i === 0) {
                    for (let j = 0; j < data_array[i].length; j++) {
                        type_array[j] = typeof data_array[i][j];
                    };
                } else if (i === 1) {
                    for (let j = 0; j < data_array[i].length; j++) {
                        type_array[j] = typeof data_array[i][j];
                    };
                };
            };

            // 將最長行的列數賦予表格頭長度;
            if (max_column_length > ResultExhibitsDivTagCanvasDatagrid.schema.length) {
                let canvasDatagrid_schema = ResultExhibitsDivTagCanvasDatagrid.schema;
                for (let j = ResultExhibitsDivTagCanvasDatagrid.schema.length; j < max_column_length; j++) {
                    // 設置類型;
                    let column_schema = {};
                    column_schema.name = j.toString();  // 如果數據源是JSON對象，.name 參數用於傳入列數據的 JSON.key. The name of the column.This is used to match with data and is the only required property;
                    column_schema.type = typeof type_array[j];  // 設置列數據類型. The data type of this column. 將列數據類型設置爲與數據數組的第二行數據類型相同;
                    column_schema.title = ResultExhibitsDivTagCanvasDatagrid.integerToAlpha(j).toUpperCase();  // 設置表頭顯示名. What will be displayed to the user.If not present, name will be used. 其中canvasDatagrid.integerToAlpha(0)方法可以將阿拉伯數字0轉換為英文字母a，以此類推，1轉b，2轉c，The number to convert.Converts a integer into a letter A - ZZZZZ...等等，String.toUpperCase()方法將英文字母轉大寫;
                    // column_schema.width = "16px";  // 設置列寬度，單位像素. The default width in pixels of this column;
                    column_schema.hidden = false;  // 如果為 true 則此列隱藏. When true the column will be hidden;
                    column_schema.filter = function () { };  // 濾波器，用於遴選此列的篩選函數，如果未提供函數，則類型將確定文件管理器. The filter function to use to filter this column.If no function is provided, type will determine filer;
                    column_schema.formatter = function () { };  // 格式化程序，使用的格式化程序函數顯示此列，如果未提供函數，則類型將確定格式化程序. The formatter function used display this column.If no function is provided, type will determine formatter;
                    column_schema.defaultValue = function () { return ""; };  // 默認值，新行的此列的默認值，這是一個函數或字符串，使用函數時，它接受參數頭和索引，并且必須為此列中的新默認單元格返回一個值. The default value of this column for new rows.This is a function or a string.When a function is used, it takes the arguments header and index and must return a value for new default cell value in this column;

                    // ResultExhibitsDivTagCanvasDatagrid.addColumn(column_schema);  // 增加列;

                    canvasDatagrid_schema.push(column_schema);
                };
                ResultExhibitsDivTagCanvasDatagrid.schema = canvasDatagrid_schema;
            };
            */;

            /* 設置 canvasDatagrid 的數據; */;
            /*
            let canvasDatagrid_data = new Array;
            if (typeof (ResultExhibitsDivTagCanvasDatagrid.data) !== "undefined") {
                canvasDatagrid_data = ResultExhibitsDivTagCanvasDatagrid.data;
            };
            */;

            /*
            canvasDatagrid_data.push(data_array[i]);
            let Row_data = {};
            for (let j = 0; j < data_array[i].length; j++) {
                Row_data[ResultExhibitsDivTagCanvasDatagrid.schema[j].name] = data_array[i][j];
            };
            */;
            if (typeof (ResultExhibitsDivTagCanvasDatagrid.data) === "undefined") {
                /* ResultExhibitsDivTagCanvasDatagrid.data = [Row_data]; */;
                ResultExhibitsDivTagCanvasDatagrid.data = [DataStringArray];  /* load data; */;
            } else {
                /* ResultExhibitsDivTagCanvasDatagrid.addRow(Row_data); */;
                ResultExhibitsDivTagCanvasDatagrid.data.push(DataStringArray);
            };
            /* ResultExhibitsDivTagCanvasDatagrid.data = canvasDatagrid_data; */;  /* load data; */;

            /* ResultExhibitsDivTagCanvasDatagrid.draw(); */;  /* 刷新畫布; */;

            /* 自定義函數，調整div長度和寬度大小; */;
            function _resize() {
                windowHandle_1.document.getElementById(ResultExhibitsDivID).style.height = (windowHandle_1.innerHeight - 200) + "px";
                windowHandle_1.document.getElementById(ResultExhibitsDivID).style.width = (windowHandle_1.innerWidth - 200) + "px";
            };
            windowHandle_1.addEventListener('resize', _resize);  /* 監聽網頁窗口改變大小，然後執行自定義的調整網頁 div 層元素長度和寬度大小的函數 _resize(); */;
            /* _resize(); */;

            /*
            // ResultExhibitsDivTagCanvasDatagrid.findColumnMaxTextLength(string name); // Returns the maximum text width for a given column by column name.;
            // ResultExhibitsDivTagCanvasDatagrid.fitColumnToValues(string name); // Resizes a column to fit the longest value in the column. Call without a value to resize all columns. Warning, can be slow on very large record sets (1m records ~3-5 seconds on an i7).;
            // ResultExhibitsDivTagCanvasDatagrid.insertRow(object d, number index)
            // ResultExhibitsDivTagCanvasDatagrid.addRow({ column.name: value });
            // ResultExhibitsDivTagCanvasDatagrid.deleteRow(0);
            // ResultExhibitsDivTagCanvasDatagrid.insertColumn(column c, number index);
            // ResultExhibitsDivTagCanvasDatagrid.addColumn(column n);
            // ResultExhibitsDivTagCanvasDatagrid.deleteColumn(0);
            // ResultExhibitsDivTagCanvasDatagrid.gotoRow(number y);
            // ResultExhibitsDivTagCanvasDatagrid.gotoCell(number x, number y, number[offsetX = undefined], number[offsetY = undefined]);
            // ResultExhibitsDivTagCanvasDatagrid.scrollIntoView(number x, number y, number[offsetX = undefined], number[offsetY = undefined]); // Scrolls the cell at cell x, row y into view if it is not already.;
            // ResultExhibitsDivTagCanvasDatagrid.integerToAlpha(column n); // The number to convert.Converts a integer into a letter A - ZZZZZ...;
            // ResultExhibitsDivTagCanvasDatagrid.getVisibleCellByIndex(number x, number y).value;
            // ResultExhibitsDivTagCanvasDatagrid.getVisibleCellByIndex(number x, number y).x;
            // ResultExhibitsDivTagCanvasDatagrid.getVisibleCellByIndex(number x, number y).y;
            // ResultExhibitsDivTagCanvasDatagrid.getVisibleCellByIndex(number x, number y).width;
            // ResultExhibitsDivTagCanvasDatagrid.getVisibleCellByIndex(number x, number y).height;
            // ResultExhibitsDivTagCanvasDatagrid.getVisibleCellByIndex(number x, number y).rowIndex;
            // ResultExhibitsDivTagCanvasDatagrid.getVisibleCellByIndex(number x, number y).columnIndex;
            // ResultExhibitsDivTagCanvasDatagrid.getVisibleCellByIndex(number x, number y).text;
            // ResultExhibitsDivTagCanvasDatagrid.getVisibleCellByIndex(number x, number y).text.value;
            // ResultExhibitsDivTagCanvasDatagrid.getVisibleCellByIndex(number x, number y).text.width;
            // ResultExhibitsDivTagCanvasDatagrid.getVisibleCellByIndex(number x, number y).text.x;
            // ResultExhibitsDivTagCanvasDatagrid.getVisibleCellByIndex(number x, number y).text.y;
            // ResultExhibitsDivTagCanvasDatagrid.isCellVisible(number columnIndex, number rowIndex);
            // ResultExhibitsDivTagCanvasDatagrid.isColumnVisible(number columnIndex);
            // ResultExhibitsDivTagCanvasDatagrid.isRowVisible(number rowIndex);

            // Use the interface to focus a cell, then begin editing a cell.;
            // let grid = canvasDatagrid({
            //     parentNode: parentNode,
            //     data: [
            //         { col1: 'foo', col2: 0, col3: 'a' },
            //         { col1: 'bar', col2: 1, col3: 'b' },
            //         { col1: 'baz', col2: 2, col3: 'c' },
            //         { col1: 'foo', col2: 0, col3: 'a' },
            //         { col1: 'bar', col2: 1, col3: 'b' },
            //         { col1: 'baz', col2: 2, col3: 'c' },
            //         { col1: 'foo', col2: 0, col3: 'a' },
            //         { col1: 'bar', col2: 1, col3: 'b' },
            //         { col1: 'baz', col2: 2, col3: 'c' },
            //         { col1: 'foo', col2: 0, col3: 'a' },
            //         { col1: 'bar', col2: 1, col3: 'b' },
            //         { col1: 'baz', col2: 2, col3: 'c' }
            //     ]
            // });
            // grid.scrollIntoView(2, 3);
            // grid.beginEditAt(2, 3);

            // There is also an insert version of this function.;
            // let grid = canvasDatagrid({
            //     parentNode: parentNode,
            //     data: [
            //         { col1: 'foo', col2: 0, col3: 'a' },
            //         { col1: 'bar', col2: 1, col3: 'b' },
            //         { col1: 'baz', col2: 2, col3: 'c' }
            //     ]
            // });
            // grid.addRow({
            //     col1: 'a ' + new Date().toString(),
            //     col2: 'a ' + new Date().toString(),
            //     col3: 'a ' + new Date().toString()
            // });
            // // There is also an insert version of this function.;
            // grid.addColumn({
            //     defaultValue: function (e) {
            //         return new Date().toString();
            //     },
            //     title: 'Bar',
            //     type: 'date',
            //     name: 'bar'
            // });
            // // Change a columns's title;
            // grid.schema[0].title = 'foo';
            // grid.draw();
            // // Set the width of a column;
            // grid.setColumnWidth(0, 60);
            // grid.setColumnWidth(1, 200);
            // // By providing the order method with a column name and order(default ascending) you can change the sort order.;
            // grid.order(grid.schema[0].name, 'asc');
            // // Replace the entire style object at runtime.;
            // grid.style = {
            //     cellBackgroundColor: 'darkred',
            //     cellColor: 'goldenrod'
            // };
            */;

            return ResultExhibitsDivTagTableID;
            // break;
        };

        default: {
            alert("Function: DisplayData(Parameter1)"+"\n"+"<Parameter1> input Error !"+"\n"+ BranchSwitch);
        };
    };
};

function use_AJAX(
    Branch_Switch,  // "get", "post", "form", "file", "ArrayBuffer", "Blob"
    UpLoadData,
    url_string,
    request_Authorization,
    abort_button_id_string,
    show_label_id,
    // textarea_path_or_URL_id,
    callback
){
    // 使用 AJAX 方法 XMLHttpRequest() 對象獲得網絡文件;
    // https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest

    let abort_button_id = "";
    if (typeof (abort_button_id_string) === "undefined" || abort_button_id_string === null || abort_button_id_string === NaN || abort_button_id_string === "") {
        abort_button_id = "";
    } else {
        abort_button_id = abort_button_id_string;
    };

    let UpLoad_url = "";
    if (typeof (url_string) === "undefined" || url_string === null || url_string === NaN || url_string === "") {
        console.log("未傳入參數 url_string 將要上傳的目標網址.");
        console.log(url_string);
        // UpLoad_url = null;
        // return false;
    } else {
        UpLoad_url = url_string;
    };

    // // http://localhost:27016/insertMany?dbName=testWebData&dbTableName=test20220703&dbUser=admin_testWebData&dbPass=admin&Key=username:password
    // // let request_Authorization = ""; // "username:password";
    // if (url_string !== "" && url_string.indexOf("&Key=", 0) !== -1) {
    //     request_Authorization = String(url_string.split("&Key=")[1]);
    //     if (request_Authorization.indexOf("&", 0) !== -1) {
    //         request_Authorization = String(request_Authorization.split("&")[0]);
    //     };
    // };
    // // console.log(request_Authorization);
    let request_Authorization_Base64 = "";
    if (request_Authorization === "") {
        request_Authorization_Base64 = "Basic ";  // 'www-authenticate': 'Basic realm="domain name -> username:password"'  獲取響應頭中的"www-authenticate"參數值 response.headers["www-authenticate"];
    } else {
        request_Authorization_Base64 = String("Basic".concat(" ", new Base64().encode(request_Authorization)));  // new Base64().decode(request_Authorization_Base64.split(" ")[1])，'www-authenticate': 'Basic realm="domain name -> username:password"'  獲取響應頭中的"www-authenticate"參數值 response.headers["www-authenticate"];
    };
    // request_Authorization_Base64 = String(request_Authorization);
    // request_Authorization_Base64 = String("Basic".concat(" ", request_Authorization));
    // console.log(request_Authorization_Base64);

    let UpLoad_Data = "";
    if (typeof (UpLoadData) === "undefined" || UpLoadData === null || UpLoadData === NaN) {
        console.log("未傳入參數 UpLoadData 將要使用 post 方法發送的數據.");
        console.log(UpLoadData);
        // UpLoad_Data = null;
    } else {
        UpLoad_Data = UpLoadData;
    };

    if (typeof (UpLoad_url) === "undefined" || UpLoad_url === null || UpLoad_url === NaN || UpLoad_url === "") {

        console.log("參數 url_string 錯誤.");
        if (callback) { callback("parameter url_string unrecognized.", null); };

    } else {

        // 記錄文檔讀取進度百分比;
        let request_data_uploaded_size = 0;
        let response_data_downloaded_size = 0;

        // 暫存啓動按鈕元素初始狀態;
        let button_element = null;
        let button_element_onclick_function = "";
        let button_element_innerText = "";
        let new_button_element = null;

        // 暫存用於提示文件讀取進度和狀態的 show_label_id 標簽的 <label> 内容;
        let initial_label_innerText = "";
        if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
            initial_label_innerText = window.document.getElementById(show_label_id).innerText;
        };

        let xhr = new XMLHttpRequest(); // 實例化瀏覽器 AJAX 對象 XMLHttpRequest();

        let time_out = 30000;
        xhr.timeout = time_out;  // 設置超時等待時長，單位毫秒，默認值為 0，當等於 0 時表示不設置超時，即由AJAX請求開始(onloadstart)算起，到AJAX事件結束(onloadend)，這個過程間等待的最大時長，如果超過時常則觸發 .ontimeout 事件;
        // 監聽超時響應事件，即當 xhr.timeout 不等於 0 時，由請求開始即 onloadstart 開始算起，當到達 xhr.timeout 所設置時間請求還未結束，即 onloadend，則觸發此事件;
        xhr.ontimeout = function () {
            console.log("AJAX load data timeout [ " + time_out / 1000 + " ] second.");
            // console.log(file_input.name + ", uploaded: < " + parseInt(file_loaded_size / 1000) + " > KiloByte, < " + parseInt(file_loaded_size / file_input.size * 100) + "% >, total size: < " + parseInt(file_input.size / 1000) + " > KiloByte.");  // Math.round();
                
            // 修改或添加點擊中斷讀取文件按鈕 <buttno> 標簽的狀態内容，用於提示激活文件讀取程序的入口;
            try {
                if (!(typeof (abort_button_id) === "undefined" || abort_button_id === null || abort_button_id === NaN || abort_button_id === "")) {
                    if (!(typeof (button_element) === "undefined" || button_element === null || button_element === NaN)) {
                        button_element = window.document.getElementById(abort_button_id);
                        button_element.removeAttribute("onclick");
                        button_element.setAttribute("onclick", button_element_onclick_function);
                        button_element.innerText = button_element_innerText;
                        // button_element.setAttribute("disabled", "disabled");
                    } else if (!(typeof (new_button_element) === "undefined" || new_button_element === null || new_button_element === NaN)) {
                        new_button_element = window.document.getElementById(abort_button_id);
                        window.document.body.removeChild(new_button_element);
                    };
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };
    
            // 將 <label> 標簽顯示内容恢復為原初狀態;
            try {
                let label_innerText = "";
                if (response_data_downloaded_size === 0) {
                    label_innerText = "「 request data upload timeout, uploaded: < " + parseInt(request_data_uploaded_size / 1000) + " > KiloByte. 」";  // Math.round();
                } else if (request_data_uploaded_size === 0) {

                } else {
                    label_innerText = "「 response data download timeout, download: < " + parseInt(response_data_downloaded_size / 1000) + " > KiloByte. 」";  // Math.round();
                };
                if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
                    window.document.getElementById(show_label_id).innerText = label_innerText;
                    window.document.getElementById(show_label_id).innerText = initial_label_innerText;
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };

            // if (callback) { callback(Event, null); };
            if (callback) { callback("timeout", null); };

            abort_AJAX_loading();  // 使用自定義函數中止 AJAX 加載數據;
            alert("使用 AJAX 方法加載數據超時 AJAX load data timeout [ " + time_out / 1000 + " ] second.");
        };

        // 中斷正在進行的AJAX數據載入過程;
        function abort_AJAX_loading() {
            xhr.abort();  // 中斷正在進行的AJAX過程，觸發.abort()方法時，若請求階段已經發送完畢，則 readyState 值恢復為 0，若請求階段還未結束，則 readyState 值變為 4;
            xhr = null;  // 將實例化的 AJAX 對象清空，利於内存回收管理;
        };
        // 當調用 xhr.abort() 後觸發;
        xhr.onabort = function () {
            console.log("AJAX load data aborted with [Ctrl] + [c].");
            // console.log(file_input.name + ", uploaded: < " + parseInt(file_loaded_size / 1000) + " > KiloByte, < " + parseInt(file_loaded_size / file_input.size * 100) + "% >, total size: < " + parseInt(file_input.size / 1000) + " > KiloByte.");  // Math.round();
                
            // 修改或添加點擊中斷讀取文件按鈕 <buttno> 標簽的狀態内容，用於提示激活文件讀取程序的入口;
            try {
                if (!(typeof (abort_button_id) === "undefined" || abort_button_id === null || abort_button_id === NaN || abort_button_id === "")) {
                    if (!(typeof (button_element) === "undefined" || button_element === null || button_element === NaN)) {
                        button_element = window.document.getElementById(abort_button_id);
                        button_element.removeAttribute("onclick");
                        button_element.setAttribute("onclick", button_element_onclick_function);
                        button_element.innerText = button_element_innerText;
                        // button_element.setAttribute("disabled", "disabled");
                    } else if (!(typeof (new_button_element) === "undefined" || new_button_element === null || new_button_element === NaN)) {
                        new_button_element = window.document.getElementById(abort_button_id);
                        window.document.body.removeChild(new_button_element);
                    };
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };
    
            // 將 <label> 標簽顯示内容恢復為原初狀態;
            try {
                let label_innerText = "";
                if (response_data_downloaded_size === 0) {
                    label_innerText = "「 request data upload aborted, uploaded: < " + parseInt(request_data_uploaded_size / 1000) + " > KiloByte. 」";  // Math.round();
                } else if (request_data_uploaded_size === 0) {

                } else {
                    label_innerText = "「 response data download aborted, download: < " + parseInt(response_data_downloaded_size / 1000) + " > KiloByte. 」";  // Math.round();
                };
                if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
                    window.document.getElementById(show_label_id).innerText = label_innerText;
                    window.document.getElementById(show_label_id).innerText = initial_label_innerText;
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };

            // if (callback) { callback(Event, null); };
            if (callback) { callback("aborted", null); };
            alert("使用 AJAX 方法加載數據被人爲中止 AJAX load data aborted with [Ctrl] + [c].");
        };

        // 在請求過程中如果發生 Network error，且發生 Network error 時上傳過程(.upload)還沒有結束，則會先觸發 xhr.upload.onerror 事件，然後再觸發 xhr.onerror 事件。注意，只有發生了網絡層級別的異常才會觸發此事件，對於應用層級別的異常，如響應返回的 xhr.statusCode 是 4xx 時，並不屬於 Network error，所以不會觸發 onerror 事件，而是會觸發 onload 事件;
        xhr.upload.onerror = function (XML_Http_Request, text_Status, error_Thrown) {

            // 修改或添加點擊中斷讀取文件按鈕 <buttno> 標簽的狀態内容，用於提示激活文件讀取程序的入口;
            try {
                if (!(typeof (abort_button_id) === "undefined" || abort_button_id === null || abort_button_id === NaN || abort_button_id === "")) {
                    if (!(typeof (button_element) === "undefined" || button_element === null || button_element === NaN)) {
                        button_element = window.document.getElementById(abort_button_id);
                        button_element.removeAttribute("onclick");
                        button_element.setAttribute("onclick", button_element_onclick_function);
                        button_element.innerText = button_element_innerText;
                        // button_element.setAttribute("disabled", "disabled");
                    } else if (!(typeof (new_button_element) === "undefined" || new_button_element === null || new_button_element === NaN)) {
                        new_button_element = window.document.getElementById(abort_button_id);
                        window.document.body.removeChild(new_button_element);
                    };
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };

            // 修改 <label> 標簽内容，用於提示文件讀取錯誤狀態;
            try {
                // let label_innerText = "「 request data upload error! uploaded: < " + parseInt(request_data_uploaded_size / 1000) + " > KiloByte, < " + parseInt(request_data_uploaded_size / Event.total * 100) + " % >, total: < " + parseInt(Event.total / 1000) + " > KiloByte. 」";  // Math.round();
                let label_innerText = "「 request data upload error! uploaded: < " + parseInt(request_data_uploaded_size / 1000) + " > KiloByte. 」";  // Math.round();
                if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
                    window.document.getElementById(show_label_id).innerText = label_innerText;
                    window.document.getElementById(show_label_id).innerText = initial_label_innerText;
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };

            // alert(text_Status);
            switch (text_Status) {
    
                case "timeout": {
                    console.log(error_Thrown);
                    console.log("AJAX 請求鏈接超時.");
                    if (callback) { callback(error_Thrown, null); };
                    alert("AJAX 請求鏈接超時.");
                    break;
                };
    
                case "error": {
                    console.log(error_Thrown);
                    console.log("AJAX 請求鏈接錯誤.");
                    if (callback) { callback(error_Thrown, null); };
                    alert("AJAX 請求鏈接錯誤.");
                    break;
                };
    
                case "notmodified": {
                    console.log(error_Thrown);
                    if (callback) { callback(error_Thrown, null); };  
                    alert("請求數據上傳時出錯 request data upload error.");
                    break;
                };
    
                case "parsererror": {
                    console.log(error_Thrown);
                    if (callback) { callback(error_Thrown, null); };  
                    alert("請求數據上傳時出錯 request data upload error.");
                    break;
                };
    
                default: {
                    console.log(error_Thrown);
                    if (callback) { callback("請求數據上傳時出錯 request data upload error: " + String(text_Status), null); };
                    alert("請求數據上傳時出錯 request data upload error.");
                };
            };
            // if (callback) { callback(Event.target.error, null); };
            // alert("請求數據上傳時出錯 request data upload error.");
        };

        // 在請求過程中如果發生 Network error，且發生 Network error 時上傳過程(.upload.onloadend 之後)，則會觸發 xhr.onerror 事件，而不觸發 xhr.upload.onerror 事件。注意，只有發生了網絡層級別的異常才會觸發此事件，對於應用層級別的異常，如響應返回的 xhr.statusCode 是 4xx 時，並不屬於 Network error，所以不會觸發 onerror 事件，而是會觸發 onload 事件;
        xhr.onerror = function (XML_Http_Request, text_Status, error_Thrown) {

            // 修改或添加點擊中斷讀取文件按鈕 <buttno> 標簽的狀態内容，用於提示激活文件讀取程序的入口;
            try {
                if (!(typeof (abort_button_id) === "undefined" || abort_button_id === null || abort_button_id === NaN || abort_button_id === "")) {
                    if (!(typeof (button_element) === "undefined" || button_element === null || button_element === NaN)) {
                        button_element = window.document.getElementById(abort_button_id);
                        button_element.removeAttribute("onclick");
                        button_element.setAttribute("onclick", button_element_onclick_function);
                        button_element.innerText = button_element_innerText;
                        // button_element.setAttribute("disabled", "disabled");
                    } else if (!(typeof (new_button_element) === "undefined" || new_button_element === null || new_button_element === NaN)) {
                        new_button_element = window.document.getElementById(abort_button_id);
                        window.document.body.removeChild(new_button_element);
                    };
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };

            // 修改 <label> 標簽内容，用於提示文件讀取錯誤狀態;
            try {
                // let label_innerText = "「 response data download error! downloaded: < " + parseInt(response_data_downloaded_size / 1000) + " > KiloByte, < " + parseInt(response_data_downloaded_size / Event.total * 100) + " % >, total: < " + parseInt(Event.total / 1000) + " > KiloByte. 」";  // Math.round();
                let label_innerText = "「 response data download error! downloaded: < " + parseInt(response_data_downloaded_size / 1000) + " > KiloByte. 」";  // Math.round();
                if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
                    window.document.getElementById(show_label_id).innerText = label_innerText;
                    window.document.getElementById(show_label_id).innerText = initial_label_innerText;
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };

            // alert(text_Status);
            switch (text_Status) {

                case "timeout": {
                    console.log(error_Thrown);
                    console.log("AJAX 鏈接響應超時.");
                    if (callback) { callback(error_Thrown, null); };
                    alert("AJAX 鏈接響應超時.");
                    break;
                };

                case "error": {
                    console.log(error_Thrown);
                    console.log("AJAX 鏈接響應錯誤.");
                    if (callback) { callback(error_Thrown, null); };
                    alert("AJAX 鏈接響應錯誤.");
                    break;
                };

                case "notmodified": {
                    console.log(error_Thrown);
                    if (callback) { callback(error_Thrown, null); };
                    console.log("響應數據下載時出錯 response data download error.");
                    // alert("響應數據下載時出錯 response data download error.");
                    break;
                };

                case "parsererror": {
                    console.log(error_Thrown);
                    if (callback) { callback(error_Thrown, null); };
                    console.log("響應數據下載時出錯 response data download error.");
                    // alert("響應數據下載時出錯 response data download error.");
                    break;
                };
    
                default: {
                    console.log(error_Thrown);
                    if (callback) { callback("響應數據下載時出錯 response data download error: " + String(text_Status), null); };
                    console.log("響應數據下載時出錯 response data download error.");
                    // alert("響應數據下載時出錯 response data download error.");
                };
            };
            // if (callback) { callback(Event.target.error, null); };
            // alert("響應數據下載時出錯 response data download error.");
        };

        // 每次 readyState 變化時，都會觸發一次，readyState 值依次為 0,1,2,3,4;
        xhr.onreadystatechange = function () {

            // console.log(xhr.readyState);

            // if (xhr.readyState === 4 && xhr.status === 200) {

            //     // xhr.getResponseHeader("Cookie");
            //     let responseHeaders = xhr.getAllResponseHeaders();  // 相應圖字符串;
            //     // let responseData = xhr.responseText;  // 編碼好的字符串;
            //     let responseData = xhr.response;  // 解析好的 Dom 對象;

            //     if (callback) { callback(null, {"ResponseStatus": String(xhr.status), "ResponseHeaders": responseHeaders, "ResponseBody": responseData}); };
            // };
        };

        // 上傳階段開始，此時觸發 .onloadstart 事件;
        xhr.onloadstart = function () {
            // console.log("file upload started ...");

            // 修改或添加點擊中斷讀取文件按鈕 <buttno> 標簽的狀態内容，用於提示激活文件讀取程序的入口;
            try {
                if (!(typeof (abort_button_id) === "undefined" || abort_button_id === null || abort_button_id === NaN || abort_button_id === "")) {
                    if (window.document.getElementById(abort_button_id)) {
                        button_element = window.document.getElementById(abort_button_id);
                        button_element_onclick_function = button_element.getAttribute("onclick");
                        button_element_innerText = button_element.innerText;
                        button_element.innerText = "Click here to abort load file";
                        button_element.removeAttribute("onclick");
                        button_element.setAttribute("onclick", "javascript: abort_AJAX_loading()");
                        if (button_element.getAttribute("disabled")) { button_element.removeAttribute("disabled"); };
                        // button_element.addEventListener("click", function () {xhr.abort();  // 中斷正在進行的文件導入;});
                    } else {
                        new_button_element = window.document.createElement("button");
                        new_button_element.setAttribute("id", abort_button_id);
                        new_button_element.innerText = "Click here to abort load file";
                        new_button_element.setAttribute("onclick", "javascript: abort_AJAX_loading()");
                        window.document.body.appendChild(new_button_element);
                    };
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };

            // 修改 <label> 標簽内容，用於提示文件讀取進度和狀態;
            try {
                let label_innerText = "「 request data Size: " + parseInt(UpLoad_Data.length) + " characters, Start uploading ... 」";  // Math.round();
                // let label_innerText = "「 request data Size: " + parseInt(UpLoad_Data.length / 1000) + " KiloByte, Start uploading ... 」";  // Math.round();
                if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
                    // window.document.getElementById(show_label_id).innerText = initial_label_innerText + label_innerText;
                    window.document.getElementById(show_label_id).innerText = label_innerText;
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };
        };

        // AJAX 的上傳過程啓動時觸發 .upload.onloadstart 事件;
        xhr.upload.onloadstart = function () {
            // ;
        };

        // .upload.onprogress 事件觸發於上傳階段，每 50ms 觸發一次，可獲得上傳信息、進度等;
        xhr.upload.onprogress = function (Event) {
            // console.log(Event.lengthComputable);
            // console.log(Event.loaded);
            // console.log(Event.total);

            request_data_uploaded_size = Event.loaded;

            if (Event.loaded < Event.total) {
                // 修改 <label> 標簽内容，用於提示文件讀取進度和狀態;
                try {
                    let label_innerText = "「 request data uploading: < " + parseInt(request_data_uploaded_size / 1000) + " > KiloByte, < " + parseInt(request_data_uploaded_size / Event.total * 100) + " % >, Total: < " + parseInt(Event.total / 1000) + " > KiloByte ... 」";  // Math.round();
                    // let label_innerText = "「 request data uploading: < " + parseInt(Event.lengthComputable / 1000) + " > characters ... 」";  // Math.round();
                    if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
                        // window.document.getElementById(show_label_id).innerText = initial_label_innerText + label_innerText;
                        window.document.getElementById(show_label_id).innerText = label_innerText;
                    };
                } catch (error) {
                    console.log(error);
                } finally {
                    //;
                };
            } else {
                // 將 <label> 標簽顯示内容恢復為原初狀態;
                try {
                    let label_innerText = "「 request data uploaded successful: < " + parseInt(request_data_uploaded_size / 1000) + " > KiloByte, < " + parseInt(request_data_uploaded_size / Event.total * 100) + " % >. 」";  // Math.round();
                    // let label_innerText = "「 request data uploaded successful: < " + parseInt(Event.lengthComputable / 1000) + " > characters. 」";  // Math.round();
                    if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
                        window.document.getElementById(show_label_id).innerText = label_innerText;
                        window.document.getElementById(show_label_id).innerText = initial_label_innerText;
                    };
                } catch (error) {
                    console.log(error);
                } finally {
                    //;
                };
            };
        };

        // AJAX 的上傳過程成功時，觸發 .upload.onload 事件;
        xhr.upload.onload = function () {
            // ;
        };

        // 上傳階段結束，下載階段開始，此時會觸發 .upload.onloadend 事件;
        xhr.upload.onloadend = function (Event) {

            // 修改 <label> 標簽内容，用於提示文件讀取進度和狀態;
            try {
                let label_innerText = "「 request data Size: " + parseInt(UpLoad_Data.length) + " characters successful, response data Start downloading ... 」";  // Math.round();
                // let label_innerText = "「 request data Size: " + parseInt(Event.total / 1000) + " KiloByte successful, response data Start downloading ... 」";  // Math.round();
                if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
                    // window.document.getElementById(show_label_id).innerText = initial_label_innerText + label_innerText;
                    window.document.getElementById(show_label_id).innerText = label_innerText;
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };
        };

        // 監聽下載過程"progress"，事件觸發於下載階段，每 50ms 觸發一次，可獲得下載信息、進度等;
        xhr.onprogress = function (Event) {
            // console.log(Event.lengthComputable);
            // console.log(Event.loaded);
            // console.log(Event.total);

            response_data_downloaded_size = Event.loaded;

            if (Event.loaded < Event.total) {
                // 修改 <label> 標簽内容，用於提示文件讀取進度和狀態;
                try {
                    let label_innerText = "「 response data downloading: < " + parseInt(response_data_downloaded_size / 1000) + " > KiloByte, < " + parseInt(response_data_downloaded_size / Event.total * 100) + " % >, Total: < " + parseInt(Event.total / 1000) + " > KiloByte ... 」";  // Math.round();
                    // let label_innerText = "「 response data downloading: < " + parseInt(Event.lengthComputable / 1000) + " > characters ... 」";  // Math.round();
                    if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
                        // window.document.getElementById(show_label_id).innerText = initial_label_innerText + label_innerText;
                        window.document.getElementById(show_label_id).innerText = label_innerText;
                    };
                } catch (error) {
                    console.log(error);
                } finally {
                    //;
                };
            } else {
                // 將 <label> 標簽顯示内容恢復為原初狀態;
                try {
                    let label_innerText = "「 response data downloaded successful: < " + parseInt(response_data_downloaded_size / 1000) + " > KiloByte, < " + parseInt(response_data_downloaded_size / Event.total * 100) + " % >. 」";  // Math.round();
                    // let label_innerText = "「 response data downloaded successful: < " + parseInt(Event.lengthComputable / 1000) + " > characters. 」";  // Math.round();
                    if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
                        window.document.getElementById(show_label_id).innerText = label_innerText;
                        window.document.getElementById(show_label_id).innerText = initial_label_innerText;
                    };
                } catch (error) {
                    console.log(error);
                } finally {
                    //;
                };
            };
        };

        // 監聽下載成功"load";
        xhr.onload = function (Event) {

            let label_innerText = "";

            // xhr.getResponseHeader("Cookie");
            let responseHeaders = xhr.getAllResponseHeaders();  // 相應圖字符串;
            // let responseData = xhr.responseText;  // 編碼好的字符串;
            let responseData = xhr.response;  // 解析好的 Dom 對象;

            if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304) {

                // console.log(xhr.status, xhr.statusText);

                // if (xhr.response) {
                //     // console.log("response data downloaded success.");
                //     // console.log("response data downloaded: < " + parseInt(xhr.response / 1000) + " > KiloByte, < " + parseInt(response_data_downloaded_size / xhr.response * 100) + "% >, total size: < " + parseInt(xhr.response / 1000) + " > KiloByte.");  // Math.round();
                //     // console.log(xhr.response);
                //     // if (!window.console) {
                //     //   window.console = { log: function () { } };
                //     // } else {
                //     //   window.console.log(xhr.response);
                //     // };
                //     // alert(xhr.response);
                //     // alert(typeof xhr.response);

                //     // let data_json = JSON.parse(xhr.responseText);
                //     if (callback) { callback(null, xhr.response); }; // 回調函數返回解析結果;
                // };

                label_innerText = "「 response data downloaded successful: < " + parseInt(response_data_downloaded_size / 1000) + " > KiloByte. 」";  // Math.round();
                // label_innerText = "「 response data downloaded successful: < " + parseInt(response_data_downloaded_size / 1000) + " > KiloByte, < " + parseInt(response_data_downloaded_size / Event.total * 100) + " % >. 」";  // Math.round();

                // // xhr.getResponseHeader("Cookie");
                // responseHeaders = xhr.getAllResponseHeaders();  // 相應圖字符串;
                // // responseData = xhr.responseText;  // 編碼好的字符串;
                // responseData = xhr.response;  // 解析好的 Dom 對象;

                if (callback) { callback(null, {"ResponseStatus": String(xhr.status), "ResponseHeaders": responseHeaders, "ResponseBody": responseData}); }; // 回調函數返回解析結果;

            } else {

                label_innerText = "「 response end. 」";
                if (callback) { callback({"ResponseStatus": String(xhr.status), "ResponseHeaders": responseHeaders, "ResponseBody": responseData}, null); }; // 回調函數返回解析結果;
            };

            // 修改或添加點擊中斷讀取文件按鈕 <buttno> 標簽的狀態内容，用於提示激活文件讀取程序的入口;
            try {
                if (!(typeof (abort_button_id) === "undefined" || abort_button_id === null || abort_button_id === NaN || abort_button_id === "")) {
                    if (!(typeof (button_element) === "undefined" || button_element === null || button_element === NaN)) {
                        button_element = window.document.getElementById(abort_button_id);
                        button_element.removeAttribute("onclick");
                        button_element.setAttribute("onclick", button_element_onclick_function);
                        button_element.innerText = button_element_innerText;
                        // button_element.setAttribute("disabled", "disabled");
                    } else if (!(typeof (new_button_element) === "undefined" || new_button_element === null || new_button_element === NaN)) {
                        new_button_element = window.document.getElementById(abort_button_id);
                        window.document.body.removeChild(new_button_element);
                    };
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };

            // 將 <label> 標簽顯示内容恢復為原初狀態;
            try {
                if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
                    window.document.getElementById(show_label_id).innerText = label_innerText;
                    window.document.getElementById(show_label_id).innerText = initial_label_innerText;
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };
        };

        // AJAX 過程結束，此時觸發 .onloadend 事件;
        xhr.onloadend = function () {

            // 修改或添加點擊中斷讀取文件按鈕 <buttno> 標簽的狀態内容，用於提示激活文件讀取程序的入口;
            try {
                if (!(typeof (abort_button_id) === "undefined" || abort_button_id === null || abort_button_id === NaN || abort_button_id === "")) {
                    if (!(typeof (button_element) === "undefined" || button_element === null || button_element === NaN)) {
                        button_element = window.document.getElementById(abort_button_id);
                        button_element.removeAttribute("onclick");
                        button_element.setAttribute("onclick", button_element_onclick_function);
                        button_element.innerText = button_element_innerText;
                        // button_element.setAttribute("disabled", "disabled");
                    } else if (!(typeof (new_button_element) === "undefined" || new_button_element === null || new_button_element === NaN)) {
                        new_button_element = window.document.getElementById(abort_button_id);
                        window.document.body.removeChild(new_button_element);
                    };
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };

            // 將 <label> 標簽顯示内容恢復為原初狀態;
            try {
                let label_innerText = "「 response end. 」";  // Math.round();
                // let label_innerText = "「 response data downloaded successful: < " + parseInt(Event.lengthComputable / 1000) + " > characters. 」";  // Math.round();
                if (!(typeof (show_label_id) === "undefined" || show_label_id === null || show_label_id === NaN || show_label_id === "") && window.document.getElementById(show_label_id) !== null) {
                    window.document.getElementById(show_label_id).innerText = label_innerText;
                    window.document.getElementById(show_label_id).innerText = initial_label_innerText;
                };
            } catch (error) {
                console.log(error);
            } finally {
                //;
            };
        };

        // 設置上傳文件方式的選擇開關;
        switch (Branch_Switch) {

            case "get": {
                // Branch_Switch = "get" 表示使用 "get" 方法發送請求，不上傳本地文件;
                // const file_input_array = UpLoad_Data;  // 獲取上傳的文件流字節，結果是一個一維數組;
                // let form_data = new FormData(file_input_array);  // 實例化一個表單數據對象"FormData"，用來獲取上傳表單的值;
                // for (let i = 0; i < file_input_array.length; i++) {
                //     form_data.append("files_array[" + i + "]", file_input_array[i]);
                // };
                // let body = form_data;
                let UpLoad_url_complete = UpLoad_url + UpLoad_Data;
    
                xhr.open("get", UpLoad_url_complete, true);  // 用於創建 HTTP 請求，.open()方法只是創建請求並未發送發送請求，open(method:string, url:string, async?:boolean=true, username?:string, password: string);
                xhr.withCredentials = true;  // 用於跨域請求時將 cookie 加入到 request header;
                xhr.responseType = "text";  // 用於指定返回的響應數據類型，.responseType = "text", "json", "blob", "arraybuffer", "moz-chunked-arraybuffer", "document";

                // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                // xhr.setRequestHeader("Accept", "*/*");  // 客戶端能接受的資源類型 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ;
                // xhr.setRequestHeader("Content-type", "text/plain; charset=UTF-8");  // post 請求需要設置的 type 值，'application/x-www-form-urlencoded; charset=utf-8';
                // xhr.setRequestHeader("Accept-Charset", "utf-8");  // 瀏覽器告訴服務器自己能接受的字符編碼;
                // xhr.setRequestHeader("Accept-Encoding", "gzip, deflate");  // 客戶端能接收的壓縮數據的類型;
                // xhr.setRequestHeader("Accept-Language", "zh-Hant-TW; q=0.8, zh-Hant; q=0.7, zh-Hans-CN; q=0.7, zh-Hans; q=0.5, en-US, en; q=0.3");  // 客戶端能接受的自然語言類型;
                // xhr.setRequestHeader("Transfer-Encoding", "chunked");
                // xhr.setRequestHeader("Cookie", "");  // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                // xhr.setRequestHeader("Accept-xxx", "");  // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                xhr.setRequestHeader("Authorization", request_Authorization_Base64);  // 服務器訪問密碼參數；使用自定義函數對字符串進行base64編解碼，解碼：str = new Base64().decode(base64)，編碼：base64 = new Base64().encode(str);
                // xhr.setRequestHeader("Cache-Control", "no-cache");  // 'max-age=0' 或 no-store, must-revalidate 設置不允許瀏覽器緩存，必須刷新數據;
                // xhr.setRequestHeader("If-Modified-Since", new Date().toLocaleString('chinese', { hour12: false }));  // 緩存時間;
                // xhr.setRequestHeader("Connection", "close");  // 'keep-alive' 維持客戶端和服務端的鏈接關係，當一個網頁打開完成後，客戶端和服務器之間用於傳輸 HTTP 數據的 TCP 鏈接不會關閉，如果客戶端再次訪問這個服務器上的網頁，會繼續使用這一條已經建立的鏈接;
                // xhr.setRequestHeader("Referer", "http://localhost");  // 告訴服務器這個請求是從哪裏鏈接過來的;
                // xhr.setRequestHeader("Upgrade", "HTTP/1.0, HTTP/1.1, HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11");  // 向服務器指定某種傳輸協議;
                // xhr.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36");  // 客戶端版本號的名字 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36';
                xhr.setRequestHeader("From", "user@email.com");  // 發送請求用戶的 Email 地址;
                // xhr.setRequestHeader("Date", String(new Date().toLocaleString('chinese', { hour12: false })));  // 客戶端請求服務端的時間;

                let bodyByteLength = 0;
                for (let i = 0; i < body.length; i++) {
                    let c = body.charCodeAt(i);
                    // 判斷單字節加 1 ，雙字節 加 2;
                    if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {
                        bodyByteLength = bodyByteLength + 1;
                    } else {
                        bodyByteLength = bodyByteLength + 2;
                    };
                };
                // xhr.setRequestHeader("Content-Length", bodyByteLength);  // 客戶端發送的請求數據長度;

                try {
                    // tryCode - 嘗試執行代碼塊;
                    xhr.send(null);  // send(body); send(body?:Object=null);
                } catch (error) {
                    // catchCode - 捕獲錯誤的代碼塊;
                    console.log(error);
                } finally {
                    // finallyCode - 無論 try-catch 結果如何都會執行的代碼塊;
                };

                break;
            };

            case "post": {
                // Branch_Switch = "post" 表示使用 "FormData" 對象選擇上傳本地文件;
                // const file_input_array = UpLoad_Data;  // 獲取上傳的文件流字節，結果是一個一維數組;
                // let form_data = new FormData(file_input_array);  // 實例化一個表單數據對象"FormData"，用來獲取上傳表單的值;
                // for (let i = 0; i < file_input_array.length; i++) {
                //     form_data.append("files_array[" + i + "]", file_input_array[i]);
                // };
                // let body = form_data;
                let body = UpLoad_Data;  // 獲取上傳的文件流字節，結果是一個一維數組;

                xhr.open("post", UpLoad_url, true);  // 用於創建 HTTP 請求，.open()方法只是創建請求並未發送發送請求，open(method:string, url:string, async?:boolean=true, username?:string, password: string);
                xhr.withCredentials = true;  // 用於跨域請求時將 cookie 加入到 request header;
                xhr.responseType = "text",  // 用於指定返回的響應數據類型，.responseType = "text", "json", "blob", "arraybuffer", "moz-chunked-arraybuffer", "document";

                // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                // xhr.setRequestHeader("Accept", "*/*");  // 客戶端能接受的資源類型 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ;
                xhr.setRequestHeader("Content-type", "text/plain; charset=UTF-8");  // post 請求需要設置的 type 值，'application/x-www-form-urlencoded; charset=utf-8';
                // xhr.setRequestHeader("Accept-Charset", "utf-8");  // 瀏覽器告訴服務器自己能接受的字符編碼;
                // xhr.setRequestHeader("Accept-Encoding", "gzip, deflate");  // 客戶端能接收的壓縮數據的類型;
                // xhr.setRequestHeader("Accept-Language", "zh-Hant-TW; q=0.8, zh-Hant; q=0.7, zh-Hans-CN; q=0.7, zh-Hans; q=0.5, en-US, en; q=0.3");  // 客戶端能接受的自然語言類型;
                // xhr.setRequestHeader("Transfer-Encoding", "chunked");
                // xhr.setRequestHeader("Cookie", "");  // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                // xhr.setRequestHeader("Accept-xxx", "");  // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                xhr.setRequestHeader("Authorization", request_Authorization_Base64);  // 服務器訪問密碼參數；使用自定義函數對字符串進行base64編解碼，解碼：str = new Base64().decode(base64)，編碼：base64 = new Base64().encode(str);
                // xhr.setRequestHeader("Cache-Control", "no-cache");  // 'max-age=0' 或 no-store, must-revalidate 設置不允許瀏覽器緩存，必須刷新數據;
                // xhr.setRequestHeader("If-Modified-Since", new Date().toLocaleString('chinese', { hour12: false }));  // 緩存時間;
                // xhr.setRequestHeader("Connection", "close");  // 'keep-alive' 維持客戶端和服務端的鏈接關係，當一個網頁打開完成後，客戶端和服務器之間用於傳輸 HTTP 數據的 TCP 鏈接不會關閉，如果客戶端再次訪問這個服務器上的網頁，會繼續使用這一條已經建立的鏈接;
                // xhr.setRequestHeader("Referer", "http://localhost");  // 告訴服務器這個請求是從哪裏鏈接過來的;
                // xhr.setRequestHeader("Upgrade", "HTTP/1.0, HTTP/1.1, HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11");  // 向服務器指定某種傳輸協議;
                // xhr.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36");  // 客戶端版本號的名字 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36';
                xhr.setRequestHeader("From", "user@email.com");  // 發送請求用戶的 Email 地址;
                // xhr.setRequestHeader("Date", String(new Date().toLocaleString('chinese', { hour12: false })));  // 客戶端請求服務端的時間;

                let bodyByteLength = 0;
                for (let i = 0; i < body.length; i++) {
                    let c = body.charCodeAt(i);
                    // 判斷單字節加 1 ，雙字節 加 2;
                    if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {
                        bodyByteLength = bodyByteLength + 1;
                    } else {
                        bodyByteLength = bodyByteLength + 2;
                    };
                };
                // xhr.setRequestHeader("Content-Length", bodyByteLength);  // 客戶端發送的請求數據長度;

                try {
                    // tryCode - 嘗試執行代碼塊;
                    xhr.send(body);  // send(null), send(body?:Object=null);
                } catch (error) {
                    // catchCode - 捕獲錯誤的代碼塊;
                    console.log(error);
                } finally {
                    // finallyCode - 無論 try-catch 結果如何都會執行的代碼塊;
                };

                break;
            };

            case "form": {
                // Branch_Switch = "form" 表示使用 "FormData" 對象上傳表單的值;
                let form = document.getElementById('myform');

                form.addEventListener("submit", function (event) {

                    let form_data = new FormData(form);  // 實例化一個表單數據對象"FormData"，用來獲取上傳表單的值;
                    form_data.append('username', '张三');  // 添加表單項;
                    form_data.append('id', 123456);
                    event.preventDefault();  // 阻止默認的表單提交;
                    let body = form_data;

                    xhr.open(form.method, form.action);  // 用於創建 HTTP 請求，.open()方法只是創建請求並未發送發送請求，open(method:string, url:string, async?:boolean=true, username?:string, password: string);
                    xhr.withCredentials = true;  // 用於跨域請求時將 cookie 加入到 request header;
                    xhr.responseType = "text";  // 用於指定返回的響應數據類型，.responseType = "text", "json", "blob", "arraybuffer", "moz-chunked-arraybuffer", "document";

                    // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                    // xhr.setRequestHeader("Accept", "*/*");  // 客戶端能接受的資源類型 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ;
                    xhr.setRequestHeader("Content-type", "text/plain; charset=UTF-8");  // post 請求需要設置的 type 值，'application/x-www-form-urlencoded; charset=utf-8';
                    // xhr.setRequestHeader("Accept-Charset", "utf-8");  // 瀏覽器告訴服務器自己能接受的字符編碼;
                    // xhr.setRequestHeader("Accept-Encoding", "gzip, deflate");  // 客戶端能接收的壓縮數據的類型;
                    // xhr.setRequestHeader("Accept-Language", "zh-Hant-TW; q=0.8, zh-Hant; q=0.7, zh-Hans-CN; q=0.7, zh-Hans; q=0.5, en-US, en; q=0.3");  // 客戶端能接受的自然語言類型;
                    // xhr.setRequestHeader("Transfer-Encoding", "chunked");
                    // xhr.setRequestHeader("Cookie", "");  // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                    // xhr.setRequestHeader("Accept-xxx", "");  // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                    xhr.setRequestHeader("Authorization", request_Authorization_Base64);  // 服務器訪問密碼參數；使用自定義函數對字符串進行base64編解碼，解碼：str = new Base64().decode(base64)，編碼：base64 = new Base64().encode(str);
                    // xhr.setRequestHeader("Cache-Control", "no-cache");  // 'max-age=0' 或 no-store, must-revalidate 設置不允許瀏覽器緩存，必須刷新數據;
                    // xhr.setRequestHeader("If-Modified-Since", new Date().toLocaleString('chinese', { hour12: false }));  // 緩存時間;
                    // xhr.setRequestHeader("Connection", "close");  // 'keep-alive' 維持客戶端和服務端的鏈接關係，當一個網頁打開完成後，客戶端和服務器之間用於傳輸 HTTP 數據的 TCP 鏈接不會關閉，如果客戶端再次訪問這個服務器上的網頁，會繼續使用這一條已經建立的鏈接;
                    // xhr.setRequestHeader("Referer", "http://localhost");  // 告訴服務器這個請求是從哪裏鏈接過來的;
                    // xhr.setRequestHeader("Upgrade", "HTTP/1.0, HTTP/1.1, HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11");  // 向服務器指定某種傳輸協議;
                    // xhr.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36");  // 客戶端版本號的名字 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36';
                    xhr.setRequestHeader("From", "user@email.com");  // 發送請求用戶的 Email 地址;
                    // xhr.setRequestHeader("Date", String(new Date().toLocaleString('chinese', { hour12: false })));  // 客戶端請求服務端的時間;

                    let bodyByteLength = 0;
                    for (let i = 0; i < body.length; i++) {
                        let c = body.charCodeAt(i);
                        // 判斷單字節加 1 ，雙字節 加 2;
                        if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {
                            bodyByteLength = bodyByteLength + 1;
                        } else {
                            bodyByteLength = bodyByteLength + 2;
                        };
                    };
                    // xhr.setRequestHeader("Content-Length", bodyByteLength);  // 客戶端發送的請求數據長度;

                    try {
                        // tryCode - 嘗試執行代碼塊;
                        xhr.send(body);  // send(null), send(body?:Object=null);
                    } catch (error) {
                        // catchCode - 捕獲錯誤的代碼塊;
                        console.log(error);
                    } finally {
                        // finallyCode - 無論 try-catch 結果如何都會執行的代碼塊;
                    };

                }, false);

                break;
            };

            case "file": {
                // Branch_Switch = "file" 表示使用 "FormData" 對象選擇上傳本地文件;
                const file_input_array = UpLoad_Data;  // 獲取上傳的文件流字節，結果是一個一維數組;
                let form_data = new FormData(file_input_array);  // 實例化一個表單數據對象"FormData"，用來獲取上傳表單的值;
                for (let i = 0; i < file_input_array.length; i++) {
                    form_data.append("files_array[" + i + "]", file_input_array[i]);
                };
                let body = form_data;

                xhr.open("post", UpLoad_url, true);  // 用於創建 HTTP 請求，.open()方法只是創建請求並未發送發送請求，open(method:string, url:string, async?:boolean=true, username?:string, password: string);
                xhr.withCredentials = true;  // 用於跨域請求時將 cookie 加入到 request header;
                xhr.responseType = "text";  // 用於指定返回的響應數據類型，.responseType = "text", "json", "blob", "arraybuffer", "moz-chunked-arraybuffer", "document";

                // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                // xhr.setRequestHeader("Accept", "*/*");  // 客戶端能接受的資源類型 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ;
                xhr.setRequestHeader("Content-type", "text/plain; charset=UTF-8");  // post 請求需要設置的 type 值，'application/x-www-form-urlencoded; charset=utf-8';
                // xhr.setRequestHeader("Accept-Charset", "utf-8");  // 瀏覽器告訴服務器自己能接受的字符編碼;
                // xhr.setRequestHeader("Accept-Encoding", "gzip, deflate");  // 客戶端能接收的壓縮數據的類型;
                // xhr.setRequestHeader("Accept-Language", "zh-Hant-TW; q=0.8, zh-Hant; q=0.7, zh-Hans-CN; q=0.7, zh-Hans; q=0.5, en-US, en; q=0.3");  // 客戶端能接受的自然語言類型;
                // xhr.setRequestHeader("Transfer-Encoding", "chunked");
                // xhr.setRequestHeader("Cookie", "");  // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                // xhr.setRequestHeader("Accept-xxx", "");  // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                xhr.setRequestHeader("Authorization", request_Authorization_Base64);  // 服務器訪問密碼參數；使用自定義函數對字符串進行base64編解碼，解碼：str = new Base64().decode(base64)，編碼：base64 = new Base64().encode(str);
                // xhr.setRequestHeader("Cache-Control", "no-cache");  // 'max-age=0' 或 no-store, must-revalidate 設置不允許瀏覽器緩存，必須刷新數據;
                // xhr.setRequestHeader("If-Modified-Since", new Date().toLocaleString('chinese', { hour12: false }));  // 緩存時間;
                // xhr.setRequestHeader("Connection", "close");  // 'keep-alive' 維持客戶端和服務端的鏈接關係，當一個網頁打開完成後，客戶端和服務器之間用於傳輸 HTTP 數據的 TCP 鏈接不會關閉，如果客戶端再次訪問這個服務器上的網頁，會繼續使用這一條已經建立的鏈接;
                // xhr.setRequestHeader("Referer", "http://localhost");  // 告訴服務器這個請求是從哪裏鏈接過來的;
                // xhr.setRequestHeader("Upgrade", "HTTP/1.0, HTTP/1.1, HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11");  // 向服務器指定某種傳輸協議;
                // xhr.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36");  // 客戶端版本號的名字 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36';
                xhr.setRequestHeader("From", "user@email.com");  // 發送請求用戶的 Email 地址;
                // xhr.setRequestHeader("Date", String(new Date().toLocaleString('chinese', { hour12: false })));  // 客戶端請求服務端的時間;

                let bodyByteLength = 0;
                for (let i = 0; i < body.length; i++) {
                    let c = body.charCodeAt(i);
                    // 判斷單字節加 1 ，雙字節 加 2;
                    if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {
                        bodyByteLength = bodyByteLength + 1;
                    } else {
                        bodyByteLength = bodyByteLength + 2;
                    };
                };
                // xhr.setRequestHeader("Content-Length", bodyByteLength);  // 客戶端發送的請求數據長度;

                try {
                    // tryCode - 嘗試執行代碼塊;
                    xhr.send(body);  // send(null), send(body?:Object=null);
                } catch (error) {
                    // catchCode - 捕獲錯誤的代碼塊;
                    console.log(error);
                } finally {
                    // finallyCode - 無論 try-catch 結果如何都會執行的代碼塊;
                };

                break;
            };

            case "ArrayBuffer": {
                // Branch_Switch = "ArrayBuffer"，"Uint8Array" 表示以類型化數組8位無符號整數"Uint8Array"的形式向服務器AJAX發送數據;
                const myArray = new ArrayBuffer(UpLoad_Data);
                let longInt8View = new Uint8Array(myArray);
                // generate some data
                for (let i = 0; i < longInt8View.length; i++) {
                    longInt8View[i] = i % 256;
                }
                let body = myArray;

                xhr.open("post", UpLoad_url, true);  // 用於創建 HTTP 請求，.open()方法只是創建請求並未發送發送請求，open(method:string, url:string, async?:boolean=true, username?:string, password: string);
                xhr.withCredentials = true;  // 用於跨域請求時將 cookie 加入到 request header;
                xhr.responseType = "arraybuffer";  // 用於指定返回的響應數據類型，.responseType = "text", "json", "blob", "arraybuffer", "moz-chunked-arraybuffer", "document";

                // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                // xhr.setRequestHeader("Accept", "*/*");  // 客戶端能接受的資源類型 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ;
                xhr.setRequestHeader("Content-type", "text/plain; charset=UTF-8");  // post 請求需要設置的 type 值，'application/x-www-form-urlencoded; charset=utf-8';
                // xhr.setRequestHeader("Accept-Charset", "utf-8");  // 瀏覽器告訴服務器自己能接受的字符編碼;
                // xhr.setRequestHeader("Accept-Encoding", "gzip, deflate");  // 客戶端能接收的壓縮數據的類型;
                // xhr.setRequestHeader("Accept-Language", "zh-Hant-TW; q=0.8, zh-Hant; q=0.7, zh-Hans-CN; q=0.7, zh-Hans; q=0.5, en-US, en; q=0.3");  // 客戶端能接受的自然語言類型;
                // xhr.setRequestHeader("Transfer-Encoding", "chunked");
                // xhr.setRequestHeader("Cookie", "");  // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                // xhr.setRequestHeader("Accept-xxx", "");  // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                xhr.setRequestHeader("Authorization", request_Authorization_Base64);  // 服務器訪問密碼參數；使用自定義函數對字符串進行base64編解碼，解碼：str = new Base64().decode(base64)，編碼：base64 = new Base64().encode(str);
                // xhr.setRequestHeader("Cache-Control", "no-cache");  // 'max-age=0' 或 no-store, must-revalidate 設置不允許瀏覽器緩存，必須刷新數據;
                // xhr.setRequestHeader("If-Modified-Since", new Date().toLocaleString('chinese', { hour12: false }));  // 緩存時間;
                // xhr.setRequestHeader("Connection", "close");  // 'keep-alive' 維持客戶端和服務端的鏈接關係，當一個網頁打開完成後，客戶端和服務器之間用於傳輸 HTTP 數據的 TCP 鏈接不會關閉，如果客戶端再次訪問這個服務器上的網頁，會繼續使用這一條已經建立的鏈接;
                // xhr.setRequestHeader("Referer", "http://localhost");  // 告訴服務器這個請求是從哪裏鏈接過來的;
                // xhr.setRequestHeader("Upgrade", "HTTP/1.0, HTTP/1.1, HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11");  // 向服務器指定某種傳輸協議;
                // xhr.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36");  // 客戶端版本號的名字 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36';
                xhr.setRequestHeader("From", "user@email.com");  // 發送請求用戶的 Email 地址;
                // xhr.setRequestHeader("Date", String(new Date().toLocaleString('chinese', { hour12: false })));  // 客戶端請求服務端的時間;

                let bodyByteLength = 0;
                for (let i = 0; i < body.length; i++) {
                    let c = body.charCodeAt(i);
                    // 判斷單字節加 1 ，雙字節 加 2;
                    if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {
                        bodyByteLength = bodyByteLength + 1;
                    } else {
                        bodyByteLength = bodyByteLength + 2;
                    };
                };
                // xhr.setRequestHeader("Content-Length", bodyByteLength);  // 客戶端發送的請求數據長度;

                try {
                    // tryCode - 嘗試執行代碼塊;
                    xhr.send(body);  // send(null), send(body?:Object=null);
                } catch (error) {
                    // catchCode - 捕獲錯誤的代碼塊;
                    console.log(error);
                } finally {
                    // finallyCode - 無論 try-catch 結果如何都會執行的代碼塊;
                };

                break;
            };

            case "Blob": {
                // Branch_Switch = "Blob" 表示以二進制binary對象"Blob"的形式向服務器AJAX發送數據;
                let blob = new Blob([UpLoad_Data], { type: "text/plain, charset=UTF-8" });  // { type: "text/csv,charset=UTF-8" } { type: "text/html,charset=UTF-8" } { type: "image/png" };
                let body = blob;

                xhr.open("post", UpLoad_url, true);  // 用於創建 HTTP 請求，.open()方法只是創建請求並未發送發送請求，open(method:string, url:string, async?:boolean=true, username?:string, password: string);
                xhr.withCredentials = true;  // 用於跨域請求時將 cookie 加入到 request header;
                xhr.responseType = "arraybuffer";  // 用於指定返回的響應數據類型，.responseType = "text", "json", "blob", "arraybuffer", "moz-chunked-arraybuffer", "document";

                // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                // xhr.setRequestHeader("Accept", "*/*");  // 客戶端能接受的資源類型 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ;
                xhr.setRequestHeader("Content-type", "text/plain; charset=UTF-8");  // post 請求需要設置的 type 值，'application/x-www-form-urlencoded; charset=utf-8';
                // xhr.setRequestHeader("Accept-Charset", "utf-8");  // 瀏覽器告訴服務器自己能接受的字符編碼;
                // xhr.setRequestHeader("Accept-Encoding", "gzip, deflate");  // 客戶端能接收的壓縮數據的類型;
                // xhr.setRequestHeader("Accept-Language", "zh-Hant-TW; q=0.8, zh-Hant; q=0.7, zh-Hans-CN; q=0.7, zh-Hans; q=0.5, en-US, en; q=0.3");  // 客戶端能接受的自然語言類型;
                // xhr.setRequestHeader("Transfer-Encoding", "chunked");
                // xhr.setRequestHeader("Cookie", "");  // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                // xhr.setRequestHeader("Accept-xxx", "");  // 添加AJAX過程發送的請求頭(header)信息，必須為字符串(string)數據，xhr.setRequestHeader("header_key", "value");
                xhr.setRequestHeader("Authorization", request_Authorization_Base64);  // 服務器訪問密碼參數；使用自定義函數對字符串進行base64編解碼，解碼：str = new Base64().decode(base64)，編碼：base64 = new Base64().encode(str);
                // xhr.setRequestHeader("Cache-Control", "no-cache");  // 'max-age=0' 或 no-store, must-revalidate 設置不允許瀏覽器緩存，必須刷新數據;
                // xhr.setRequestHeader("If-Modified-Since", new Date().toLocaleString('chinese', { hour12: false }));  // 緩存時間;
                // xhr.setRequestHeader("Connection", "close");  // 'keep-alive' 維持客戶端和服務端的鏈接關係，當一個網頁打開完成後，客戶端和服務器之間用於傳輸 HTTP 數據的 TCP 鏈接不會關閉，如果客戶端再次訪問這個服務器上的網頁，會繼續使用這一條已經建立的鏈接;
                // xhr.setRequestHeader("Referer", "http://localhost");  // 告訴服務器這個請求是從哪裏鏈接過來的;
                // xhr.setRequestHeader("Upgrade", "HTTP/1.0, HTTP/1.1, HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11");  // 向服務器指定某種傳輸協議;
                // xhr.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36");  // 客戶端版本號的名字 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36';
                xhr.setRequestHeader("From", "user@email.com");  // 發送請求用戶的 Email 地址;
                // xhr.setRequestHeader("Date", String(new Date().toLocaleString('chinese', { hour12: false })));  // 客戶端請求服務端的時間;

                let bodyByteLength = 0;
                for (let i = 0; i < body.length; i++) {
                    let c = body.charCodeAt(i);
                    // 判斷單字節加 1 ，雙字節 加 2;
                    if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {
                        bodyByteLength = bodyByteLength + 1;
                    } else {
                        bodyByteLength = bodyByteLength + 2;
                    };
                };
                // xhr.setRequestHeader("Content-Length", bodyByteLength);  // 客戶端發送的請求數據長度;

                try {
                    // tryCode - 嘗試執行代碼塊;
                    xhr.send(body);  // send(null), send(body?:Object=null);
                } catch (error) {
                    // catchCode - 捕獲錯誤的代碼塊;
                    console.log(error);
                } finally {
                    // finallyCode - 無論 try-catch 結果如何都會執行的代碼塊;
                };

                break;
            };

            default: {
                alert('AJAX 過程請求類型 ( "get", "post" ~ ["form", "file", "ArrayBuffer", "Blob"] ) 設定無法識別.');
                // break;
            };
        };
    };

    return;
};

function StartORStopCollectData(
    windowHandle_1,  // 交互操作頁面窗口對象;
    windowHandle_2,  // 目標數據源頁面窗口對象;
    BranchSwitch,  // 1, 2 判斷采集幾個層級的頁面數據;
    Result_Display_Container_Radio_value,  // 用於展示數據的網頁元素類型 "table" or "canvas-datagrid";
    CurrentFirstLevelPageNumber,  // 當前第一層級網頁的頁碼號;
    NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage,  // 當前第一層級網頁的頁碼號;
    StartFirstLevelPageNumber,  // 自定義設定的啓動采集的的第一層級網頁的頁碼號;
    EndFirstLevelPageNumber,  // 自定義設定的終止采集的的第一層級網頁的頁碼號;
    StartCurrentSecondLevelPageInCurrentFirstLevelPage,  // 自定義設定的從第一層級網頁中的第幾個第二層級網頁啓動采集的頁碼號;
    // EndCurrentSecondLevelPageInCurrentFirstLevelPage,  // 自定義設定的至第一層級網頁中的第幾個第二層級網頁終止采集的頁碼號;
    /* DelayAfterClickFirstLevelWebSkipPageButton, */
    /* DelayAfterClickFirstLevelWebNextPageButton, */
    /* DelayAfterClickEntrySecondLevelWebButton, */
    /* DelayAfterClickReturnFirstLevelWebButton, */
    /* IntervalOfCircleClickNextPageButton, */
    // TableSkipPageTextboxTdElement_XPath_1,
    // TableSkipPageSubmitButtonTdElement_XPath_1,
    // TableNextPageSubmitButtonImgTdElement_XPath_1,
    // TableWebPageNumberTdElement_XPath_1,
    // RetrievalResult_XPath_1,
    // // NumberOfItemInThisSecondLevelWebPage,
    // SecondLevelWebPageRetrievalResult_XPath,
    // EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,
    // FromSecondLevelWebReturnFirstLevelWeb_XPath,
    ResultExhibitsDivID,  // 用於展示采集到的結果數據的載體網頁層 <div> 元素的 ID 值字符串;
    ResultExhibitsDivTagTableID,  // 用於展示采集到的結果數據的載體網頁表格 <table> 元素的 ID 值字符串;
    PublicVariableResultExhibitsWebPage,  // 公共變量，用於保存采集到的結果，二維數組;
    Data_Server_Url,  // 自定義的保存采集結果的數據庫服務器地址字符串，例如取值：http://localhost:27016/insertMany?dbName=testWebData&dbTableName=test20220703&dbUser=admin_testWebData&dbPass=admin&Key=username:password;
    Data_Receptors,  // 用於判斷采集到的結果數據的保存形式，是保存在網頁中，還是保存到數據庫服務器中，可取字符串值 "Database"，"Database_and_Webpage"，"Webpage" 其中之一;
    // Skip_First_Level_Page,  // 自定義函數，獲取第一層級頁面中的執行完整跳頁功能的多個元素對象;
    // Next_First_Level_Page,  // 自定義函數，獲取第一層級頁面中的下一頁入口元素對象;
    // Extract_First_Level_Page_Number,  // 自定義函數，獲取第一層級頁面中的頁碼信息元素對象;
    // Obtain_First_Level_Page_Data,  // 自定義函數，獲取第一層級頁面中的目標數據;
    // Get_Entry_from_First_Level_Page_to_Second_Level_Page,  // 自定義函數，獲取第一層級頁面中進入第二層級網頁的入口元素對象;
    // Obtain_Second_Level_Page_Data,  // 自定義函數，獲取第二層級頁面中的目標數據;
    // Get_Entry_from_Second_Level_Page_to_First_Level_Page,  // 自定義函數，獲取從第二層級頁面中返回至第一層級網頁的入口元素對象;
    // use_AJAX,  // 自定義函數，用於使用 AJAX 方法向保存結果的數據庫服務器發送采集到的結果數據;
    DisplayData  // 自定義函數，在結果承載窗口頁面展示采集到的數據;
){

    // 暫時禁用啓動按鈕，防止頻繁連續點擊操作;
    if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
        windowHandle_1.document.getElementById("StartORStopCollectDataButton").disabled = "disabled";
        // 延時 1000 毫秒後取消禁用啓動按鈕;
        windowHandle_1.setTimeout(
            function() {
                windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
            },
            1000
        );
    };

    /* 循環周期時長（單位毫秒）輸入文本框 input 的值; */
    /* // Interval_Of_Circle_Click_value = parseInt(1000);  // 1000 毫秒; */
    /*
    // if (windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput") !== null) {
    //     Interval_Of_Circle_Click_value = parseInt(windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
    // };
    */
    /* // Randomization_Relative_Interval = parseFloat(0.2);  // Interval_Of_Circle_Click_value * 0.2; */
    /*
    // if (windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput") !== null) {
    //     Randomization_Relative_Interval = parseFloat(windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
    // };
    */
    // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
    // Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
    /* // 只抓取第一層網頁中數據的參數; */
    /* let DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
    /* let DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
    /* let DelayAfterClickEntrySecondLevelWebButton = parseInt(0); */  /* 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
    /* let DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
    /* let IntervalOfCircleClickNextPageButton = parseInt(0); */  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
    /* // 抓取第一層網頁中的數據，然後自動進入第二層網頁，抓取第二層網頁中的數據，然後再返回第一層網頁，循環往復，的參數; */
    /* let DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
    /* let DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
    /* let DelayAfterClickEntrySecondLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
    /* let DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
    /* let IntervalOfCircleClickNextPageButton = parseInt(0); */  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
    /* IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickEntrySecondLevelWebButton) * ( parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page) - parseInt(StartEntryNumber) + parseInt(1) ) + parseInt(DelayAfterClickFirstLevelWebNextPageButton); */;

    /* 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值 */;
    /* // let TableWebPageNumberTdElement_XPath_1 = "/html/body/div/centre/label"; */;
    /* // let TableWebPageNumberTdElement_XPath_2 = "/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div/div/table[4]/tbody/tr/td[1]"; */;

    /* 當前網頁中可采集數據元素的 XPath 值 */;
    /* // let RetrievalResult_XPath_1 = "/html/body/div/centre/div/table"; */;
    /* // let RetrievalResult_XPath_2 = "/html/body/center/table[1]/tbody/tr[2]/td/table/tbody/tr/td[3]/table/tbody/tr[2]/td/table[3]/tbody/tr/td[2]/div/table[2]/tbody/tr"; */;

    /* 第二層網頁中需要抓取的數據的條目數目; */;
    /* // let NumberOfItemInThisSecondLevelWebPage = parseInt(27); */;

    /* 從第二層網頁返回第一層網頁的按鈕元素 XPath 值; */;
    /* // let ReturnFirstLevelWeb_XPath = "/html/body/div/centre/button[5]";  // "[1]/td/div[2]/img"; */;
    // let ReturnFirstLevelWeb_XPath = FromSecondLevelWebReturnFirstLevelWeb_XPath + "[1]/td/div[2]/img";

    /* 指定的網頁中用於展示數據的 DIV 層元素的 ID 值字符串; */;
    /* // let ResultExhibitsDivID = "ResultExhibitsDiv"; */;

    // 更改按鈕狀態和標志;
    PublicVariableStartORStopCollectDataButtonClickState = !PublicVariableStartORStopCollectDataButtonClickState;
    if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
        switch(PublicVariableStartORStopCollectDataButtonClickState) {
            case true: windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data"; break;
            case false: windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Stop Collect Data"; break;
            default: alert("Start OR Stop Collect Data Button" + "\n" + "Function StartORStopCollectData() Variable { PublicVariableStartORStopCollectDataButtonClickState } Error !" + "\n" + PublicVariableStartORStopCollectDataButtonClickState);
        };
    };
    if (PublicVariableStartORStopCollectDataButtonClickState) {

        // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
        chrome.runtime.sendMessage(
            {
                "message": 'userInterface->background:StopCollect',
                "error": 'Execution process interrupted ( PublicVariableStartORStopCollectDataButtonClickState === true ).',
                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                "url": String(windowHandle_2.document.location.href),
                "page_number": String(CurrentFirstLevelPageNumber) + '--' + String(NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                "Current_First_Level_Page_Number": parseInt(CurrentFirstLevelPageNumber),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                "Current_Second_Level_Page_Number": parseInt(NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),
                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
            },  // 發送的具體數據，可以是 JSON 對象;
            // (response_Data) => {
            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
            //     // console.log(response_Data);
            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
            //     //     console.log('background instruction: { Stop collecting }.');
            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
            //     //     console.log('{ Stand By }.');
            //     // };
            //     // if (response_Data["message"] === "background->userInterface:StandBy") {
            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
            //     //     console.log('background instruction: { StandBy }.');
            //     // };
            // }
        );

        if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
            windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
            windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
            windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
            windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
        };
        // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
        //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
        // };
        if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
            windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
            windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
            windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
            windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
            windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
            windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
            windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
        };

        // if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
        //     windowHandle_1.document.getElementById("StartORStopCollectDataButton").disabled = "disabled";  // 暫時禁用啓動按鈕，防止頻繁連續點擊操作;
        //     // 延時 1000 毫秒後取消禁用啓動按鈕;
        //     windowHandle_1.setTimeout(
        //         function() {
        //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
        //         },
        //         1000
        //     );
        // };

        return "StopCollect";
    };

    // 配置相關按鈕禁用不可再操作;
    if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
        windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").disabled = "disabled";
    };
    if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
        windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").disabled = "disabled";
    };
    if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
        windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").disabled = "disabled";
    };
    if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
        windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").disabled = "disabled";
    };
    if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
        windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").disabled = "disabled";
    };
    if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
        windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").disabled = "disabled";
    };
    if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
        windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").disabled = "disabled";
    };
    // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
    //     windowHandle_1.document.getElementById("NewOpenWebPageButton").disabled = "disabled";
    // };
    if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
        windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").disabled = "disabled";
    };
    if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
        windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").disabled = "disabled";
    };
    if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
        windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").disabled = "disabled";
    };
    if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
        windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").disabled = "disabled";
    };
    if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
        windowHandle_1.document.getElementById("DataServerUrlInput").disabled = "disabled";
    };
    if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
        windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").disabled = "disabled";
    };
    if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
        windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").disabled = "disabled";
    };

    // 判斷自定義輸入的想要開始采集的第一層級網頁的序號值是否合規;
    // if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
    //     if (isNaN(windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value)) {
    //         alert("採集起始頁碼輸入錯誤." + " \n { " + String(windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value) + " } \n " + "採集起始頁碼應寫入正整數.");
    //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
    //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
    //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
    //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
    //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
    //         };
    //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
    //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
    //         // };
    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
    //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
    //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
    //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
    //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
    //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
    //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
    //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
    //         };
    //         PublicVariableStartORStopCollectDataButtonClickState = true;
    //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
    //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
    //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
    //         };
    //         return false;
    //     };
    //     if (parseInt(windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value) < parseInt(1)) {
    //         alert("採集起始頁碼輸入錯誤." + " \n { " + String(windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value) + " } \n " + "採集起始頁碼至少應在第一頁或之後.");
    //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
    //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
    //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
    //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
    //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
    //         };
    //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
    //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
    //         // };
    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
    //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
    //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
    //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
    //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
    //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
    //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
    //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
    //         };
    //         PublicVariableStartORStopCollectDataButtonClickState = true;
    //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
    //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
    //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
    //         };
    //         return false;
    //     };
    // };
    // if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
    //     if (isNaN(windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value)) {
    //         alert("採集終止頁碼輸入錯誤." + " \n { " + String(windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value) + " } \n " + "採集終止頁碼應寫入正整數.");
    //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
    //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
    //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
    //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
    //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
    //         };
    //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
    //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
    //         // };
    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
    //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
    //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
    //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
    //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
    //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
    //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
    //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
    //         };
    //         PublicVariableStartORStopCollectDataButtonClickState = true;
    //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
    //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
    //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
    //         };
    //         return false;
    //     };
    // };

    let CurrentPageNumber = parseInt(CurrentFirstLevelPageNumber);
    if (parseInt(Current_First_Level_Page_Number) !== parseInt(0)) {
        CurrentPageNumber = parseInt(Current_First_Level_Page_Number);
    };
    let Number_of_Current_Second_Level_Page_in_Current_First_Level_Page = parseInt(NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage);
    if (parseInt(Current_Second_Level_Page_Number) !== parseInt(0)) {
        Number_of_Current_Second_Level_Page_in_Current_First_Level_Page = parseInt(Current_Second_Level_Page_Number);
    };

    // 獲取最大可采集的頁面數目序號，和當前所在網頁的序號;
    let MaximumPageNumber = parseInt(Maximum_First_Level_Page_Number);
    // 獲取當前所處的第一層級網頁中，包含的進入第二層級網頁的入口，一共有多少個;
    let Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page);

    let StartPageNumber = parseInt(StartFirstLevelPageNumber);
    // if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
    //     StartPageNumber = parseInt(windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value);
    // };

    let EndPageNumber = parseInt(EndFirstLevelPageNumber);
    // if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
    //     EndPageNumber = parseInt(windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value);
    // };

    if (StartPageNumber > EndPageNumber) {

        // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
        chrome.runtime.sendMessage(
            {
                "message": 'userInterface->background:StopCollect',  // 'contentScript->background:Input_Start_First_Level_Page_Number_Error',  // 'Input_Start_First_Level_Page_Number_' + String(StartPageNumber) + '_Error',
                "error": "Input Start Number = { " + String(StartPageNumber) + " } > Input End Number = { " + String(EndPageNumber) + " }.",
                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                "url": String(windowHandle_2.document.location.href),
                "page_number": String(CurrentFirstLevelPageNumber) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                "Current_First_Level_Page_Number": parseInt(CurrentFirstLevelPageNumber),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                "Current_Second_Level_Page_Number": parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
            },  // 發送的具體數據，可以是 JSON 對象;
            // (response_Data) => {
            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
            //     // console.log(response_Data);
            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
            //     //     console.log('background instruction: { Stop collecting }.');
            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
            //     //     console.log('{ Stand By }.');
            //     // };
            //     // if (response_Data["message"] === "background->userInterface:StandBy") {
            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
            //     //     console.log('background instruction: { StandBy }.');
            //     // };
            // }
        );

        alert("採集起始頁碼輸入錯誤." + " \n Input Start Number = { " + String(StartPageNumber) + " } \n Input End Number = { " + String(EndPageNumber) + " } \n " + "採集起始頁碼不可大於採集終止頁碼.");

        if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
            windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
            windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
            windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
            windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
        };
        // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
        //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
        // };
        if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
            windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
            windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
            windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
            windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
            windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
            windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
            windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
        };

        PublicVariableStartORStopCollectDataButtonClickState = true;

        if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
            // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
            windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
        };

        return false;
    };

    if (parseInt(MaximumPageNumber) !== parseInt(0) && EndPageNumber > MaximumPageNumber) {

        // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
        chrome.runtime.sendMessage(
            {
                "message": 'userInterface->background:StopCollect',  // 'contentScript->background:Input_End_First_Level_Page_Number_Error',  // 'Input_End_First_Level_Page_Number_' + String(EndPageNumber) + '_Error',
                "error": "Input End Number = { " + String(EndPageNumber) + " } > Maximum Number = { " + String(MaximumPageNumber) + " }.",
                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                "url": String(windowHandle_2.document.location.href),
                "page_number": String(CurrentFirstLevelPageNumber) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                "Current_First_Level_Page_Number": parseInt(CurrentFirstLevelPageNumber),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                "Current_Second_Level_Page_Number": parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
            },  // 發送的具體數據，可以是 JSON 對象;
            // (response_Data) => {
            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
            //     // console.log(response_Data);
            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
            //     //     console.log('background instruction: { Stop collecting }.');
            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
            //     //     console.log('{ Stand By }.');
            //     // };
            // }
        );

        alert("採集終止頁碼輸入錯誤." + " \n Input End Number = { " + String(EndPageNumber) + " } \n Maximum Number = { " + String(MaximumPageNumber) + " } \n " + "採集終止頁碼不可大於庫含最大頁碼.");

        if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
            windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
            windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
            windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
            windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
        };
        // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
        //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
        // };
        if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
            windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
            windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
            windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
            windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
            windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
            windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
            windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
        };

        PublicVariableStartORStopCollectDataButtonClickState = true;

        if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
            // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
            windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
        };

        return false;
    };

    // if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
    //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value === "") {
    //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
    //     };
    // };

    /* 判斷自定義輸入的當前第一層級網頁中想要開始采集的第二層級網頁的序號值是否合規; */;
    // if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
    //     if (isNaN(windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value)) {
    //         alert("採集起始頁碼中的起始採集條目輸入錯誤." + " \n { " + String(windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value) + " } \n " + "採集起始頁碼中的起始採集條目應寫入正整數.");
    //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
    //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
    //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
    //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
    //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
    //         };
    //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
    //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
    //         // };
    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
    //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
    //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
    //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
    //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
    //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
    //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
    //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
    //         };
    //         PublicVariableStartORStopCollectDataButtonClickState = true;
    //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
    //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
    //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
    //         };
    //         return false;
    //     };
    //     if (parseInt(windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value) < parseInt(1)) {
    //         alert("採集起始頁碼中的起始採集條目輸入錯誤." + " \n { " + String(windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value) + " } \n " + "採集起始頁碼中輸入的起始採集條目至少應在第一條或之後.");
    //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
    //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
    //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
    //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
    //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
    //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
    //         };
    //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
    //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
    //         // };
    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
    //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
    //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
    //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
    //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
    //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
    //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
    //         };
    //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
    //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
    //         };
    //         PublicVariableStartORStopCollectDataButtonClickState = true;
    //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
    //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
    //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
    //         };
    //         return false;
    //     };
    // };

    let StartEntryNumber = parseInt(StartCurrentSecondLevelPageInCurrentFirstLevelPage);
    // if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
    //     StartEntryNumber = parseInt(windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value);
    // };
    let EndEntryNumber = parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page);  // parseInt(EndCurrentSecondLevelPageInCurrentFirstLevelPage);
    // if (windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput") !== null) {
    //     EndEntryNumber = parseInt(windowHandle_1.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").value);
    // };

    if (StartEntryNumber > EndEntryNumber) {

        // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
        chrome.runtime.sendMessage(
            {
                "message": 'userInterface->background:StopCollect',  // 'contentScript->background:Input_Start_Second_Level_Page_Number_Error',  // 'Input_Start_Second_Level_Page_Number_' + String(StartEntryNumber) + '_Error',
                "error": "Input Start Number = { " + String(StartEntryNumber) + " } > Input End Number = { " + String(EndEntryNumber) + " }.",
                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                "url": String(windowHandle_2.document.location.href),
                "page_number": String(CurrentFirstLevelPageNumber) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                "Current_First_Level_Page_Number": parseInt(CurrentFirstLevelPageNumber),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                "Current_Second_Level_Page_Number": parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
            },  // 發送的具體數據，可以是 JSON 對象;
            // (response_Data) => {
            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
            //     // console.log(response_Data);
            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
            //     //     console.log('background instruction: { Stop collecting }.');
            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
            //     //     console.log('{ Stand By }.');
            //     // };
            // }
        );

        alert("在當前第一層級網頁 " + String(CurrentPageNumber) + " 中的採集起始第二層級網頁的序號值輸入錯誤." + " \n Input Start Entry Number = { " + String(StartEntryNumber) + " } \n Input End Entry Number = { " + String(EndEntryNumber) + " } \n " + "當前第一層級網頁 " + String(CurrentPageNumber) + " 中的採集起始第二層級網頁的序號值不可大於當前第一層級網頁 " + String(CurrentPageNumber) + " 中的採集終止第二層級網頁的序號值.");

        if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
            windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
            windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
            windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
            windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
        };
        // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
        //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
        // };
        if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
            windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
            windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
            windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
            windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
            windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
            windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
            windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
        };

        PublicVariableStartORStopCollectDataButtonClickState = true;

        if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
            // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
            windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
        };

        return false;
    };

    if (parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page) !== parseInt(0) && EndEntryNumber > Total_Of_Second_Level_Page_in_Current_First_Level_Page) {

        // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
        chrome.runtime.sendMessage(
            {
                "message": 'userInterface->background:StopCollect',  // 'contentScript->background:Input_End_Second_Level_Page_Number_Error',  // 'Input_End_Second_Level_Page_Number_' + String(EndEntryNumber) + '_Error',
                "error": "Input End Number = { " + String(EndEntryNumber) + " } > Maximum Number = { " + String(Total_Of_Second_Level_Page_in_Current_First_Level_Page) + " }.",
                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                "url": String(windowHandle_2.document.location.href),
                "page_number": String(CurrentFirstLevelPageNumber) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                "Current_First_Level_Page_Number": parseInt(CurrentFirstLevelPageNumber),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                "Current_Second_Level_Page_Number": parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
            },  // 發送的具體數據，可以是 JSON 對象;
            // (response_Data) => {
            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
            //     // console.log(response_Data);
            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
            //     //     console.log('background instruction: { Stop collecting }.');
            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
            //     //     console.log('{ Stand By }.');
            //     // };
            // }
        );

        alert("在當前第一層級網頁 " + String(CurrentPageNumber) + " 中自定義的採集終止條目序號值輸入錯誤." + " \n Input End Number = { " + String(EndEntryNumber) + " } \n Maximum Number = { " + String(Total_Of_Second_Level_Page_in_Current_First_Level_Page) + " } \n " + "在當前第一層級網頁 " + String(CurrentPageNumber) + " 中的終止採集條目序號不可大於當前網頁 " + String(CurrentPageNumber) + " 中包含的最大條目序號.");

        if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
            windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
            windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
            windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
            windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
            windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
        };
        // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
        //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
        // };
        if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
            windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
            windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
            windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
            windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
            windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
            windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
        };
        if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
            windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
        };
        PublicVariableStartORStopCollectDataButtonClickState = true;
        if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
            // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
            windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
        };
        return false;
    };

    // // 用於存儲采集結果的數據庫服務器網址，字符串變量;
    // if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
    //     Data_Server_Url = String(windowHandle_1.document.getElementById("DataServerUrlInput").value);
    // };
    // // console.log(Data_Server_Url);

    // // 用於存儲采集結果的容器類型複選框值，字符串變量，可取 "Database"，"Database_and_Webpage"，"Webpage" 值，例如取值：String("Webpage");
    // // 判斷指定名稱的複選框元素是否存在;
    // if (windowHandle_1.document.getElementsByName("DataReceptorsCheckbox") !== null && windowHandle_1.document.getElementsByName("DataReceptorsCheckbox").length > 0) {
    //     // windowHandle_1.document.getElementsByName("DataReceptorsCheckbox");
    //     // windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox");
    //     // windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox");

    //     let Data_Receptors_Checkbox = new Array;
    //     Data_Receptors_Checkbox = windowHandle_1.document.getElementsByName("DataReceptorsCheckbox");
    //     Data_Receptors = "";
    //     // 遍歷指定名稱的複選框元素;
    //     for (let i = 0; i < Data_Receptors_Checkbox.length; i++) {

    //         // 判斷複選框元素的選中狀態;
    //         if (Data_Receptors_Checkbox[i].checked) {
    //             if (Data_Receptors === "") {
    //                 /* Data_Receptors_Checkbox[i].getAttribute("checked"); */
    //                 Data_Receptors = String(Data_Receptors_Checkbox[i].getAttribute("value"));  // 從複選框張提取值，並强制轉換爲字符串類型;
    //                 /* Data_Receptors = String(Data_Receptors_Checkbox[i].value); */
    //             } else {
    //                 /* Data_Receptors_Checkbox[i].getAttribute("checked"); */
    //                 Data_Receptors = String(Data_Receptors) + "_and_" + String(Data_Receptors_Checkbox[i].getAttribute("value"));  // 從複選框張提取值，並强制轉換爲字符串類型，然後與已有字符串值拼接;
    //                 /* Data_Receptors = String(Data_Receptors) + "_and_" + String(Data_Receptors_Checkbox[i].value); */
    //             };
    //             // console.log(String(Data_Receptors_Checkbox[i].getAttribute("value")));
    //             // console.log(Data_Receptors);
    //         };
    //     };
    // };
    // // console.log(Data_Receptors);

    // // 判斷結果數據的保存模式（數據庫或者 Web Page 網頁）;
    // if (Data_Receptors === "Database" || Data_Receptors === "Database_and_Webpage") {

    //     if (Data_Server_Url === "") {

    //         console.log("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

    //         if (Data_Receptors === "Database") {

    //             // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
    //             chrome.runtime.sendMessage(
    //                 {
    //                     "message": 'userInterface->background:StopCollect',  // 'contentScript->background:Input_Start_First_Level_Page_Number_Error',  // 'Input_Start_First_Level_Page_Number_' + String(StartPageNumber) + '_Error',
    //                     "error": "Input Start Number = { " + String(StartPageNumber) + " } > Input End Number = { " + String(EndPageNumber) + " }.",
    //                     "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
    //                     // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
    //                     "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
    //                     "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
    //                     "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
    //                     "url": String(windowHandle_2.document.location.href),
    //                     "page_number": String(CurrentFirstLevelPageNumber) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
    //                     "Current_First_Level_Page_Number": parseInt(CurrentFirstLevelPageNumber),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
    //                     "Current_Second_Level_Page_Number": parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
    //                     "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
    //                 },  // 發送的具體數據，可以是 JSON 對象;
    //                 // (response_Data) => {
    //                 //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
    //                 //     // console.log(response_Data);
    //                 //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
    //                 //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

    //                 //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
    //                 //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
    //                 //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
    //                 //     //     console.log('background instruction: { Stop collecting }.');
    //                 //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
    //                 //     //     console.log('{ Stand By }.');
    //                 //     // };
    //                 //     // if (response_Data["message"] === "background->userInterface:StandBy") {
    //                 //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
    //                 //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
    //                 //     //     console.log('background instruction: { StandBy }.');
    //                 //     // };
    //                 // }
    //             );

    //             if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
    //                 windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
    //             };
    //             // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

    //             if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
    //                 windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
    //                 windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
    //                 windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
    //                 windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
    //                 windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
    //                 windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
    //                 windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
    //             };
    //             // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
    //             //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
    //             // };
    //             if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
    //                 windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
    //                 windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
    //                 windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
    //                 windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
    //                 windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
    //                 windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
    //                 windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
    //             };

    //             PublicVariableStartORStopCollectDataButtonClickState = true;

    //             if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
    //                 // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
    //                 windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
    //             };

    //             return false;
    //         };

    //         let confirmReteurn = confirm(
    //             "傳入的用於保存結果的數據庫服務器地址參數值錯誤." + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空." + "\n" + "在數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空的情況下，將不會向數據庫服務器發送數據，結果只寫入網頁含有的表格元素中." + "\n" + "單擊 { 確定 } 按鈕將繼續運行，單擊 { 取消 } 按鈕將中止運行.",
    //             "確定",
    //             "取消"
    //         );

    //         if (confirmReteurn === true) {
    //             // 鼠標左鍵單擊 { 確定 } 按鈕，程序不會中止運行，繼續執行後面的語句;
    //         } else if (confirmReteurn === false) {
    //             // 鼠標左鍵單擊 { 取消 } 按鈕，程序中止運行;

    //             // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
    //             chrome.runtime.sendMessage(
    //                 {
    //                     "message": 'userInterface->background:StopCollect',  // 'contentScript->background:Input_Start_First_Level_Page_Number_Error',  // 'Input_Start_First_Level_Page_Number_' + String(StartPageNumber) + '_Error',
    //                     "error": "Input Start Number = { " + String(StartPageNumber) + " } > Input End Number = { " + String(EndPageNumber) + " }.",
    //                     "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
    //                     // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
    //                     "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
    //                     "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
    //                     "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
    //                     "url": String(windowHandle_2.document.location.href),
    //                     "page_number": String(CurrentFirstLevelPageNumber) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
    //                     "Current_First_Level_Page_Number": parseInt(CurrentFirstLevelPageNumber),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
    //                     "Current_Second_Level_Page_Number": parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
    //                     "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
    //                 },  // 發送的具體數據，可以是 JSON 對象;
    //                 // (response_Data) => {
    //                 //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
    //                 //     // console.log(response_Data);
    //                 //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
    //                 //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

    //                 //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
    //                 //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
    //                 //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
    //                 //     //     console.log('background instruction: { Stop collecting }.');
    //                 //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
    //                 //     //     console.log('{ Stand By }.');
    //                 //     // };
    //                 //     // if (response_Data["message"] === "background->userInterface:StandBy") {
    //                 //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
    //                 //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
    //                 //     //     console.log('background instruction: { StandBy }.');
    //                 //     // };
    //                 // }
    //             );

    //             if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
    //                 windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
    //             };
    //             // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

    //             if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
    //                 windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
    //                 windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
    //                 windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
    //                 windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
    //                 windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
    //                 windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
    //                 windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
    //             };
    //             // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
    //             //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
    //             // };
    //             if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
    //                 windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
    //                 windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
    //                 windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
    //                 windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
    //                 windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
    //                 windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
    //             };
    //             if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
    //                 windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
    //             };

    //             PublicVariableStartORStopCollectDataButtonClickState = true;

    //             if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
    //                 // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
    //                 windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
    //             };

    //             return false;

    //         } else {

    //             console.log("參數錯誤 ( Window Confirm Reteurn = " + String(confirmReteurn) + " )，只能取布爾值 true、false 之一.");

    //             // // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
    //             // chrome.runtime.sendMessage(
    //             //     {
    //             //         "message": 'userInterface->background:StopCollect',  // 'contentScript->background:Input_Start_First_Level_Page_Number_Error',  // 'Input_Start_First_Level_Page_Number_' + String(StartPageNumber) + '_Error',
    //             //         "error": "Input Start Number = { " + String(StartPageNumber) + " } > Input End Number = { " + String(EndPageNumber) + " }.",
    //             //         "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
    //             //         // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
    //             //         "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
    //             //         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
    //             //         "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
    //             //         "url": String(windowHandle_2.document.location.href),
    //             //         "page_number": String(CurrentFirstLevelPageNumber) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
    //             //         "Current_First_Level_Page_Number": parseInt(CurrentFirstLevelPageNumber),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
    //             //         "Current_Second_Level_Page_Number": parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
    //             //         "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
    //             //     },  // 發送的具體數據，可以是 JSON 對象;
    //             //     // (response_Data) => {
    //             //     //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
    //             //     //     // console.log(response_Data);
    //             //     //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
    //             //     //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
    
    //             //     //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
    //             //     //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
    //             //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
    //             //     //     //     console.log('background instruction: { Stop collecting }.');
    //             //     //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
    //             //     //     //     console.log('{ Stand By }.');
    //             //     //     // };
    //             //     //     // if (response_Data["message"] === "background->userInterface:StandBy") {
    //             //     //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
    //             //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
    //             //     //     //     console.log('background instruction: { StandBy }.');
    //             //     //     // };
    //             //     // }
    //             // );

    //             // // if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
    //             // //     windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
    //             // // };
    //             // // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

    //             // if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
    //             //     windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
    //             // };
    //             // if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
    //             //     windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
    //             // };
    //             // if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
    //             //     windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
    //             // };
    //             // if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
    //             //     windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
    //             // };
    //             // if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
    //             //     windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
    //             // };
    //             // if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
    //             //     windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
    //             // };
    //             // if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
    //             //     windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
    //             // };
    //             // // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
    //             // //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
    //             // // };
    //             // if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
    //             //     windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
    //             // };
    //             // if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
    //             //     windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
    //             // };
    //             // if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
    //             //     windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
    //             // };
    //             // if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
    //             //     windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
    //             // };
    //             // if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
    //             //     windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
    //             // };
    //             // if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
    //             //     windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
    //             // };
    //             // if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
    //             //     windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
    //             // };

    //             // PublicVariableStartORStopCollectDataButtonClickState = true;

    //             // if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
    //             //     // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
    //             //     windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
    //             // };

    //             // // alert("參數錯誤 ( Window Confirm Reteurn = " + String(confirmReteurn) + " )，只能取布爾值 true、false 之一.");

    //             // return false;
    //         };
    //     };
    // };

    switch(BranchSwitch) {

        /* // 只抓取第一層網頁中的數據; */
        case 1: {

            /* 循環周期時長（單位毫秒）輸入文本框 input 的值; */
            /* // Interval_Of_Circle_Click_value = parseInt(1000);  // 1000 毫秒; */
            /*
            // if (windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput") !== null) {
            //     Interval_Of_Circle_Click_value = parseInt(windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
            // };
            */
            /* // Randomization_Relative_Interval = parseFloat(0.2);  // Interval_Of_Circle_Click_value * 0.2; */
            /*
            // if (windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput") !== null) {
            //     Randomization_Relative_Interval = parseFloat(windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
            // };
            */
            // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
            Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
            /* // 只抓取第一層網頁中數據的參數; */
            let DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
            let DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
            let DelayAfterClickEntrySecondLevelWebButton = parseInt(0);  /* 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
            let DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
            let IntervalOfCircleClickNextPageButton = parseInt(0);  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
            /* // 抓取第一層網頁中的數據，然後自動進入第二層網頁，抓取第二層網頁中的數據，然後再返回第一層網頁，循環往復，的參數; */
            /* let DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
            /* let DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
            /* let DelayAfterClickEntrySecondLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
            /* let DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
            /* let IntervalOfCircleClickNextPageButton = parseInt(0); */  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
            /* IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickEntrySecondLevelWebButton) * ( parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page) - parseInt(StartEntryNumber) + parseInt(1) ) + parseInt(DelayAfterClickFirstLevelWebNextPageButton); */;

            let First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array = new Array();
            let Interval_of_Circle_Click_Next_Page_Sequence_Array = new Array();
            Interval_of_Circle_Click_Next_Page_Sequence_Array[0] = parseInt(11);
            let Cycle_Click_Next_Page_Sequence_Number = parseInt(0);
            let Max_of_Item_in_Current_First_Level_Page_Sequence_Array = new Array();

            /* // 判斷是否需要先導入硬盤中保存的文檔數據; */;
            /*
            if (windowHandle_1.confirm("益之確定始之取消")) {
                let FunctionStoredCollectResultFromHardDiskToMemoryReturnValue = StoredCollectResultFromHardDiskToMemory(
                    windowHandle_1,
                    parseInt(1),
                    "ResultExhibitsDiv",
                    "ResultExhibitsDivTagTable",
                    PublicVariableResultExhibitsWebPage
                );
                if (FunctionStoredCollectResultFromHardDiskToMemoryReturnValue === false) {
                    if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                    };
                    // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                    //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                    // };
                    if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                        windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                        windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                        windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                    };
                    PublicVariableStartORStopCollectDataButtonClickState = true;
                    if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                        // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                    };
                    return false;
                };
            };
            */

            if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 為之. }";
            };

            /* 執行跳頁動作; */;
            let Skip_Delay = parseInt(0);  // 記錄跳頁動作產生的需要延時的長度;
            if (parseInt(StartPageNumber) !== parseInt(CurrentPageNumber)) {

                level = 'First_Level_Page';  // 'Second_Level_Page', 'First_and_Second_Level_Page';

                if (Skip_First_Level_Page_Textbox_XPath.length > 0 && Skip_First_Level_Page_Button_XPath.length > 0) {

                    // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                    chrome.runtime.sendMessage(
                        {
                            "message": 'userInterface->background:Skip_Page',
                            "error": "",
                            "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                            // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                            "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                            "url": String(windowHandle_2.document.location.href),
                            // "page_number": String(CurrentPageNumber) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                            "Current_First_Level_Page_Number": parseInt(CurrentPageNumber),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                            "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                            "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                            "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                            "Number_of_Skipping": parseInt(StartPageNumber),
                            "Configuration_Parameters": {
                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                            },
                            "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                        },  // 發送的具體數據，可以是 JSON 對象;
                        // (response_Data) => {
                        //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                        //     // console.log(response_Data);
                        //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                        //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                        //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                        //     //     console.log('background instruction: { Stop collecting }.');
                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //     //     console.log('{ Stand By }.');
                        //     // };

                        //     if (response_Data["message"] === "background->userInterface:Skip_Error") {
                        //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                        //         // console.log(response_Data["error"]);
                        //         // console.log(response_Data);
                        //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(StartPageNumber) + " > 頁失敗. }";
                        //         };
                        //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        //         };
                        //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                        //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        //         // };
                        //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                        //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                        //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                        //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                        //         };
                        //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                        //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        //         };
                        //         alert('跳至第 [ ' + String(StartPageNumber) + ' ] 頁失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Skip_Error' + '\n' + response_Data["error"]);
                        //         return false;
                        //     };

                        //     if (response_Data["message"] === "background->userInterface:Skipping") {
                        //         console.log('injected script instruction: { Skipping to [ ' + String(StartPageNumber) + ' ] }.');
                        //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(StartPageNumber) + " > 頁. }";
                        //         };
                        //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                        //         // console.log(response_Data["error"]);
                        //         // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //         // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + response_Data["error"]);
                        //         // console.log(response_Data);
                        //         // return false;
                        //     };
                        // }
                    );

                    Skip_Delay = parseInt(DelayAfterClickFirstLevelWebSkipPageButton);
                    if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(StartPageNumber) + " > 頁. }";
                    };

                } else {

                    if (Next_First_Level_Page_Button_XPath.length > 0) {

                        // Next_JSON["Next_Button_Element"][0].click();
                        if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(CurrentPageNumber) + parseInt(1)) + " > 頁. }";
                        };

                        let Next_Page_SetTimeout_Array = new Array();
                        for (let h = parseInt(0); h < ( parseInt(StartPageNumber) - parseInt(CurrentPageNumber) - parseInt(1) ); h++) {

                            (function(Skip_Sequence_Number) {

                                Next_Page_SetTimeout_Array[Skip_Sequence_Number] = windowHandle_1.setTimeout(

                                    function() {

                                        /* 循環周期時長（單位毫秒）輸入文本框 input 的值; */
                                        /* // Interval_Of_Circle_Click_value = parseInt(1000);  // 1000 毫秒; */
                                        if (windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput") !== null) {
                                            Interval_Of_Circle_Click_value = parseInt(windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
                                        };
                                        /* // Randomization_Relative_Interval = parseFloat(0.2);  // Interval_Of_Circle_Click_value * 0.2; */
                                        if (windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput") !== null) {
                                            Randomization_Relative_Interval = parseFloat(windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
                                        };
                                        // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                                        Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                                        /* // 只抓取第一層網頁中數據的參數; */
                                        DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
                                        DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
                                        DelayAfterClickEntrySecondLevelWebButton = parseInt(0);  /* 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
                                        DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
                                        IntervalOfCircleClickNextPageButton = parseInt(0);  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
                                        /* // 抓取第一層網頁中的數據，然後自動進入第二層網頁，抓取第二層網頁中的數據，然後再返回第一層網頁，循環往復，的參數; */
                                        /* DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
                                        /* DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
                                        /* DelayAfterClickEntrySecondLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
                                        /* DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
                                        /* IntervalOfCircleClickNextPageButton = parseInt(0); */  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
                                        /* IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickEntrySecondLevelWebButton) * ( parseInt(MaxNumberOfItemInThisFirstLevelWebPage) - parseInt(StartEntryNumber) + parseInt(1) ) + parseInt(DelayAfterClickFirstLevelWebNextPageButton); */;

                                        // 實時更新最大頁碼信息;
                                        /* 獲取最大可采集的頁面數目序號，和當前所在網頁的序號; */;
                                        MaximumPageNumber = parseInt(Maximum_First_Level_Page_Number);
                                        // 刷新當前第一層級網頁序號;
                                        Current_First_Level_Page_Number = parseInt(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number));
                                        // CurrentPageNumber = parseInt(parseInt(CurrentPageNumber) + parseInt(1));  // parseInt(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number));
                                        /* 獲取當前所處的第一層級網頁中，包含的進入第二層級網頁的入口，一共有多少個; */;
                                        Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                                        // 刷新當前第一層級網頁中正處在的第二層級網頁的序號;
                                        // Current_Second_Level_Page_Number = parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page);

                                        level = 'First_Level_Page';  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page';

                                        if (PublicVariableStartORStopCollectDataButtonClickState) {

                                            // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                            chrome.runtime.sendMessage(
                                                {
                                                    "message": 'userInterface->background:StopCollect',
                                                    "error": 'Execution process interrupted ( PublicVariableStartORStopCollectDataButtonClickState === true ).',
                                                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    "url": String(windowHandle_2.document.location.href),
                                                    "page_number": String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + '--' + String(0),  // String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    "Current_First_Level_Page_Number": parseInt(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                    // "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                    // "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                },  // 發送的具體數據，可以是 JSON 對象;
                                                // (response_Data) => {
                                                //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                //     // console.log(response_Data);
                                                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                                //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //     //     console.log('background instruction: { Stop collecting }.');
                                                //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                //     //     console.log('{ Stand By }.');
                                                //     // };

                                                //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //     //     console.log('background instruction: { StandBy }.');
                                                //     // };
                                                // }
                                            );

                                            for (let g = parseInt(Skip_Sequence_Number); g < ( parseInt(StartPageNumber) - parseInt(CurrentPageNumber) - parseInt(1) ); g++) {
                                                windowHandle_1.clearTimeout(Next_Page_SetTimeout_Array[g]);
                                            };
                                            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;
                                            windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                            if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + " > 頁, 止. }";
                                            };

                                            if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            };
                                            // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            // };
                                            if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                            };

                                            return "StopCollect";
                                        };

                                        // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                        chrome.runtime.sendMessage(
                                            {
                                                "message": 'userInterface->background:Step_Further_Next_Page',
                                                "error": "",
                                                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                "url": String(windowHandle_2.document.location.href),
                                                // "page_number": String(CurrentPageNumber) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                "Current_First_Level_Page_Number": parseInt(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                "Configuration_Parameters": {
                                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                                    "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                                    "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                                    "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                                    "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                                    "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                                    "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                                    "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                                    "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                                    "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                                    "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                                    "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                                    "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                                    "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                                    "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                                    "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                                                },
                                                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                            },  // 發送的具體數據，可以是 JSON 對象;
                                            // (response_Data) => {
                                            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                            //     // console.log(response_Data);
                                            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //     //     console.log('background instruction: { Stop collecting }.');
                                            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //     //     console.log('{ Stand By }.');
                                            //     // };

                                            //     if (response_Data["message"] === "background->userInterface:Next_Page_Error") {
                                            //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                            //         // console.log(response_Data["error"]);
                                            //         // console.log(response_Data);

                                            //         for (let g = parseInt(Skip_Sequence_Number); g < ( parseInt(StartPageNumber) - parseInt(CurrentPageNumber) - parseInt(1) ); g++) {
                                            //             windowHandle_1.clearTimeout(Next_Page_SetTimeout_Array[g]);
                                            //         };
                                            //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;

                                            //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                            //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(StartPageNumber) + " > 頁失敗. }";
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                            //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                            //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                            //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                            //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                            //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                            //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            //         };
                                            //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            //         // };
                                            //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                            //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                            //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                            //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                            //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                            //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                            //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                            //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            //         };
                                            //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                            //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                            //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                            //         };
                                            //         alert('從當前第' + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + ' 個一級網頁步進至第 ' + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number) + parseInt(1)) + ' 個一級頁面失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Skip_Error' + '\n' + response_Data["error"]);
                                            //         return false;
                                            //     };

                                            //     if (response_Data["message"] === "background->userInterface:Step_Furthering_Next_Page") {
                                            //         console.log('injected script instruction: { Step_Furthering_Next_Page [ ' + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number) + parseInt(1)) + ' ] }.');
                                            //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + " > 頁. }";
                                            //         };
                                            //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                            //         // console.log(response_Data["error"]);
                                            //         // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //         // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + response_Data["error"]);
                                            //         // console.log(response_Data);
                                            //         // return false;
                                            //     };
                                            // }
                                        );
                                    },

                                    ( parseInt(Skip_Sequence_Number) * parseInt(DelayAfterClickFirstLevelWebSkipPageButton) )  /* 循環點擊下一頁按鈕，直至目標起始頁，以達到跳頁的預期，每次點擊下一頁按鈕的延遲時間，單位（毫秒），1000 毫秒 === 1 秒; */
                                );

                            })(h);
                        };

                        Skip_Delay = ( parseInt(StartPageNumber) - parseInt(CurrentPageNumber) ) * parseInt(DelayAfterClickFirstLevelWebSkipPageButton);
                        CurrentPageNumber = parseInt(Current_First_Level_Page_Number);

                    } else {

                        // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                        chrome.runtime.sendMessage(
                            {
                                "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentPageNumber) + parseInt(1)) + '_Page_Error',
                                "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                "url": String(windowHandle_2.document.location.href),
                                "page_number": String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                "Current_First_Level_Page_Number": parseInt(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                            },  // 發送的具體數據，可以是 JSON 對象;
                            // (response_Data) => {
                            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                            //     // console.log(response_Data);
                            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('background instruction: { Stop collecting }.');
                            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //     //     console.log('{ Stand By }.');
                            //     // };

                            //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('Backing previous page.');
                            //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                            //     // };

                            //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('background instruction: { StandBy }.');
                            //     // };
                            // }
                        );

                        if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(CurrentPageNumber) + parseInt(1)) + " > 頁失敗. }";
                        };

                        if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                            windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                            windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                            windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                            windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        };
                        // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                        //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        // };
                        if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                            windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                            windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                            windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                            windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                            windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                            windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                            windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                        };

                        PublicVariableStartORStopCollectDataButtonClickState = true;

                        if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                            // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        };

                        alert('從當前第' + String(CurrentPageNumber) + ' 個一級網頁步進至第 ' + String(parseInt(CurrentPageNumber) + parseInt(1)) + ' 個一級頁面失敗.' + "\n" + "Next_First_Level_Page_Button_XPath.length === 0" + "\n" + "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.");

                        return false;
                    };
                };
            };

            /* 執行跳頁的延遲動作的 setTimeout */;
            let Skip_setTimeout = windowHandle_1.setTimeout(

                function() {

                    /* 循環周期時長（單位毫秒）輸入文本框 input 的值; */
                    /* // Interval_Of_Circle_Click_value = parseInt(1000);  // 1000 毫秒; */
                    if (windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput") !== null) {
                        Interval_Of_Circle_Click_value = parseInt(windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
                    };
                    /* // Randomization_Relative_Interval = parseFloat(0.2);  // Interval_Of_Circle_Click_value * 0.2; */
                    if (windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput") !== null) {
                        Randomization_Relative_Interval = parseFloat(windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
                    };
                    // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                    Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                    /* // 只抓取第一層網頁中數據的參數; */
                    DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
                    DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
                    DelayAfterClickEntrySecondLevelWebButton = parseInt(0);  /* 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
                    DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
                    IntervalOfCircleClickNextPageButton = parseInt(0);  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
                    /* // 抓取第一層網頁中的數據，然後自動進入第二層網頁，抓取第二層網頁中的數據，然後再返回第一層網頁，循環往復，的參數; */
                    /* DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
                    /* DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
                    /* DelayAfterClickEntrySecondLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
                    /* DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
                    /* IntervalOfCircleClickNextPageButton = parseInt(0); */  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
                    /* IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickEntrySecondLevelWebButton) * ( parseInt(MaxNumberOfItemInThisFirstLevelWebPage) - parseInt(StartEntryNumber) + parseInt(1) ) + parseInt(DelayAfterClickFirstLevelWebNextPageButton); */;

                    // IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickFirstLevelWebNextPageButton) * (parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1)) + parseInt(Skip_Delay);
                    // Interval_of_Circle_Click_Next_Page_Sequence_Array[ ( parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ] = IntervalOfCircleClickNextPageButton;
                    Interval_of_Circle_Click_Next_Page_Sequence_Array[0] = parseInt(Skip_Delay);
                    // Interval_of_Circle_Click_Next_Page_Sequence_Array[ ( parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ] = parseInt(DelayAfterClickFirstLevelWebNextPageButton) * (parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1)) + parseInt(Skip_Delay);
                    // if (!windowHandle_1.console) { windowHandle_1.console = { log:function(){} }; } else { windowHandle_1.console.log( String(StartPageNumber) + " . " + String(StartEntryNumber) + "  ～  " + String(EndEntryNumber) ); };

                    // 實時更新最大頁碼信息;
                    EndEntryNumber = parseInt(Maximum_Second_Level_Page_Number);
                    /* 獲取最大可采集的頁面數目序號，和當前所在網頁的序號; */;
                    MaximumPageNumber = parseInt(Maximum_First_Level_Page_Number);
                    // 刷新當前第一層級網頁序號;
                    Current_First_Level_Page_Number = parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number));
                    CurrentPageNumber = parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number));
                    /* 獲取當前所處的第一層級網頁中，包含的進入第二層級網頁的入口，一共有多少個; */;
                    Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                    // 刷新當前第一層級網頁中正處在的第二層級網頁的序號;
                    Current_Second_Level_Page_Number = parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page);

                    level = 'First_Level_Page';  // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';  // 當前打開目標數據源網頁的層級類型;

                    if (PublicVariableStartORStopCollectDataButtonClickState) {

                        // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                        chrome.runtime.sendMessage(
                            {
                                "message": 'userInterface->background:StopCollect',
                                "error": 'Execution process interrupted ( PublicVariableStartORStopCollectDataButtonClickState === true ).',
                                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                "url": String(windowHandle_2.document.location.href),
                                "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(0),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                // "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                // "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                            },  // 發送的具體數據，可以是 JSON 對象;
                            // (response_Data) => {
                            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                            //     // console.log(response_Data);
                            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('background instruction: { Stop collecting }.');
                            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //     //     console.log('{ Stand By }.');
                            //     // };

                            //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('background instruction: { StandBy }.');
                            //     // };
                            // }
                        );
        
                        windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
        
                        if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < 0 > 頁 < 0 > 條成, 駐. }";
                        };
        
                        if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                            windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                            windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                            windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                            windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        };
                        // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                        //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        // };
                        if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                            windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                            windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                            windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                            windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                            windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                            windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                            windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                        };
        
                        PublicVariableStartORStopCollectDataButtonClickState = true;
        
                        if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                            // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        };
        
                        return "StopCollect";
                    };

                    /* (function(j){})(j) 表示定義了一個有一個形參（第一個 j ）的空的匿名函數，然後以第二個 j 為實參進行調用; */;
                    for (let i = 0; i <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); i++) {

                        (
                            function(CycleClickNextPageSequenceNumber) {

                                First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[CycleClickNextPageSequenceNumber] = setTimeout(

                                    // function FirstLevelWebDelayExecutionReadResultFunction() {
                                    function () {

                                        Current_First_Level_Page_Number = parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber));
                                        // Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                                        Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page);

                                        if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = "1";  // String(parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1));
                                        };

                                        /* 循環周期時長（單位毫秒）輸入文本框 input 的值; */
                                        /* // Interval_Of_Circle_Click_value = parseInt(1000);  // 1000 毫秒; */
                                        if (windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput") !== null) {
                                            Interval_Of_Circle_Click_value = parseInt(windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
                                        };
                                        /* // Randomization_Relative_Interval = parseFloat(0.2);  // Interval_Of_Circle_Click_value * 0.2; */
                                        if (windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput") !== null) {
                                            Randomization_Relative_Interval = parseFloat(windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
                                        };
                                        // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                                        Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                                        /* // 只抓取第一層網頁中數據的參數; */
                                        DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
                                        DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
                                        DelayAfterClickEntrySecondLevelWebButton = parseInt(0);  /* 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
                                        DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
                                        IntervalOfCircleClickNextPageButton = parseInt(0);  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
                                        /* // 抓取第一層網頁中的數據，然後自動進入第二層網頁，抓取第二層網頁中的數據，然後再返回第一層網頁，循環往復，的參數; */
                                        /* let DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
                                        /* let DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
                                        /* let DelayAfterClickEntrySecondLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
                                        /* let DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
                                        /* let IntervalOfCircleClickNextPageButton = parseInt(0); */  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
                                        /* IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickEntrySecondLevelWebButton) * ( parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page) - parseInt(StartEntryNumber) + parseInt(1) ) + parseInt(DelayAfterClickFirstLevelWebNextPageButton); */;

                                        // IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickFirstLevelWebNextPageButton) * (parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + parseInt(Skip_Delay);
                                        // Interval_of_Circle_Click_Next_Page_Sequence_Array[ ( parseInt(CycleClickNextPageSequenceNumber) + parseInt(1) ) ] = IntervalOfCircleClickNextPageButton;
                                        Interval_of_Circle_Click_Next_Page_Sequence_Array[ ( parseInt(CycleClickNextPageSequenceNumber) + parseInt(1) ) ] = parseInt(DelayAfterClickFirstLevelWebNextPageButton) * (parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + parseInt(Skip_Delay);
                                        // if (!windowHandle_1.console) { windowHandle_1.console = { log:function(){} }; } else { windowHandle_1.console.log( String(StartPageNumber) + " . " + String(StartEntryNumber) + "  ～  " + String(EndEntryNumber) ); };

                                        level = 'First_Level_Page';  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page';

                                        if (PublicVariableStartORStopCollectDataButtonClickState) {

                                            // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                            chrome.runtime.sendMessage(
                                                {
                                                    "message": 'userInterface->background:StopCollect',
                                                    "error": 'Execution process interrupted ( PublicVariableStartORStopCollectDataButtonClickState === true ).',
                                                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    "url": String(windowHandle_2.document.location.href),
                                                    "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(0),  // String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                                                    // "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                    // "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                },  // 發送的具體數據，可以是 JSON 對象;
                                                // (response_Data) => {
                                                //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                //     // console.log(response_Data);
                                                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                                //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //     //     console.log('background instruction: { Stop collecting }.');
                                                //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                //     //     console.log('{ Stand By }.');
                                                //     // };

                                                //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //     //     console.log('background instruction: { StandBy }.');
                                                //     // };
                                                // }
                                            );

                                            for (let g = CycleClickNextPageSequenceNumber; g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                                windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                            };
                                            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;

                                            if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + " > 頁成，駐. }";
                                            };

                                            if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            };
                                            // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            // };
                                            if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            };

                                            // PublicVariableStartORStopCollectDataButtonClickState = true;
                                            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                                windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                            };

                                            return "StopCollect";
                                        };

                                        /* 讀取第一層網頁中的數據; */;
                                        // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                        // TemporaryFirstLevelWebCollectResultArray = new Array();
                                        chrome.runtime.sendMessage(
                                            {
                                                "message": 'userInterface->background:Ask_for_Data',
                                                "error": "",
                                                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                "url": String(windowHandle_2.document.location.href),
                                                // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(0),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                                                "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                "Maximum_Second_Level_Page_Number": parseInt(0),  // parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                "Configuration_Parameters": {
                                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                                    "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                                    "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                                    "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                                    "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                                    "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                                    "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                                    "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                                    "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                                    "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                                    "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                                    "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                                    "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                                    "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                                    "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                                    "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                                                },
                                                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                            },  // 發送的具體數據，可以是 JSON 對象;
                                            // (response_Data) => {
                                            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                            //     // console.log(response_Data);
                                            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //     //     console.log('background instruction: { Stop collecting }.');
                                            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //     //     console.log('{ Stand By }.');
                                            //     // };

                                            //     // if (response_Data["message"] === "background->userInterface:CollectEnd") {
                                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //     //     console.log('background instruction: { Stop collecting }.');
                                            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //     //     console.log('{ Stand By }.');
                                            //     // };

                                            //     if (response_Data["message"] === "background->userInterface:Obtain_First_Level_Page_Data_Error") {
                                            //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                            //         // console.log(response_Data["error"]);
                                            //         // console.log(response_Data);

                                            //         for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                            //             windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                            //         };
                                            //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;
                                            //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                            //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                            //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                            //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                            //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                            //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                            //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                            //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            //         };
                                            //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            //         // };
                                            //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                            //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                            //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                            //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                            //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                            //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                            //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                            //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            //         };

                                            //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;

                                            //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                            //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                            //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                            //         };

                                            //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取一級頁面 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + "--0 > 中的數據失敗. }";
                                            //         };

                                            //         // TemporaryFirstLevelWebCollectResultArray = [""];  // response_Data["data"];
                                            //         // JSON.parse(response_Data["data"], function (key, value) {});
                                            //         // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                            //         alert('讀取當前第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁中的數據失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Obtain_First_Level_Page_Data_Error' + '\n' + response_Data["error"]);

                                            //         return false;
                                            //     };

                                            //     if (response_Data["message"] === "background->userInterface:Real_Time_Data") {

                                            //         // 實時更新最大頁碼信息;
                                            //         // EndEntryNumber = parseInt(Maximum_Second_Level_Page_Number);
                                            //         /* 獲取最大可采集的頁面數目序號，和當前所在網頁的序號; */;
                                            //         MaximumPageNumber = parseInt(Maximum_First_Level_Page_Number);
                                            //         // 刷新當前第一層級網頁序號;
                                            //         CurrentFirstLevelPageNumber = parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber));
                                            //         /* 獲取當前所處的第一層級網頁中，包含的進入第二層級網頁的入口，一共有多少個; */;
                                            //         // Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                                            //         // 刷新當前第一層級網頁中正處在的第二層級網頁的序號;
                                            //         // NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page);

                                            //         // 更新目標數據源網頁返回的信息;
                                            //         if (response_Data.hasOwnProperty("Current_First_Level_Page_Number") && parseInt(response_Data["Current_First_Level_Page_Number"]) !== parseInt(0)) {
                                            //             Current_First_Level_Page_Number = parseInt(response_Data["Current_First_Level_Page_Number"]);
                                            //             CurrentFirstLevelPageNumber = parseInt(response_Data["Current_First_Level_Page_Number"]);
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Maximum_First_Level_Page_Number") && parseInt(response_Data["Maximum_First_Level_Page_Number"]) !== parseInt(0)) {
                                            //             Maximum_First_Level_Page_Number = parseInt(response_Data["Maximum_First_Level_Page_Number"]);
                                            //             MaximumPageNumber = parseInt(response_Data["Maximum_First_Level_Page_Number"]);
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(response_Data["Current_Second_Level_Page_Number"]) !== parseInt(0)) {
                                            //             Current_Second_Level_Page_Number = parseInt(response_Data["Current_Second_Level_Page_Number"]);
                                            //             NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(response_Data["Current_Second_Level_Page_Number"]);
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Maximum_Second_Level_Page_Number") && parseInt(response_Data["Maximum_Second_Level_Page_Number"]) !== parseInt(0)) {
                                            //             Maximum_Second_Level_Page_Number = parseInt(response_Data["Maximum_Second_Level_Page_Number"]);
                                            //             Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(response_Data["Maximum_Second_Level_Page_Number"]);
                                            //             EndEntryNumber = parseInt(response_Data["Maximum_Second_Level_Page_Number"]);
                                            //         };
                                            //         if (response_Data.hasOwnProperty("ContainDataWebPageURL") && response_Data["ContainDataWebPageURL"] !== "") {
                                            //             ContainDataWebPageURL = String(response_Data["ContainDataWebPageURL"]);  // String(response_Data["url"]);
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Open_Contain_Data_Web_Page_Name") && response_Data["Open_Contain_Data_Web_Page_Name"] !== "") {
                                            //             Open_Contain_Data_Web_Page_Name = String(response_Data["Open_Contain_Data_Web_Page_Name"]);
                                            //         };
                                            //         if (response_Data.hasOwnProperty("level") && response_Data["level"] !== "") {
                                            //             level = String(response_Data["level"]);
                                            //         };
                                            //         if (response_Data.hasOwnProperty("page_number") && response_Data["page_number"] !== "") {
                                            //             page_number = String(response_Data["page_number"]);
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Total_Data_in_Current_First_Level_Page")) {
                                            //             Total_Data_in_Current_First_Level_Page = parseInt(response_Data["Total_Data_in_Current_First_Level_Page"]);
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Total_Entry_from_First_Level_Page_to_Second_Level_Page")) {
                                            //             Total_Entry_from_First_Level_Page_to_Second_Level_Page = parseInt(response_Data["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]);
                                            //         };
                                            //         if (response_Data.hasOwnProperty("XPath_from_First_Level_Page_to_Second_Level_Page")) {
                                            //             XPath_from_First_Level_Page_to_Second_Level_Page = response_Data["XPath_from_First_Level_Page_to_Second_Level_Page"];
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Total_Data_in_Current_Second_Level_Page")) {
                                            //             Total_Data_in_Current_Second_Level_Page = parseInt(response_Data["Total_Data_in_Current_Second_Level_Page"]);
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Total_Entry_from_Second_Level_Page_to_First_Level_Page")) {
                                            //             Total_Entry_from_Second_Level_Page_to_First_Level_Page = parseInt(response_Data["Total_Entry_from_Second_Level_Page_to_First_Level_Page"]);
                                            //         };
                                            //         if (response_Data.hasOwnProperty("XPath_from_Second_Level_Page_to_First_Level_Page")) {
                                            //             XPath_from_Second_Level_Page_to_First_Level_Page = response_Data["XPath_from_Second_Level_Page_to_First_Level_Page"];
                                            //         };
                                            //         // if (response_Data.hasOwnProperty("Data_in_Current_First_Level_Page")) {
                                            //         //     Data_in_Current_First_Level_Page = response_Data["Data_in_Current_First_Level_Page"];
                                            //         // };
                                            //         // if (response_Data.hasOwnProperty("Data_in_Current_Second_Level_Page")) {
                                            //         //     Data_in_Current_Second_Level_Page = response_Data["Data_in_Current_Second_Level_Page"];
                                            //         // };
                                            //         if (response_Data.hasOwnProperty("Query_Key_Word_First_Level_Page_Textbox_XPath")) {
                                            //             Query_Key_Word_First_Level_Page_Textbox_XPath = response_Data["Query_Key_Word_First_Level_Page_Textbox_XPath"];
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Query_Key_Word_First_Level_Page_Button_XPath")) {
                                            //             Query_Key_Word_First_Level_Page_Button_XPath = response_Data["Query_Key_Word_First_Level_Page_Button_XPath"];
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Skip_First_Level_Page_Textbox_XPath")) {
                                            //             Skip_First_Level_Page_Textbox_XPath = response_Data["Skip_First_Level_Page_Textbox_XPath"];
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Skip_First_Level_Page_Button_XPath")) {
                                            //             Skip_First_Level_Page_Button_XPath = response_Data["Skip_First_Level_Page_Button_XPath"];
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Next_First_Level_Page_Button_XPath")) {
                                            //             Next_First_Level_Page_Button_XPath = response_Data["Next_First_Level_Page_Button_XPath"];
                                            //         };
                                            //         if (response_Data.hasOwnProperty("Back_First_Level_Page_Button_XPath")) {
                                            //             Back_First_Level_Page_Button_XPath = response_Data["Back_First_Level_Page_Button_XPath"];
                                            //         };

                                            //         if (response_Data["level"] === "First_Level_Page") {
                                            //             // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';
                                            //             // console.log(response_Data["message"]);
                                            //             // console.log(response_Data["error"]);
                                            //             // console.log(response_Data["url"]);
                                            //             // console.log(response_Data["level"]);
                                            //             // console.log(response_Data["Current_First_Level_Page_Number"]);
                                            //             // console.log(response_Data["Current_Second_Level_Page_Number"]);
                                            //             // console.log(response_Data["page_number"]);
                                            //             // console.log(response_Data["Total_Data_in_Current_First_Level_Page"]);
                                            //             // // console.log(response_Data["Total_Data_in_Current_Second_Level_Page"]);
                                            //             // console.log(response_Data["data"]);

                                            //             console.log('injected script instruction: { Obtain_First_Level_Page_Data [ ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--0 ] ' + String(response_Data["Total_Data_in_Current_First_Level_Page"]) + ' }.');
                                            //             if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //                 // windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取第 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + " > 個一級頁面中的數據. }";
                                            //                 windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + "--0--" + String(response_Data["Total_Data_in_Current_First_Level_Page"]) + " > }";
                                            //             };

                                            //             // let TemporaryPublicVariableCollectResultStoredStringArray = new Array();
                                            //             TemporaryFirstLevelWebCollectResultArray = response_Data["data"];
                                            //             // JSON.parse(response_Data["data"], function (key, value) {});
                                            //             // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                            //             for (let j in TemporaryFirstLevelWebCollectResultArray) {
                                            //                 /* if (!window.console) { window.console = {log:function(){}}; } else { window.console.log(TemporaryPublicVariableCollectResultStoredStringArray.length);}; */;
                                            //                 /* alert(TemporaryPublicVariableCollectResultStoredStringArray.length); */;
                                            //                 // TemporaryPublicVariableCollectResultStoredStringArray.push([TemporaryFirstLevelWebCollectResultArray[j]]);  /* Array.push([item1 [item2 [. . . [itemN ]]]]) 將一個或多個新元素追加到數組結尾; */;

                                            //                 /* 下面代碼將抓取到的結果追加保存到公共變量數組 PublicVariableCollectResultStoredStringArray 中; */;
                                            //                 PublicVariableCollectResultStoredStringArray.push([TemporaryFirstLevelWebCollectResultArray[j]]);

                                            //                 if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            //                     windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(j);
                                            //                 };

                                            //                 /* 下面代碼將抓取到的結果展示在網頁元素 DIV 層 ResultExhibitsDiv 中; */;
                                            //                 if ((ResultExhibitsDivID !== "" || ResultExhibitsDivTagTableID !== "" ) && (windowHandle_1.document.getElementById(ResultExhibitsDivID) !== null || windowHandle_1.document.getElementById(ResultExhibitsDivTagTableID) !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                                            //                     let RetrievalResultPageNumber = parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber));
                                            //                     let RetrievalResultEntryNumber = parseInt(0);  // parseInt(parseInt(j) + parseInt(1));
                                            //                     let RetrievalResultId = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                                            //                     DisplayData(
                                            //                         windowHandle_1,
                                            //                         Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                            //                         [TemporaryFirstLevelWebCollectResultArray[j]],  // TemporaryPublicVariableCollectResultStoredStringArray,
                                            //                         ResultExhibitsDivID,
                                            //                         ResultExhibitsDivTagTableID,
                                            //                         RetrievalResultId
                                            //                     );
                                            //                 };

                                            //                 /* 下面代碼將抓取到的結果展示在新打開的網頁 window 窗口 PublicVariableResultExhibitsWebPage 中; */;
                                            //                 if (PublicVariableResultExhibitsWebPage.name !== "") {
                                            //                     if ((ResultExhibitsDivID !== "" || ResultExhibitsDivTagTableID !== "" ) && (PublicVariableResultExhibitsWebPage.document.getElementById(ResultExhibitsDivID) !== null || PublicVariableResultExhibitsWebPage.document.getElementById(ResultExhibitsDivTagTableID) !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                                            //                         let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber));
                                            //                         let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(0);  // parseInt(parseInt(j) + parseInt(1));
                                            //                         let PublicVariableResultExhibitsWebPageRetrievalResultId = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                                            //                         DisplayData(
                                            //                             PublicVariableResultExhibitsWebPage,
                                            //                             Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                            //                             [TemporaryFirstLevelWebCollectResultArray[j]],  // TemporaryPublicVariableCollectResultStoredStringArray,
                                            //                             ResultExhibitsDivID,
                                            //                             ResultExhibitsDivTagTableID,
                                            //                             PublicVariableResultExhibitsWebPageRetrievalResultId
                                            //                         );
                                            //                         PublicVariableResultExhibitsWebPage.document.getElementById(PublicVariableResultExhibitsWebPageRetrievalResultId).scrollIntoView(false);  /* 網頁滾動條滑到 RetrievalResultId 元素的位置; */;
                                            //                     };
                                            //                 };
                                            //             };
                                            //             // if (!windowHandle_1.console) { windowHandle_1.console = { log:function(){}}; } else { windowHandle_1.console.log(TemporaryPublicVariableCollectResultStoredStringArray); };

                                            //             // if (parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) < parseInt(EndPageNumber)) {
                                            //             //     if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + " > 頁成. }";
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1));
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                                            //             //     };
                                            //             //     if (Next_First_Level_Page_Button_XPath.length > 0) {
                                            //             //         Cycle_Click_Next_Page_Sequence_Number = parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1);
                                            //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁. }";
                                            //             //         };
                                            //             //         // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                            //             //         chrome.runtime.sendMessage(
                                            //             //             {
                                            //             //                 "message": 'userInterface->background:Step_Further_Next_Page',
                                            //             //                 "error": "",
                                            //             //                 "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            //             //                 // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            //             //                 "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            //             //                 "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            //             //                 "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            //             //                 "url": String(windowHandle_2.document.location.href),
                                            //             //                 // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            //             //                 "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                                            //             //                 "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                            //             //                 "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            //             //                 "Maximum_Second_Level_Page_Number": parseInt(0),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            //             //                 "Configuration_Parameters": {
                                            //             //                     "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            //             //                     "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            //             //                     "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                            //             //                     "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                            //             //                     "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                            //             //                     "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                            //             //                     "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                            //             //                     "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                            //             //                     "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                            //             //                     "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                            //             //                     "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                            //             //                     "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                            //             //                     "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                            //             //                     "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                            //             //                     "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                            //             //                     "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                            //             //                     "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                            //             //                     "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                                            //             //                 },
                                            //             //                 "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                            //             //             },  // 發送的具體數據，可以是 JSON 對象;
                                            //             //             // (response_Data) => {
                                            //             //             //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                            //             //             //     // console.log(response_Data);
                                            //             //             //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                            //             //             //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                            //             //             //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                            //             //             //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //             //             //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //             //             //     //     console.log('background instruction: { Stop collecting }.');
                                            //             //             //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //             //             //     //     console.log('{ Stand By }.');
                                            //             //             //     // };
                                            //             //             //     if (response_Data["message"] === "background->userInterface:Next_Page_Error") {
                                            //             //             //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                            //             //             //         // console.log(response_Data["error"]);
                                            //             //             //         // console.log(response_Data);
                                            //             //             //         // 清除跳頁之後的延時操作;
                                            //             //             //         for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                            //             //             //             windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                            //             //             //         };
                                            //             //             //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                                            //             //             //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
                                            //             //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁失敗. }";
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //             //             //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            //             //             //         // };
                                            //             //             //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            //             //             //         };
                                            //             //             //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //             //             //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                            //             //             //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                            //             //             //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                            //             //             //         };
                                            //             //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁失敗. }";
                                            //             //             //         };
                                            //             //             //         alert('從當前第' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁步進至第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' 個一級頁面失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Next_Page_Error' + '\n' + response_Data["error"]);
                                            //             //             //         return false;
                                            //             //             //     };
                                            //             //             //     if (response_Data["message"] === "background->userInterface:Step_Furthering_Next_Page") {
                                            //             //             //         console.log('injected script instruction: { Step_Furthering_Next_Page [ ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' ] }.');
                                            //             //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁. }";
                                            //             //             //         };
                                            //             //             //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                            //             //             //         // console.log(response_Data["error"]);
                                            //             //             //         // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //             //             //         // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + response_Data["error"]);
                                            //             //             //         // console.log(response_Data);
                                            //             //             //         // return false;
                                            //             //             //     };
                                            //             //             // }
                                            //             //         );
                                            //             //     } else {
                                            //             //         // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                            //             //         chrome.runtime.sendMessage(
                                            //             //             {
                                            //             //                 "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                            //             //                 "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                            //             //                 "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            //             //                 // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            //             //                 "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            //             //                 "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            //             //                 "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            //             //                 "url": String(windowHandle_2.document.location.href),
                                            //             //                 // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            //             //                 "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                                            //             //                 "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                            //             //                 "Current_Second_Level_Page_Number": parseInt(0), // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            //             //                 "Maximum_Second_Level_Page_Number": parseInt(0), // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            //             //                 "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                            //             //             },  // 發送的具體數據，可以是 JSON 對象;
                                            //             //             // (response_Data) => {
                                            //             //             //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                            //             //             //     // console.log(response_Data);
                                            //             //             //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                            //             //             //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                            //             //             //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                            //             //             //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //             //             //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //             //             //     //     console.log('background instruction: { Stop collecting }.');
                                            //             //             //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //             //             //     //     console.log('{ Stand By }.');
                                            //             //             //     // };
                                            //             //             //     // if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                            //             //             //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //             //             //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //             //             //     //     console.log('Backing previous page.');
                                            //             //             //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                            //             //             //     // };
                                            //             //             //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                            //             //             //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //             //             //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //             //             //     //     console.log('background instruction: { StandBy }.');
                                            //             //             //     // };
                                            //             //             // }
                                            //             //         );
                                            //             //         for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                            //             //             windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                            //             //         };
                                            //             //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;
                                            //             //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                            //             //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                            //             //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                            //             //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            //             //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                            //             //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                            //             //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                            //             //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                            //             //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            //             //         };
                                            //             //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //             //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            //             //         // };
                                            //             //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                            //             //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                            //             //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                            //             //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                            //             //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                            //             //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                            //             //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                            //             //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            //             //         };
                                            //             //         PublicVariableStartORStopCollectDataButtonClickState = true;
                                            //             //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                            //             //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                            //             //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                            //             //         };
                                            //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 個一級頁面失敗. }";
                                            //             //         };
                                            //             //         alert('從當前第' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁步進至第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' 個一級頁面失敗.' + "\n" + "Next_First_Level_Page_Button_XPath.length === 0" + "\n" + "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.");
                                            //             //         return false;
                                            //             //     };
                                            //             //     // return "Collected < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + " >";
                                            //             // } else if (parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) < parseInt(MaximumPageNumber) ) {
                                            //             //     // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                            //             //     chrome.runtime.sendMessage(
                                            //             //         {
                                            //             //             "message": 'userInterface->background:CollectEnd',
                                            //             //             "error": "All completed.",
                                            //             //             "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            //             //             // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            //             //             "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            //             //             "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            //             //             "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            //             //             "url": String(windowHandle_2.document.location.href),
                                            //             //             // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(0),  // (parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            //             //             "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                                            //             //             "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                            //             //             "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            //             //             "Maximum_Second_Level_Page_Number": parseInt(0),  // parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            //             //             "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                            //             //         },  // 發送的具體數據，可以是 JSON 對象;
                                            //             //         // (response_Data) => {
                                            //             //         //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                            //             //         //     // console.log(response_Data);
                                            //             //         //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                            //             //         //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                            //             //         //     if (response_Data["message"] === "background->userInterface:StopCollect") {
                                            //             //         //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //             //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //             //         //         console.log('background instruction: { Stop collecting }.');
                                            //             //         //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //             //         //         console.log('{ Stand By }.');
                                            //             //         //     };
                                            //             //         //     if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                            //             //         //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //             //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //             //         //         console.log('Backing previous page.');
                                            //             //         //         windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                            //             //         //     };
                                            //             //         //     if (response_Data["message"] === "background->userInterface:StandBy") {
                                            //             //         //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //             //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //             //         //         console.log('background instruction: { StandBy }.');
                                            //             //         //     };
                                            //             //         // }
                                            //             //     );
                                            //             //     // 清除跳頁之後的延時操作;
                                            //             //     for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                            //             //         windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                            //             //     };
                                            //             //     /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                                            //             //     windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                            //             //     if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) - parseInt(1)) + " > 頁成, 終. }";
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber));
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel") !== null) {
                                            //             //         windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel").innerText = "";
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value = String(parseInt(EndPageNumber) + parseInt(1));
                                            //             //     };

                                            //             //     if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                            //             //         windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                            //             //         windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                            //             //         windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                            //             //         windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            //             //     };
                                            //             //     // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //             //     //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            //             //     // };
                                            //             //     if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                            //             //         windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                            //             //         windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            //             //     };
                                            //             //     PublicVariableStartORStopCollectDataButtonClickState = true;
                                            //             //     if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                            //             //         // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                            //             //         windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                            //             //     };
                                            //             //     // return "CollectEnd";
                                            //             // } else {
                                            //             //     // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                            //             //     chrome.runtime.sendMessage(
                                            //             //         {
                                            //             //             "message": 'userInterface->background:CollectEnd',
                                            //             //             "error": "All completed.",
                                            //             //             "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            //             //             // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            //             //             "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            //             //             "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            //             //             "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            //             //             "url": String(windowHandle_2.document.location.href),
                                            //             //             // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(0),  // (parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            //             //             "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                                            //             //             "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                            //             //             "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            //             //             "Maximum_Second_Level_Page_Number": parseInt(0),  // parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            //             //             "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                            //             //         },  // 發送的具體數據，可以是 JSON 對象;
                                            //             //         // (response_Data) => {
                                            //             //         //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                            //             //         //     // console.log(response_Data);
                                            //             //         //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                            //             //         //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                            //             //         //     if (response_Data["message"] === "background->userInterface:StopCollect") {
                                            //             //         //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //             //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //             //         //         console.log('background instruction: { Stop collecting }.');
                                            //             //         //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //             //         //         console.log('{ Stand By }.');
                                            //             //         //     };
                                            //             //         //     if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                            //             //         //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //             //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //             //         //         console.log('Backing previous page.');
                                            //             //         //         windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                            //             //         //     };
                                            //             //         //     if (response_Data["message"] === "background->userInterface:StandBy") {
                                            //             //         //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //             //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //             //         //         console.log('background instruction: { StandBy }.');
                                            //             //         //     };
                                            //             //         // }
                                            //             //     );
                                            //             //     // 清除跳頁之後的延時操作;
                                            //             //     for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                            //             //         windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                            //             //     };
                                            //             //     /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                                            //             //     windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
                                            //             //     if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) - parseInt(1)) + " > 頁成，盡. }";
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                            //             //         windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                            //             //         windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                            //             //         windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                            //             //         windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            //             //     };
                                            //             //     // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //             //     //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            //             //     // };
                                            //             //     if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                            //             //         windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                            //             //         windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            //             //     };
                                            //             //     if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                            //             //         windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            //             //     };
                                            //             //     PublicVariableStartORStopCollectDataButtonClickState = true;
                                            //             //     if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                            //             //         // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                            //             //         windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                            //             //     };
                                            //             //     // return "CollectEnd";
                                            //             // };

                                            //             // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //             // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + response_Data["error"]);
                                            //             // console.log(response_Data);
                                            //             // return false;
                                            //         };
                                            //     };
                                            // }
                                        );
                                        /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(TemporaryFirstLevelWebCollectResultArray);}; */;
                                        /* alert(TemporaryFirstLevelWebCollectResultArray); */;

                                        // 判斷是否發送點擊下一頁指令;
                                        if (parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) < parseInt(EndPageNumber)) {

                                            if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + " > 頁成. }";
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1));
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                                            };

                                            if (Next_First_Level_Page_Button_XPath.length > 0) {

                                                Cycle_Click_Next_Page_Sequence_Number = parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1);

                                                if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁. }";
                                                };

                                                // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                                chrome.runtime.sendMessage(
                                                    {
                                                        "message": 'userInterface->background:Step_Further_Next_Page',
                                                        "error": "",
                                                        "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                        // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                        "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                        "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                        "url": String(windowHandle_2.document.location.href),
                                                        // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                        "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                                                        "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                        "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                        "Maximum_Second_Level_Page_Number": parseInt(0),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                        "Configuration_Parameters": {
                                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                            "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                                            "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                                            "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                                            "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                                            "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                                            "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                                            "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                                            "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                                            "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                                            "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                                            "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                                            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                                            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                                            "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                                            "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                                            "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                                                        },
                                                        "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                    },  // 發送的具體數據，可以是 JSON 對象;
                                                    // (response_Data) => {
                                                    //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                    //     // console.log(response_Data);
                                                    //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                    //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                                    //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                    //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //     //     console.log('background instruction: { Stop collecting }.');
                                                    //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //     //     console.log('{ Stand By }.');
                                                    //     // };
                                                    //     if (response_Data["message"] === "background->userInterface:Next_Page_Error") {
                                                    //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                                    //         // console.log(response_Data["error"]);
                                                    //         // console.log(response_Data);
                                                    //         // 清除跳頁之後的延時操作;
                                                    //         for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                                    //             windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                                    //         };
                                                    //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                                                    //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
                                                    //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁失敗. }";
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                    //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                    //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                    //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                    //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                    //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                    //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                    //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                                    //         };
                                                    //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                                    //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                                    //         // };
                                                    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                    //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                    //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                                    //         };
                                                    //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                    //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                    //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁失敗. }";
                                                    //         };
                                                    //         alert('從當前第' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁步進至第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' 個一級頁面失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Next_Page_Error' + '\n' + response_Data["error"]);
                                                    //         return false;
                                                    //     };
                                                    //     if (response_Data["message"] === "background->userInterface:Step_Furthering_Next_Page") {
                                                    //         console.log('injected script instruction: { Step_Furthering_Next_Page [ ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' ] }.');
                                                    //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁. }";
                                                    //         };
                                                    //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                                    //         // console.log(response_Data["error"]);
                                                    //         // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //         // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + response_Data["error"]);
                                                    //         // console.log(response_Data);
                                                    //         // return false;
                                                    //     };
                                                    // }
                                                );

                                            } else {

                                                // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                                chrome.runtime.sendMessage(
                                                    {
                                                        "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                                        "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                                        "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                        // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                        "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                        "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                        "url": String(windowHandle_2.document.location.href),
                                                        // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                        "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                                                        "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                        "Current_Second_Level_Page_Number": parseInt(0), // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                        "Maximum_Second_Level_Page_Number": parseInt(0), // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                        "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                    },  // 發送的具體數據，可以是 JSON 對象;
                                                    // (response_Data) => {
                                                    //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                    //     // console.log(response_Data);
                                                    //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                    //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                                    //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                    //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //     //     console.log('background instruction: { Stop collecting }.');
                                                    //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //     //     console.log('{ Stand By }.');
                                                    //     // };
                                                    //     // if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                                    //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //     //     console.log('Backing previous page.');
                                                    //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                                    //     // };
                                                    //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                                    //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //     //     console.log('background instruction: { StandBy }.');
                                                    //     // };
                                                    // }
                                                );

                                                for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                                    windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                                };
                                                /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;
                                                windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                                if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                    windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                                };
                                                if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                    windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                };
                                                if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                    windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                                };
                                                if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                    windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                };
                                                if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                    windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                                };
                                                if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                    windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                                };
                                                if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                    windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                                };
                                                // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                                //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                                // };
                                                if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                    windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                                };
                                                if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                    windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                                };
                                                if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                    windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                                };
                                                if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                    windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                                };
                                                if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                    windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                                };
                                                if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                    windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                                };
                                                if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                    windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                                };
                                                PublicVariableStartORStopCollectDataButtonClickState = true;
                                                if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                    // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                    windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                                };
                                                if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 個一級頁面失敗. }";
                                                };
                                                alert('從當前第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁步進至第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' 個一級頁面失敗.' + "\n" + "Next_First_Level_Page_Button_XPath.length === 0" + "\n" + "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.");
                                                return false;
                                            };

                                            // return "Collected < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + " >";

                                        } else if (parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) > parseInt(EndPageNumber) && parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) < parseInt(MaximumPageNumber) ) {

                                            // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                            chrome.runtime.sendMessage(
                                                {
                                                    "message": 'userInterface->background:CollectEnd',
                                                    "error": "All completed.",
                                                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    "url": String(windowHandle_2.document.location.href),
                                                    // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(0),  // (parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                                                    "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                    "Maximum_Second_Level_Page_Number": parseInt(0),  // parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                },  // 發送的具體數據，可以是 JSON 對象;
                                                // (response_Data) => {
                                                //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                //     // console.log(response_Data);
                                                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                                //     if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //         console.log('background instruction: { Stop collecting }.');
                                                //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                //         console.log('{ Stand By }.');
                                                //     };
                                                //     if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                                //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //         console.log('Backing previous page.');
                                                //         windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                                //     };
                                                //     if (response_Data["message"] === "background->userInterface:StandBy") {
                                                //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //         console.log('background instruction: { StandBy }.');
                                                //     };
                                                // }
                                            );

                                            // 清除跳頁之後的延時操作;
                                            for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                                windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                            };
                                            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                                            windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                            if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) - parseInt(1)) + " > 頁成, 終. }";
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber));
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                                            };
                                            if (windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel") !== null) {
                                                windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel").innerText = "";
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value = String(parseInt(EndPageNumber) + parseInt(1));
                                            };

                                            if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            };
                                            // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            // };
                                            if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            };

                                            PublicVariableStartORStopCollectDataButtonClickState = true;

                                            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                            };

                                            return "CollectEnd";

                                        } else {

                                            // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                            chrome.runtime.sendMessage(
                                                {
                                                    "message": 'userInterface->background:CollectEnd',
                                                    "error": "All completed.",
                                                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    "url": String(windowHandle_2.document.location.href),
                                                    // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(0),  // (parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                                                    "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                    "Maximum_Second_Level_Page_Number": parseInt(0),  // parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                },  // 發送的具體數據，可以是 JSON 對象;
                                                // (response_Data) => {
                                                //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                //     // console.log(response_Data);
                                                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                                //     if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //         console.log('background instruction: { Stop collecting }.');
                                                //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                //         console.log('{ Stand By }.');
                                                //     };
                                                //     if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                                //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //         console.log('Backing previous page.');
                                                //         windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                                //     };
                                                //     if (response_Data["message"] === "background->userInterface:StandBy") {
                                                //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //         console.log('background instruction: { StandBy }.');
                                                //     };
                                                // }
                                            );

                                            // 清除跳頁之後的延時操作;
                                            for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                                windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                            };
                                            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                                            windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                            if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) - parseInt(1)) + " > 頁成，盡. }";
                                            };

                                            if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            };
                                            // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            // };
                                            if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            };

                                            PublicVariableStartORStopCollectDataButtonClickState = true;

                                            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                            };

                                            return "CollectEnd";
                                        };
                                    },

                                    parseInt(parseInt(CycleClickNextPageSequenceNumber) * parseInt(DelayAfterClickFirstLevelWebNextPageButton))  /* 抓取下一頁的點擊，延遲輸入值，單位（毫秒），1000 毫秒 === 1 秒; */
                                );
                            }
                        )(i);
                    };
                },

                parseInt(Skip_Delay)  /* 根據輸入的抓取起始頁號碼，跳頁之後的等待載入的延遲時間，單位（毫秒），1000 毫秒 === 1 秒; */
            );

            return true;
            // break;
        };

        /* // 抓取第一層網頁中的數據，然後自動進入第二層網頁，抓取第二層網頁中的數據，再自動返回，循環往復; */
        case 2: {

            /* 循環周期時長（單位毫秒）輸入文本框 input 的值; */
            /* // Interval_Of_Circle_Click_value = parseInt(1000);  // 1000 毫秒; */
            /*
            // if (windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput") !== null) {
            //     Interval_Of_Circle_Click_value = parseInt(windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
            // };
            */
            /* // Randomization_Relative_Interval = parseFloat(0.2);  // Interval_Of_Circle_Click_value * 0.2; */
            /*
            // if (windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput") !== null) {
            //     Randomization_Relative_Interval = parseFloat(windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
            // };
            */
            // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
            Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
            /* // 只抓取第一層網頁中數據的參數; */
            /* let DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
            /* let DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
            /* let DelayAfterClickEntrySecondLevelWebButton = parseInt(0); */  /* 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
            /* let DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
            /* let IntervalOfCircleClickNextPageButton = parseInt(0); */  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
            /* // 抓取第一層網頁中的數據，然後自動進入第二層網頁，抓取第二層網頁中的數據，然後再返回第一層網頁，循環往復，的參數; */
            let DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2);  /* parseInt(2000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
            let DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
            let DelayAfterClickEntrySecondLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2);  /* parseInt(2000) 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
            let DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
            let IntervalOfCircleClickNextPageButton = parseInt(0);  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
            /* IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickEntrySecondLevelWebButton) * ( parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page) - parseInt(StartEntryNumber) + parseInt(1) ) + parseInt(DelayAfterClickFirstLevelWebNextPageButton); */;

            let First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array = new Array();
            let Interval_of_Circle_Click_Next_Page_Sequence_Array = new Array();
            Interval_of_Circle_Click_Next_Page_Sequence_Array[0] = parseInt(11);
            let Cycle_Click_Next_Page_Sequence_Number = parseInt(0);
            let Max_of_Item_in_Current_First_Level_Page_Sequence_Array = new Array();

            /* // 判斷是否需要先導入硬盤中保存的文檔數據; */;
            /*
            if (windowHandle_1.confirm("益之確定始之取消")) {
                let FunctionStoredCollectResultFromHardDiskToMemoryReturnValue = StoredCollectResultFromHardDiskToMemory(
                    windowHandle_1,
                    parseInt(1),
                    "ResultExhibitsDiv",
                    "ResultExhibitsDivTagTable",
                    PublicVariableResultExhibitsWebPage
                );
                if (FunctionStoredCollectResultFromHardDiskToMemoryReturnValue === false) {
                    if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                    };
                    // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                    //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                    // };
                    if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                        windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                        windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                        windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                    };
                    PublicVariableStartORStopCollectDataButtonClickState = true;
                    if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                        // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                    };
                    return false;
                };
            };
            */;

            if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 為之. }";
            };

            /* 執行跳頁動作; */;
            let Skip_Delay = parseInt(0);  // 記錄跳頁動作產生的需要延時的長度;
            if (parseInt(StartPageNumber) !== parseInt(CurrentPageNumber)) {

                level = 'First_Level_Page';  // 'Second_Level_Page', 'First_and_Second_Level_Page';

                if (Skip_First_Level_Page_Textbox_XPath.length > 0 && Skip_First_Level_Page_Button_XPath.length > 0) {

                    // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                    chrome.runtime.sendMessage(
                        {
                            "message": 'userInterface->background:Skip_Page',
                            "error": "",
                            "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                            // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                            "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                            "url": String(windowHandle_2.document.location.href),
                            // "page_number": String(CurrentPageNumber) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                            "Current_First_Level_Page_Number": parseInt(CurrentPageNumber),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                            "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                            "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                            "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                            "Number_of_Skipping": parseInt(StartPageNumber),
                            "Configuration_Parameters": {
                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                            },
                            "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                        },  // 發送的具體數據，可以是 JSON 對象;
                        // (response_Data) => {
                        //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                        //     // console.log(response_Data);
                        //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                        //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                        //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                        //     //     console.log('background instruction: { Stop collecting }.');
                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //     //     console.log('{ Stand By }.');
                        //     // };

                        //     if (response_Data["message"] === "background->userInterface:Skip_Error") {
                        //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                        //         // console.log(response_Data["error"]);
                        //         // console.log(response_Data);
                        //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(StartPageNumber) + " > 頁失敗. }";
                        //         };
                        //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        //         };
                        //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                        //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        //         // };
                        //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                        //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                        //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                        //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                        //         };
                        //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                        //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        //         };
                        //         alert('跳至第 [ ' + String(StartPageNumber) + ' ] 頁失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Skip_Error' + '\n' + response_Data["error"]);
                        //         return false;
                        //     };

                        //     if (response_Data["message"] === "background->userInterface:Skipping") {
                        //         console.log('injected script instruction: { Skipping to [ ' + String(StartPageNumber) + ' ] }.');
                        //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(StartPageNumber) + " > 頁. }";
                        //         };
                        //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                        //         // console.log(response_Data["error"]);
                        //         // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //         // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + response_Data["error"]);
                        //         // console.log(response_Data);
                        //         // return false;
                        //     };
                        // }
                    );

                    Skip_Delay = parseInt(DelayAfterClickFirstLevelWebSkipPageButton);
                    if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(StartPageNumber) + " > 頁. }";
                    };

                } else {

                    if (Next_First_Level_Page_Button_XPath.length > 0) {

                        // Next_JSON["Next_Button_Element"][0].click();
                        if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(CurrentPageNumber) + parseInt(1)) + " > 頁. }";
                        };

                        let Next_Page_SetTimeout_Array = new Array();
                        for (let h = parseInt(0); h < ( parseInt(StartPageNumber) - parseInt(CurrentPageNumber) - parseInt(1) ); h++) {

                            (function(Skip_Sequence_Number) {

                                Next_Page_SetTimeout_Array[Skip_Sequence_Number] = windowHandle_1.setTimeout(

                                    function() {

                                        /* 循環周期時長（單位毫秒）輸入文本框 input 的值; */
                                        /* // Interval_Of_Circle_Click_value = parseInt(1000);  // 1000 毫秒; */
                                        if (windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput") !== null) {
                                            Interval_Of_Circle_Click_value = parseInt(windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
                                        };
                                        /* // Randomization_Relative_Interval = parseFloat(0.2);  // Interval_Of_Circle_Click_value * 0.2; */
                                        if (windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput") !== null) {
                                            Randomization_Relative_Interval = parseFloat(windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
                                        };
                                        // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                                        Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                                        /* // 只抓取第一層網頁中數據的參數; */
                                        DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
                                        DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
                                        DelayAfterClickEntrySecondLevelWebButton = parseInt(0);  /* 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
                                        DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
                                        IntervalOfCircleClickNextPageButton = parseInt(0);  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
                                        /* // 抓取第一層網頁中的數據，然後自動進入第二層網頁，抓取第二層網頁中的數據，然後再返回第一層網頁，循環往復，的參數; */
                                        /* DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
                                        /* DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
                                        /* DelayAfterClickEntrySecondLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2); */  /* parseInt(2000) 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
                                        /* DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
                                        /* IntervalOfCircleClickNextPageButton = parseInt(0); */  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
                                        /* IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickEntrySecondLevelWebButton) * ( parseInt(MaxNumberOfItemInThisFirstLevelWebPage) - parseInt(StartEntryNumber) + parseInt(1) ) + parseInt(DelayAfterClickFirstLevelWebNextPageButton); */;

                                        // 實時更新最大頁碼信息;
                                        /* 獲取最大可采集的頁面數目序號，和當前所在網頁的序號; */;
                                        MaximumPageNumber = parseInt(Maximum_First_Level_Page_Number);
                                        // 刷新當前第一層級網頁序號;
                                        Current_First_Level_Page_Number = parseInt(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number));
                                        // CurrentPageNumber = parseInt(parseInt(CurrentPageNumber) + parseInt(1));  // parseInt(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number));
                                        /* 獲取當前所處的第一層級網頁中，包含的進入第二層級網頁的入口，一共有多少個; */;
                                        Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                                        // 刷新當前第一層級網頁中正處在的第二層級網頁的序號;
                                        // Current_Second_Level_Page_Number = parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page);

                                        level = 'First_Level_Page';  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page';

                                        if (PublicVariableStartORStopCollectDataButtonClickState) {

                                            // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                            chrome.runtime.sendMessage(
                                                {
                                                    "message": 'userInterface->background:StopCollect',
                                                    "error": 'Execution process interrupted ( PublicVariableStartORStopCollectDataButtonClickState === true ).',
                                                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    "url": String(windowHandle_2.document.location.href),
                                                    "page_number": String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + '--' + String(0),  // String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    "Current_First_Level_Page_Number": parseInt(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                    // "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                    // "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                },  // 發送的具體數據，可以是 JSON 對象;
                                                // (response_Data) => {
                                                //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                //     // console.log(response_Data);
                                                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                                //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //     //     console.log('background instruction: { Stop collecting }.');
                                                //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                //     //     console.log('{ Stand By }.');
                                                //     // };

                                                //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //     //     console.log('background instruction: { StandBy }.');
                                                //     // };
                                                // }
                                            );

                                            for (let g = parseInt(Skip_Sequence_Number); g < ( parseInt(StartPageNumber) - parseInt(CurrentPageNumber) - parseInt(1) ); g++) {
                                                windowHandle_1.clearTimeout(Next_Page_SetTimeout_Array[g]);
                                            };
                                            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;
                                            windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                            if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + " > 頁, 止. }";
                                            };

                                            if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            };
                                            // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            // };
                                            if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                            };

                                            return "StopCollect";
                                        };

                                        // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                        chrome.runtime.sendMessage(
                                            {
                                                "message": 'userInterface->background:Step_Further_Next_Page',
                                                "error": "",
                                                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                "url": String(windowHandle_2.document.location.href),
                                                // "page_number": String(CurrentPageNumber) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                "Current_First_Level_Page_Number": parseInt(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                "Configuration_Parameters": {
                                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                                    "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                                    "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                                    "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                                    "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                                    "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                                    "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                                    "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                                    "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                                    "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                                    "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                                    "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                                    "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                                    "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                                    "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                                    "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                                                },
                                                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                            },  // 發送的具體數據，可以是 JSON 對象;
                                            // (response_Data) => {
                                            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                            //     // console.log(response_Data);
                                            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //     //     console.log('background instruction: { Stop collecting }.');
                                            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //     //     console.log('{ Stand By }.');
                                            //     // };

                                            //     if (response_Data["message"] === "background->userInterface:Next_Page_Error") {
                                            //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                            //         // console.log(response_Data["error"]);
                                            //         // console.log(response_Data);

                                            //         for (let g = parseInt(Skip_Sequence_Number); g < ( parseInt(StartPageNumber) - parseInt(CurrentPageNumber) - parseInt(1) ); g++) {
                                            //             windowHandle_1.clearTimeout(Next_Page_SetTimeout_Array[g]);
                                            //         };
                                            //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;

                                            //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                            //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(StartPageNumber) + " > 頁失敗. }";
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                            //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                            //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                            //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                            //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                            //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                            //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            //         };
                                            //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            //         // };
                                            //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                            //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                            //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                            //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                            //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                            //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                            //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            //         };
                                            //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                            //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            //         };
                                            //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                            //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                            //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                            //         };
                                            //         alert('從當前第' + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + ' 個一級網頁步進至第 ' + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number) + parseInt(1)) + ' 個一級頁面失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Skip_Error' + '\n' + response_Data["error"]);
                                            //         return false;
                                            //     };

                                            //     if (response_Data["message"] === "background->userInterface:Step_Furthering_Next_Page") {
                                            //         console.log('injected script instruction: { Step_Furthering_Next_Page [ ' + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number) + parseInt(1)) + ' ] }.');
                                            //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + " > 頁. }";
                                            //         };
                                            //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                            //         // console.log(response_Data["error"]);
                                            //         // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //         // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + response_Data["error"]);
                                            //         // console.log(response_Data);
                                            //         // return false;
                                            //     };
                                            // }
                                        );
                                    },

                                    ( parseInt(Skip_Sequence_Number) * parseInt(DelayAfterClickFirstLevelWebSkipPageButton) )  /* 循環點擊下一頁按鈕，直至目標起始頁，以達到跳頁的預期，每次點擊下一頁按鈕的延遲時間，單位（毫秒），1000 毫秒 === 1 秒; */
                                );

                            })(h);
                        };

                        Skip_Delay = ( parseInt(StartPageNumber) - parseInt(CurrentPageNumber) ) * parseInt(DelayAfterClickFirstLevelWebSkipPageButton);
                        CurrentPageNumber = parseInt(Current_First_Level_Page_Number);

                    } else {

                        // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                        chrome.runtime.sendMessage(
                            {
                                "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentPageNumber) + parseInt(1)) + '_Page_Error',
                                "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                "url": String(windowHandle_2.document.location.href),
                                "page_number": String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                "Current_First_Level_Page_Number": parseInt(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)),  // parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                            },  // 發送的具體數據，可以是 JSON 對象;
                            // (response_Data) => {
                            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                            //     // console.log(response_Data);
                            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('background instruction: { Stop collecting }.');
                            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //     //     console.log('{ Stand By }.');
                            //     // };

                            //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('Backing previous page.');
                            //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                            //     // };

                            //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('background instruction: { StandBy }.');
                            //     // };
                            // }
                        );

                        if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(CurrentPageNumber) + parseInt(1)) + " > 頁失敗. }";
                        };

                        if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                            windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                            windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                            windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                            windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        };
                        // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                        //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        // };
                        if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                            windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                            windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                            windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                            windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                            windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                            windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                            windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                        };

                        PublicVariableStartORStopCollectDataButtonClickState = true;

                        if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                            // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        };

                        alert('從當前第' + String(CurrentPageNumber) + ' 個一級網頁步進至第 ' + String(parseInt(CurrentPageNumber) + parseInt(1)) + ' 個一級頁面失敗.' + "\n" + "Next_First_Level_Page_Button_XPath.length === 0" + "\n" + "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.");

                        return false;
                    };
                };
            };

            /* 執行跳頁的延遲動作的 setTimeout */;
            let Skip_setTimeout = windowHandle_1.setTimeout(

                function() {

                    /* 循環周期時長（單位毫秒）輸入文本框 input 的值; */
                    /* // Interval_Of_Circle_Click_value = parseInt(1000);  // 1000 毫秒; */
                    if (windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput") !== null) {
                        Interval_Of_Circle_Click_value = parseInt(windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
                    };
                    /* // Randomization_Relative_Interval = parseFloat(0.2);  // Interval_Of_Circle_Click_value * 0.2; */
                    if (windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput") !== null) {
                        Randomization_Relative_Interval = parseFloat(windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
                    };
                    // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                    Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                    /* // 只抓取第一層網頁中數據的參數; */
                    /* DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
                    /* DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
                    /* DelayAfterClickEntrySecondLevelWebButton = parseInt(0); */  /* 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
                    /* DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
                    /* IntervalOfCircleClickNextPageButton = parseInt(0);  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
                    /* // 抓取第一層網頁中的數據，然後自動進入第二層網頁，抓取第二層網頁中的數據，然後再返回第一層網頁，循環往復，的參數; */
                    DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2);  /* parseInt(2000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
                    DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
                    DelayAfterClickEntrySecondLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2);  /* parseInt(2000) 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
                    DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
                    IntervalOfCircleClickNextPageButton = parseInt(0);  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
                    /* IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickEntrySecondLevelWebButton) * ( parseInt(MaxNumberOfItemInThisFirstLevelWebPage) - parseInt(StartEntryNumber) + parseInt(1) ) + parseInt(DelayAfterClickFirstLevelWebNextPageButton); */;

                    // IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickFirstLevelWebNextPageButton) * (parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1)) + parseInt(Skip_Delay);
                    // Interval_of_Circle_Click_Next_Page_Sequence_Array[ ( parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ] = IntervalOfCircleClickNextPageButton;
                    Interval_of_Circle_Click_Next_Page_Sequence_Array[0] = parseInt(Skip_Delay);
                    // Interval_of_Circle_Click_Next_Page_Sequence_Array[ ( parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ] = parseInt(DelayAfterClickFirstLevelWebNextPageButton) * (parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1)) + parseInt(Skip_Delay);
                    // if (!windowHandle_1.console) { windowHandle_1.console = { log:function(){} }; } else { windowHandle_1.console.log( String(StartPageNumber) + " . " + String(StartEntryNumber) + "  ～  " + String(EndEntryNumber) ); };

                    // 實時更新最大頁碼信息;
                    EndEntryNumber = parseInt(Maximum_Second_Level_Page_Number);
                    /* 獲取最大可采集的頁面數目序號，和當前所在網頁的序號; */;
                    MaximumPageNumber = parseInt(Maximum_First_Level_Page_Number);
                    // 刷新當前第一層級網頁序號;
                    Current_First_Level_Page_Number = parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number));
                    CurrentPageNumber = parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number));
                    /* 獲取當前所處的第一層級網頁中，包含的進入第二層級網頁的入口，一共有多少個; */;
                    Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                    // 刷新當前第一層級網頁中正處在的第二層級網頁的序號;
                    Current_Second_Level_Page_Number = parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page);

                    level = 'First_Level_Page';  // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';  // 當前打開目標數據源網頁的層級類型;

                    if (PublicVariableStartORStopCollectDataButtonClickState) {

                        // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                        chrome.runtime.sendMessage(
                            {
                                "message": 'userInterface->background:StopCollect',
                                "error": 'Execution process interrupted ( PublicVariableStartORStopCollectDataButtonClickState === true ).',
                                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                "url": String(windowHandle_2.document.location.href),
                                "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(0),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                // "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                // "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                            },  // 發送的具體數據，可以是 JSON 對象;
                            // (response_Data) => {
                            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                            //     // console.log(response_Data);
                            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('background instruction: { Stop collecting }.');
                            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //     //     console.log('{ Stand By }.');
                            //     // };

                            //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('background instruction: { StandBy }.');
                            //     // };
                            // }
                        );
        
                        windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
        
                        if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < 0 > 頁 < 0 > 條成, 駐. }";
                        };
        
                        if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                            windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                            windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                            windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                            windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        };
                        // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                        //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        // };
                        if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                            windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                            windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                            windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                            windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                            windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                            windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                            windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                        };
        
                        PublicVariableStartORStopCollectDataButtonClickState = true;
        
                        if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                            // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        };
        
                        return "StopCollect";
                    };

                    // 自定義函數，讀取當前所在的第一層級頁面中的數據，並循環點擊進入當前第一層級網頁中包含的的第二層級頁面，並讀取第二層級頁面中的目標數據;
                    function Open_Second_Level_Pages_in_Current_First_Level_in_Order(
                        StartPageNumber,  // 第一層級頁面自定義的起始采集的頁碼號;
                        Cycle_Click_Next_Page_Sequence_Number,  // 在第一層級頁面中點擊下一頁按鈕次數的序列號;
                        StartItemNumberInThisStartPage,  // 采集第二層級頁面的自定義的起始的條目號;
                        EndItemNumberInThisStartPage,  // 采集第二層級頁面的自定義的結束的條目號;
                        MaxNumberOfItemInThisFirstLevelWebPage,  // 第二層級的頁面中可采集條目的數目;
                        // Obtain_First_Level_Page_Data,  // 自定義函數，獲取第一層級頁面中的目標數據;
                        // Get_Entry_from_First_Level_Page_to_Second_Level_Page,  // 自定義函數，獲取第一層級頁面中進入第二層級網頁的入口元素;
                        // Obtain_Second_Level_Page_Data,  // 自定義函數，獲取第二層級頁面中的目標數據;
                        // Get_Entry_from_Second_Level_Page_to_First_Level_Page,  // 自定義函數，獲取從第二層級頁面中返回至第一層級網頁的入口元素;
                        windowHandle_1,  // 操作界面窗口對象;
                        windowHandle_2,  // 目標數據源頁面窗口對象;
                        // RetrievalResult_XPath_1,
                        // EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                        // SecondLevelWebPageRetrievalResult_XPath,
                        // FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 當前所處的第二層級網頁中返回至第一層級頁面的入口的網頁元素的 XPath 值字符串;
                        ResultExhibitsDivID,  // 展示采集到的數據結果的網頁 div 元素的 ID 號碼;
                        ResultExhibitsDivTagTableID,  // 展示采集到的數據結果的網頁 table 元素的 ID 號碼;
                        DisplayData  // 自定義函數用於在網頁頁面中展示采集到的結果;
                    ){

                        CollectedItemNumberInThisPage = parseInt(0);

                        // if (typeof(Current_First_Level_Page_Number) !== "undefined") {
                        //     Current_First_Level_Page_Number = parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number));
                        // };
                        if (typeof(Current_Second_Level_Page_Number) !== "undefined") {
                            Current_Second_Level_Page_Number = parseInt(StartItemNumberInThisStartPage);  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1));
                        };
                        // if (typeof(StartCurrentSecondLevelPageInCurrentFirstLevelPage) !== "undefined") {
                        //     StartCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(StartItemNumberInThisStartPage);  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1));
                        // };
                        if (typeof(Start_Current_Second_Level_Page_In_Current_First_Level_Page) !== "undefined") {
                            Start_Current_Second_Level_Page_In_Current_First_Level_Page = parseInt(StartItemNumberInThisStartPage);  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1));
                        };
                        // Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                        // Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page);
                        // if (typeof(EndCurrentSecondLevelPageInCurrentFirstLevelPage) !== "undefined") {
                        //     EndCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(EndItemNumberInThisStartPage);  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1));
                        // };
                        if (typeof(End_Current_Second_Level_Page_In_Current_First_Level_Page) !== "undefined") {
                            End_Current_Second_Level_Page_In_Current_First_Level_Page = parseInt(EndItemNumberInThisStartPage);  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1));
                        };

                        if (windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel") !== null) {
                            windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel").innerText = " < " + MaxNumberOfItemInThisFirstLevelWebPage + " > ";
                        };

                        level = 'First_Level_Page';  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page';

                        if ( parseInt(StartItemNumberInThisStartPage) > parseInt(MaxNumberOfItemInThisFirstLevelWebPage) ) {

                            // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                            chrome.runtime.sendMessage(
                                {
                                    "message": 'userInterface->background:StopCollect',  // 'contentScript->background:Input_Start_Second_Level_Page_Number_Error',  // 'Input_Start_Second_Level_Page_Number_' + String(StartItemNumberInThisStartPage) + '_Error',
                                    "error": 'Input start item number in current first level page = { ' + String(StartItemNumberInThisStartPage) + ' } > maximum item number in current first level page = { ' + String(MaxNumberOfItemInThisFirstLevelWebPage) + ' }.',
                                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                    "url": String(windowHandle_2.document.location.href),
                                    "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                    "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                    "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                    "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),
                                    "Maximum_Second_Level_Page_Number": parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                    "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                },  // 發送的具體數據，可以是 JSON 對象;
                                // (response_Data) => {
                                //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                //     // console.log(response_Data);
                                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                    
                                //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('background instruction: { Stop collecting }.');
                                //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                //     //     console.log('{ Stand By }.');
                                //     // };
                    
                                //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('Backing previous page.');
                                //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                //     // };
                    
                                //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('background instruction: { StandBy }.');
                                //     // };
                                // }
                            );

                            alert("在當前第一層級網頁 " + String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + " 中自定義的採集終止條目序號值輸入錯誤." + " \n Input Start Item Number in Current First Level Page = { " + String(StartItemNumberInThisStartPage) + " } \n Maximum Item Number in Current First Level Page = { " + String(MaxNumberOfItemInThisFirstLevelWebPage) + " } \n " + "在當前第一層級網頁 " + String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + " 中的終止採集條目序號不可大於當前網頁 " + String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + " 中包含的最大條目序號.");

                            if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                            };
                            // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                            //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                            // };
                            if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                            };

                            PublicVariableStartORStopCollectDataButtonClickState = true;

                            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            };

                            return false;
                        };

                        /* let StartItemNumberInThisStartPage = parseInt(windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value); */;
                        // if (!windowHandle_1.console) { windowHandle_1.console = { log: function(){} }; } else { windowHandle_1.console.log( String(Extract_First_Level_Page_Number(windowHandle_1, windowHandle_2, (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), TableWebPageNumberTdElement_XPath_1, TableWebPageNumberTdElement_XPath_2, RetrievalResult_XPath_1, RetrievalResult_XPath_2)["CurrentPageNumber"]) + " , " + String(StartItemNumberInThisStartPage) + "  ～  " + String(Get_Entry_from_First_Level_Page_to_Second_Level_Page(windowHandle_1, windowHandle_2, (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1, EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_2)["Entry_Number"])); };

                        /* 讀取第一層網頁中的數據; */;
                        TemporaryFirstLevelWebCollectResultArray = new Array();
                        // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                        chrome.runtime.sendMessage(
                            {
                                "message": 'userInterface->background:Ask_for_Data',
                                "error": "",
                                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                "url": String(windowHandle_2.document.location.href),
                                // "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),
                                "Maximum_Second_Level_Page_Number": parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                "Configuration_Parameters": {
                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                    "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                    "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                    "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                    "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                    "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                    "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                    "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                    "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                    "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                    "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                    "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                    "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                    "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                    "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                    "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                    "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                                },
                                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                            },  // 發送的具體數據，可以是 JSON 對象;
                            // (response_Data) => {
                            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                            //     // console.log(response_Data);
                            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                    
                            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('background instruction: { Stop collecting }.');
                            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //     //     console.log('{ Stand By }.');
                            //     // };
                    
                            //     // if (response_Data["message"] === "background->userInterface:CollectEnd") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('background instruction: { Stop collecting }.');
                            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //     //     console.log('{ Stand By }.');
                            //     // };
                    
                            //     if (response_Data["message"] === "background->userInterface:Obtain_First_Level_Page_Data_Error") {
                            //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                            //         // console.log(response_Data["error"]);
                            //         // console.log(response_Data);
                    
                            //         for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                            //             windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                            //         };
                            //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;
                            //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
                    
                            //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                            //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                            //         };
                            //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                            //         };
                            //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            //         };
                            //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                            //         };
                            //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                            //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                            //         };
                            //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                            //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                            //         };
                            //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                            //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                            //         };
                            //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                            //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                            //         // };
                            //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                            //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                            //         };
                            //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                            //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                            //         };
                            //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                            //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                            //         };
                            //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                            //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                            //         };
                            //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                            //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                            //         };
                            //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                            //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                            //         };
                            //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                            //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                            //         };

                            //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;

                            //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                            //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                            //         };

                            //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取一級頁面 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + "--0 > 中的數據失敗. }";
                            //         };

                            //         // TemporaryFirstLevelWebCollectResultArray = [""];  // response_Data["data"];
                            //         // JSON.parse(response_Data["data"], function (key, value) {});
                            //         // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                            //         alert('讀取當前第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁中的數據失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Obtain_First_Level_Page_Data_Error' + '\n' + response_Data["error"]);

                            //         return false;
                            //     };

                            //     if (response_Data["message"] === "background->userInterface:Real_Time_Data") {

                            //         // 實時更新最大頁碼信息;
                            //         // EndEntryNumber = parseInt(Maximum_Second_Level_Page_Number);
                            //         /* 獲取最大可采集的頁面數目序號，和當前所在網頁的序號; */;
                            //         MaximumPageNumber = parseInt(Maximum_First_Level_Page_Number);
                            //         // 刷新當前第一層級網頁序號;
                            //         CurrentFirstLevelPageNumber = parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber));
                            //         /* 獲取當前所處的第一層級網頁中，包含的進入第二層級網頁的入口，一共有多少個; */;
                            //         // Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                            //         // 刷新當前第一層級網頁中正處在的第二層級網頁的序號;
                            //         // NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page);

                            //         // 更新目標數據源網頁返回的信息;
                            //         if (response_Data.hasOwnProperty("Current_First_Level_Page_Number") && parseInt(response_Data["Current_First_Level_Page_Number"]) !== parseInt(0)) {
                            //             Current_First_Level_Page_Number = parseInt(response_Data["Current_First_Level_Page_Number"]);
                            //             CurrentFirstLevelPageNumber = parseInt(response_Data["Current_First_Level_Page_Number"]);
                            //         };
                            //         if (response_Data.hasOwnProperty("Maximum_First_Level_Page_Number") && parseInt(response_Data["Maximum_First_Level_Page_Number"]) !== parseInt(0)) {
                            //             Maximum_First_Level_Page_Number = parseInt(response_Data["Maximum_First_Level_Page_Number"]);
                            //             MaximumPageNumber = parseInt(response_Data["Maximum_First_Level_Page_Number"]);
                            //         };
                            //         if (response_Data.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(response_Data["Current_Second_Level_Page_Number"]) !== parseInt(0)) {
                            //             Current_Second_Level_Page_Number = parseInt(response_Data["Current_Second_Level_Page_Number"]);
                            //             NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(response_Data["Current_Second_Level_Page_Number"]);
                            //         };
                            //         if (response_Data.hasOwnProperty("Maximum_Second_Level_Page_Number") && parseInt(response_Data["Maximum_Second_Level_Page_Number"]) !== parseInt(0)) {
                            //             Maximum_Second_Level_Page_Number = parseInt(response_Data["Maximum_Second_Level_Page_Number"]);
                            //             Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(response_Data["Maximum_Second_Level_Page_Number"]);
                            //             EndEntryNumber = parseInt(response_Data["Maximum_Second_Level_Page_Number"]);
                            //         };
                            //         if (response_Data.hasOwnProperty("ContainDataWebPageURL") && response_Data["ContainDataWebPageURL"] !== "") {
                            //             ContainDataWebPageURL = String(response_Data["ContainDataWebPageURL"]);  // String(response_Data["url"]);
                            //         };
                            //         if (response_Data.hasOwnProperty("Open_Contain_Data_Web_Page_Name") && response_Data["Open_Contain_Data_Web_Page_Name"] !== "") {
                            //             Open_Contain_Data_Web_Page_Name = String(response_Data["Open_Contain_Data_Web_Page_Name"]);
                            //         };
                            //         if (response_Data.hasOwnProperty("level") && response_Data["level"] !== "") {
                            //             level = String(response_Data["level"]);
                            //         };
                            //         if (response_Data.hasOwnProperty("page_number") && response_Data["page_number"] !== "") {
                            //             page_number = String(response_Data["page_number"]);
                            //         };
                            //         if (response_Data.hasOwnProperty("Total_Data_in_Current_First_Level_Page")) {
                            //             Total_Data_in_Current_First_Level_Page = parseInt(response_Data["Total_Data_in_Current_First_Level_Page"]);
                            //         };
                            //         if (response_Data.hasOwnProperty("Total_Entry_from_First_Level_Page_to_Second_Level_Page")) {
                            //             Total_Entry_from_First_Level_Page_to_Second_Level_Page = parseInt(response_Data["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]);
                            //         };
                            //         if (response_Data.hasOwnProperty("XPath_from_First_Level_Page_to_Second_Level_Page")) {
                            //             XPath_from_First_Level_Page_to_Second_Level_Page = response_Data["XPath_from_First_Level_Page_to_Second_Level_Page"];
                            //         };
                            //         if (response_Data.hasOwnProperty("Total_Data_in_Current_Second_Level_Page")) {
                            //             Total_Data_in_Current_Second_Level_Page = parseInt(response_Data["Total_Data_in_Current_Second_Level_Page"]);
                            //         };
                            //         if (response_Data.hasOwnProperty("Total_Entry_from_Second_Level_Page_to_First_Level_Page")) {
                            //             Total_Entry_from_Second_Level_Page_to_First_Level_Page = parseInt(response_Data["Total_Entry_from_Second_Level_Page_to_First_Level_Page"]);
                            //         };
                            //         if (response_Data.hasOwnProperty("XPath_from_Second_Level_Page_to_First_Level_Page")) {
                            //             XPath_from_Second_Level_Page_to_First_Level_Page = response_Data["XPath_from_Second_Level_Page_to_First_Level_Page"];
                            //         };
                            //         // if (response_Data.hasOwnProperty("Data_in_Current_First_Level_Page")) {
                            //         //     Data_in_Current_First_Level_Page = response_Data["Data_in_Current_First_Level_Page"];
                            //         // };
                            //         // if (response_Data.hasOwnProperty("Data_in_Current_Second_Level_Page")) {
                            //         //     Data_in_Current_Second_Level_Page = response_Data["Data_in_Current_Second_Level_Page"];
                            //         // };
                            //         if (response_Data.hasOwnProperty("Query_Key_Word_First_Level_Page_Textbox_XPath")) {
                            //             Query_Key_Word_First_Level_Page_Textbox_XPath = response_Data["Query_Key_Word_First_Level_Page_Textbox_XPath"];
                            //         };
                            //         if (response_Data.hasOwnProperty("Query_Key_Word_First_Level_Page_Button_XPath")) {
                            //             Query_Key_Word_First_Level_Page_Button_XPath = response_Data["Query_Key_Word_First_Level_Page_Button_XPath"];
                            //         };
                            //         if (response_Data.hasOwnProperty("Skip_First_Level_Page_Textbox_XPath")) {
                            //             Skip_First_Level_Page_Textbox_XPath = response_Data["Skip_First_Level_Page_Textbox_XPath"];
                            //         };
                            //         if (response_Data.hasOwnProperty("Skip_First_Level_Page_Button_XPath")) {
                            //             Skip_First_Level_Page_Button_XPath = response_Data["Skip_First_Level_Page_Button_XPath"];
                            //         };
                            //         if (response_Data.hasOwnProperty("Next_First_Level_Page_Button_XPath")) {
                            //             Next_First_Level_Page_Button_XPath = response_Data["Next_First_Level_Page_Button_XPath"];
                            //         };
                            //         if (response_Data.hasOwnProperty("Back_First_Level_Page_Button_XPath")) {
                            //             Back_First_Level_Page_Button_XPath = response_Data["Back_First_Level_Page_Button_XPath"];
                            //         };
                    
                            //         if (response_Data["level"] === "First_Level_Page") {
                            //             // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';
                            //             // console.log(response_Data["message"]);
                            //             // console.log(response_Data["error"]);
                            //             // console.log(response_Data["url"]);
                            //             // console.log(response_Data["level"]);
                            //             // console.log(response_Data["Current_First_Level_Page_Number"]);
                            //             // console.log(response_Data["Current_Second_Level_Page_Number"]);
                            //             // console.log(response_Data["page_number"]);
                            //             // console.log(response_Data["Total_Data_in_Current_First_Level_Page"]);
                            //             // // console.log(response_Data["Total_Data_in_Current_Second_Level_Page"]);
                            //             // console.log(response_Data["data"]);
                    
                            //             console.log('injected script instruction: { Obtain_First_Level_Page_Data [ ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--0 ] ' + String(response_Data["Total_Data_in_Current_First_Level_Page"]) + ' }.');
                            //             if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            //                 // windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取第 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + " > 個一級頁面中的數據. }";
                            //                 windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + "--0--" + String(response_Data["Total_Data_in_Current_First_Level_Page"]) + " > }";
                            //             };
                    
                            //             // let TemporaryPublicVariableCollectResultStoredStringArray = new Array();
                            //             TemporaryFirstLevelWebCollectResultArray = response_Data["data"];
                            //             // JSON.parse(response_Data["data"], function (key, value) {});
                            //             // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                    
                            //             for (let j in TemporaryFirstLevelWebCollectResultArray) {
                            //                 /* if (!window.console) { window.console = {log:function(){}}; } else { window.console.log(TemporaryPublicVariableCollectResultStoredStringArray.length);}; */;
                            //                 /* alert(TemporaryPublicVariableCollectResultStoredStringArray.length); */;
                            //                 // TemporaryPublicVariableCollectResultStoredStringArray.push([TemporaryFirstLevelWebCollectResultArray[j]]);  /* Array.push([item1 [item2 [. . . [itemN ]]]]) 將一個或多個新元素追加到數組結尾; */;
                    
                            //                 /* 下面代碼將抓取到的結果追加保存到公共變量數組 PublicVariableCollectResultStoredStringArray 中; */;
                            //                 PublicVariableCollectResultStoredStringArray.push([TemporaryFirstLevelWebCollectResultArray[j]]);
                    
                            //                 if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //                     windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(j);
                            //                 };
                    
                            //                 /* 下面代碼將抓取到的結果展示在網頁元素 DIV 層 ResultExhibitsDiv 中; */;
                            //                 if ((ResultExhibitsDivID !== "" || ResultExhibitsDivTagTableID !== "" ) && (windowHandle_1.document.getElementById(ResultExhibitsDivID) !== null || windowHandle_1.document.getElementById(ResultExhibitsDivTagTableID) !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                            //                     let RetrievalResultPageNumber = parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber));
                            //                     let RetrievalResultEntryNumber = parseInt(0);  // parseInt(parseInt(j) + parseInt(1));
                            //                     let RetrievalResultId = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                            //                     DisplayData(
                            //                         windowHandle_1,
                            //                         Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                            //                         [TemporaryFirstLevelWebCollectResultArray[j]],  // TemporaryPublicVariableCollectResultStoredStringArray,
                            //                         ResultExhibitsDivID,
                            //                         ResultExhibitsDivTagTableID,
                            //                         RetrievalResultId
                            //                     );
                            //                 };
                    
                            //                 /* 下面代碼將抓取到的結果展示在新打開的網頁 window 窗口 PublicVariableResultExhibitsWebPage 中; */;
                            //                 if (PublicVariableResultExhibitsWebPage.name !== "") {
                            //                     if ((ResultExhibitsDivID !== "" || ResultExhibitsDivTagTableID !== "" ) && (PublicVariableResultExhibitsWebPage.document.getElementById(ResultExhibitsDivID) !== null || PublicVariableResultExhibitsWebPage.document.getElementById(ResultExhibitsDivTagTableID) !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                            //                         let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber));
                            //                         let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(0);  // parseInt(parseInt(j) + parseInt(1));
                            //                         let PublicVariableResultExhibitsWebPageRetrievalResultId = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                            //                         DisplayData(
                            //                             PublicVariableResultExhibitsWebPage,
                            //                             Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                            //                             [TemporaryFirstLevelWebCollectResultArray[j]],  // TemporaryPublicVariableCollectResultStoredStringArray,
                            //                             ResultExhibitsDivID,
                            //                             ResultExhibitsDivTagTableID,
                            //                             PublicVariableResultExhibitsWebPageRetrievalResultId
                            //                         );
                            //                         PublicVariableResultExhibitsWebPage.document.getElementById(PublicVariableResultExhibitsWebPageRetrievalResultId).scrollIntoView(false);  /* 網頁滾動條滑到 RetrievalResultId 元素的位置; */;
                            //                     };
                            //                 };
                            //             };
                            //             // if (!windowHandle_1.console) { windowHandle_1.console = { log:function(){}}; } else { windowHandle_1.console.log(TemporaryPublicVariableCollectResultStoredStringArray); };
                    
                            //             // if (parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) < parseInt(EndPageNumber)) {
                            //             //     if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + " > 頁成. }";
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1));
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                            //             //     };
                            //             //     if (Next_First_Level_Page_Button_XPath.length > 0) {
                            //             //         Cycle_Click_Next_Page_Sequence_Number = parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1);
                            //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁. }";
                            //             //         };
                            //             //         // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                            //             //         chrome.runtime.sendMessage(
                            //             //             {
                            //             //                 "message": 'userInterface->background:Step_Further_Next_Page',
                            //             //                 "error": "",
                            //             //                 "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                            //             //                 // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                            //             //                 "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                            //             //                 "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                            //             //                 "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                            //             //                 "url": String(windowHandle_2.document.location.href),
                            //             //                 // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                            //             //                 "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                            //             //                 "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                            //             //                 "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                            //             //                 "Maximum_Second_Level_Page_Number": parseInt(0),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                            //             //                 "Configuration_Parameters": {
                            //             //                     "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                            //             //                     "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                            //             //                     "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                            //             //                     "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                            //             //                     "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                            //             //                     "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                            //             //                     "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                            //             //                     "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                            //             //                     "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                            //             //                     "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                            //             //                     "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                            //             //                     "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                            //             //                     "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                            //             //                     "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                            //             //                     "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                            //             //                     "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                            //             //                     "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                            //             //                     "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                            //             //                 },
                            //             //                 "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                            //             //             },  // 發送的具體數據，可以是 JSON 對象;
                            //             //             // (response_Data) => {
                            //             //             //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                            //             //             //     // console.log(response_Data);
                            //             //             //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                            //             //             //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                            //             //             //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                            //             //             //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //             //             //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //             //             //     //     console.log('background instruction: { Stop collecting }.');
                            //             //             //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //             //             //     //     console.log('{ Stand By }.');
                            //             //             //     // };
                            //             //             //     if (response_Data["message"] === "background->userInterface:Next_Page_Error") {
                            //             //             //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                            //             //             //         // console.log(response_Data["error"]);
                            //             //             //         // console.log(response_Data);
                            //             //             //         // 清除跳頁之後的延時操作;
                            //             //             //         for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                            //             //             //             windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                            //             //             //         };
                            //             //             //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                            //             //             //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
                            //             //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁失敗. }";
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                            //             //             //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                            //             //             //         // };
                            //             //             //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                            //             //             //         };
                            //             //             //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //             //             //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                            //             //             //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            //             //             //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                            //             //             //         };
                            //             //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁失敗. }";
                            //             //             //         };
                            //             //             //         alert('從當前第' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁步進至第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' 個一級頁面失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Next_Page_Error' + '\n' + response_Data["error"]);
                            //             //             //         return false;
                            //             //             //     };
                            //             //             //     if (response_Data["message"] === "background->userInterface:Step_Furthering_Next_Page") {
                            //             //             //         console.log('injected script instruction: { Step_Furthering_Next_Page [ ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' ] }.');
                            //             //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            //             //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁. }";
                            //             //             //         };
                            //             //             //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                            //             //             //         // console.log(response_Data["error"]);
                            //             //             //         // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //             //             //         // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + response_Data["error"]);
                            //             //             //         // console.log(response_Data);
                            //             //             //         // return false;
                            //             //             //     };
                            //             //             // }
                            //             //         );
                            //             //     } else {
                            //             //         // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                            //             //         chrome.runtime.sendMessage(
                            //             //             {
                            //             //                 "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                            //             //                 "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                            //             //                 "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                            //             //                 // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                            //             //                 "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                            //             //                 "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                            //             //                 "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                            //             //                 "url": String(windowHandle_2.document.location.href),
                            //             //                 // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                            //             //                 "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                            //             //                 "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                            //             //                 "Current_Second_Level_Page_Number": parseInt(0), // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                            //             //                 "Maximum_Second_Level_Page_Number": parseInt(0), // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                            //             //                 "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                            //             //             },  // 發送的具體數據，可以是 JSON 對象;
                            //             //             // (response_Data) => {
                            //             //             //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                            //             //             //     // console.log(response_Data);
                            //             //             //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                            //             //             //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                            //             //             //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                            //             //             //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //             //             //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //             //             //     //     console.log('background instruction: { Stop collecting }.');
                            //             //             //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //             //             //     //     console.log('{ Stand By }.');
                            //             //             //     // };
                            //             //             //     // if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                            //             //             //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //             //             //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //             //             //     //     console.log('Backing previous page.');
                            //             //             //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                            //             //             //     // };
                            //             //             //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                            //             //             //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //             //             //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //             //             //     //     console.log('background instruction: { StandBy }.');
                            //             //             //     // };
                            //             //             // }
                            //             //         );
                            //             //         for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                            //             //             windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                            //             //         };
                            //             //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;
                            //             //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
                    
                            //             //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                            //             //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            //             //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //             //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            //             //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                            //             //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                            //             //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                            //             //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                            //             //         };
                            //             //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                            //             //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                            //             //         // };
                            //             //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                            //             //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                            //             //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                            //             //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                            //             //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                            //             //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                            //             //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                            //             //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                            //             //         };
                            //             //         PublicVariableStartORStopCollectDataButtonClickState = true;
                            //             //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                            //             //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            //             //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                            //             //         };
                            //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 個一級頁面失敗. }";
                            //             //         };
                            //             //         alert('從當前第' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁步進至第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' 個一級頁面失敗.' + "\n" + "Next_First_Level_Page_Button_XPath.length === 0" + "\n" + "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.");
                            //             //         return false;
                            //             //     };
                            //             //     // return "Collected < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + " >";
                            //             // } else if (parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) < parseInt(MaximumPageNumber) ) {
                            //             //     // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                            //             //     chrome.runtime.sendMessage(
                            //             //         {
                            //             //             "message": 'userInterface->background:CollectEnd',
                            //             //             "error": "All completed.",
                            //             //             "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                            //             //             // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                            //             //             "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                            //             //             "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                            //             //             "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                            //             //             "url": String(windowHandle_2.document.location.href),
                            //             //             // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(0),  // (parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                            //             //             "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                            //             //             "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                            //             //             "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                            //             //             "Maximum_Second_Level_Page_Number": parseInt(0),  // parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                            //             //             "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                            //             //         },  // 發送的具體數據，可以是 JSON 對象;
                            //             //         // (response_Data) => {
                            //             //         //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                            //             //         //     // console.log(response_Data);
                            //             //         //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                            //             //         //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                            //             //         //     if (response_Data["message"] === "background->userInterface:StopCollect") {
                            //             //         //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //             //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //             //         //         console.log('background instruction: { Stop collecting }.');
                            //             //         //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //             //         //         console.log('{ Stand By }.');
                            //             //         //     };
                            //             //         //     if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                            //             //         //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //             //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //             //         //         console.log('Backing previous page.');
                            //             //         //         windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                            //             //         //     };
                            //             //         //     if (response_Data["message"] === "background->userInterface:StandBy") {
                            //             //         //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //             //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //             //         //         console.log('background instruction: { StandBy }.');
                            //             //         //     };
                            //             //         // }
                            //             //     );
                            //             //     // 清除跳頁之後的延時操作;
                            //             //     for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                            //             //         windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                            //             //     };
                            //             //     /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                            //             //     windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
                    
                            //             //     if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) - parseInt(1)) + " > 頁成, 終. }";
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber));
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel") !== null) {
                            //             //         windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel").innerText = "";
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value = String(parseInt(EndPageNumber) + parseInt(1));
                            //             //     };
                    
                            //             //     if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                            //             //         windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                            //             //         windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                            //             //         windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                            //             //         windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                            //             //     };
                            //             //     // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                            //             //     //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                            //             //     // };
                            //             //     if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                            //             //         windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                            //             //         windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                            //             //     };
                            //             //     PublicVariableStartORStopCollectDataButtonClickState = true;
                            //             //     if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                            //             //         // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            //             //         windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                            //             //     };
                            //             //     // return "CollectEnd";
                            //             // } else {
                            //             //     // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                            //             //     chrome.runtime.sendMessage(
                            //             //         {
                            //             //             "message": 'userInterface->background:CollectEnd',
                            //             //             "error": "All completed.",
                            //             //             "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                            //             //             // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                            //             //             "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                            //             //             "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                            //             //             "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                            //             //             "url": String(windowHandle_2.document.location.href),
                            //             //             // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(0),  // (parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                            //             //             "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                            //             //             "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                            //             //             "Current_Second_Level_Page_Number": parseInt(0),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                            //             //             "Maximum_Second_Level_Page_Number": parseInt(0),  // parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                            //             //             "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                            //             //         },  // 發送的具體數據，可以是 JSON 對象;
                            //             //         // (response_Data) => {
                            //             //         //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                            //             //         //     // console.log(response_Data);
                            //             //         //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                            //             //         //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                            //             //         //     if (response_Data["message"] === "background->userInterface:StopCollect") {
                            //             //         //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //             //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //             //         //         console.log('background instruction: { Stop collecting }.');
                            //             //         //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //             //         //         console.log('{ Stand By }.');
                            //             //         //     };
                            //             //         //     if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                            //             //         //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //             //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //             //         //         console.log('Backing previous page.');
                            //             //         //         windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                            //             //         //     };
                            //             //         //     if (response_Data["message"] === "background->userInterface:StandBy") {
                            //             //         //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //             //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //             //         //         console.log('background instruction: { StandBy }.');
                            //             //         //     };
                            //             //         // }
                            //             //     );
                            //             //     // 清除跳頁之後的延時操作;
                            //             //     for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                            //             //         windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                            //             //     };
                            //             //     /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                            //             //     windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
                            //             //     if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) - parseInt(1)) + " > 頁成，盡. }";
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                            //             //         windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                            //             //         windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                            //             //         windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                            //             //         windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                            //             //     };
                            //             //     // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                            //             //     //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                            //             //     // };
                            //             //     if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                            //             //         windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                            //             //         windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                            //             //     };
                            //             //     if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                            //             //         windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                            //             //     };
                            //             //     PublicVariableStartORStopCollectDataButtonClickState = true;
                            //             //     if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                            //             //         // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            //             //         windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                            //             //     };
                            //             //     // return "CollectEnd";
                            //             // };
                    
                            //             // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //             // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + response_Data["error"]);
                            //             // console.log(response_Data);
                            //             // return false;
                            //         };
                            //     };
                            // }
                        );
                        /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(TemporaryFirstLevelWebCollectResultArray);}; */;
                        /* alert(TemporaryFirstLevelWebCollectResultArray); */;

                        let Second_Level_Page_Delay_Execution_Read_Data_SetTimeout = new Array();
                        for (let h = ( parseInt(StartItemNumberInThisStartPage) - parseInt(1) ); h < parseInt(EndItemNumberInThisStartPage); h++) {

                            (function(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) {

                                Second_Level_Page_Delay_Execution_Read_Data_SetTimeout[Cycle_Click_Entry_Second_Level_Page_Sequence_Number] = windowHandle_1.setTimeout(

                                    function() {

                                        level = 'First_Level_Page';  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page';

                                        if (PublicVariableStartORStopCollectDataButtonClickState) {

                                            // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                            chrome.runtime.sendMessage(
                                                {
                                                    "message": 'userInterface->background:StopCollect',
                                                    "error": 'Execution process interrupted ( PublicVariableStartORStopCollectDataButtonClickState === true ).',
                                                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    "url": String(windowHandle_2.document.location.href),
                                                    "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(0),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                    // "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    "Current_Second_Level_Page_Number": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),
                                                    // "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                },  // 發送的具體數據，可以是 JSON 對象;
                                                // (response_Data) => {
                                                //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                //     // console.log(response_Data);
                                                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                                //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //     //     console.log('background instruction: { Stop collecting }.');
                                                //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                //     //     console.log('{ Stand By }.');
                                                //     // };

                                                //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //     //     console.log('background instruction: { StandBy }.');
                                                //     // };
                                                // }
                                            );

                                            for (let g = parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number); g < parseInt(EndItemNumberInThisStartPage); g++) {
                                                windowHandle_1.clearTimeout(
                                                    Second_Level_Page_Delay_Execution_Read_Data_SetTimeout[g]
                                                );
                                            };
                                            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Cycle_Click_Entry_Second_Level_Page_Sequence_Number);}; */;

                                            windowHandle_1.clearTimeout(
                                                First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[Cycle_Click_Next_Page_Sequence_Number]
                                            );

                                            if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + " > 頁 < " + String(CollectedItemNumberInThisPage) +" > 條成, 駐. }";
                                            };

                                            if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                            };
                                            // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                            //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                            // };
                                            if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                            };
                                            if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                            };

                                            // PublicVariableStartORStopCollectDataButtonClickState = true;

                                            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                                // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                            };

                                            return "StopCollect";
                                        };

                                        // if (typeof(Current_First_Level_Page_Number) !== "undefined") {
                                        //     Current_First_Level_Page_Number = parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number));
                                        // };
                                        if (typeof(Current_Second_Level_Page_Number) !== "undefined") {
                                            Current_Second_Level_Page_Number = parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1));
                                        };
                                        // Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                                        // Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page);

                                        // // 從當前第一層級頁面序貫進入當前第一層級頁面中包含的第二層級頁面;
                                        // if (XPath_from_First_Level_Page_to_Second_Level_Page.length > 0) {

                                            // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                            chrome.runtime.sendMessage(
                                                {
                                                    "message": 'userInterface->background:First_to_Second',
                                                    "error": "",
                                                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    "url": String(windowHandle_2.document.location.href),
                                                    // "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                    "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    "Current_Second_Level_Page_Number": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),
                                                    "Maximum_Second_Level_Page_Number": parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    "To_Number_of_Second_Level_Page": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),
                                                    "Configuration_Parameters": {
                                                        "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                        "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                                        "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                                        "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                                        "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                                        "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                                        "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                                        "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                                        "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                                        "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                                        "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                                        "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                                        "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                                        "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                                        "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                                        "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                                        "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                                                    },
                                                    "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                },  // 發送的具體數據，可以是 JSON 對象;
                                                // (response_Data) => {
                                                //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                //     // console.log(response_Data);
                                                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                                //     if (response_Data["message"] === "background->userInterface:from_First_Level_Page_to_Second_Level_Page_Error") {
                                                //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //         console.log('background instruction: { Stop collecting }.');
                                                //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                //         console.log('{ Stand By }.');
                                                //     };

                                                //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //     //     console.log('background instruction: { Stop collecting }.');
                                                //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                //     //     console.log('{ Stand By }.');
                                                //     // };

                                                //     // if (response_Data["message"] === "background->userInterface:CollectEnd") {
                                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //     //     console.log('background instruction: { Stop collecting }.');
                                                //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                //     //     console.log('{ Stand By }.');
                                                //     // };
                                                // }
                                            );

                                        // } else {

                                        //     // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                        //     chrome.runtime.sendMessage(
                                        //         {
                                        //             "message": 'userInterface->background:StopCollect',  // 'contentScript->background:from_First_Level_Page_to_Second_Level_Page_Error',  // 'from_First_Level_Page_' + String(StartPageNumber) + '_to_Second_Level_Page_Error',
                                        //             "error": "XPath Error:" + "\n" + "Xpath of entry element from first level page to second level page error." + "\n" + "Function Get_Entry_from_First_Level_Page_to_Second_Level_Page() Variable [ EntryElementfromFirstLevelPagetoSecondLevelPage_XPath ] cannot run.",
                                        //             "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                        //             // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                        //             "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                        //             "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                        //             "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                        //             "url": String(windowHandle_2.document.location.href),
                                        //             "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                        //             "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                        //             "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                        //             "Current_Second_Level_Page_Number": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),
                                        //             "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                        //             "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                        //         },  // 發送的具體數據，可以是 JSON 對象;
                                        //         // (response_Data) => {
                                        //         //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                        //         //     // console.log(response_Data);
                                        //         //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                        //         //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                        //         //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                        //         //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                        //         //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                        //         //     //     console.log('background instruction: { Stop collecting }.');
                                        //         //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                        //         //     //     console.log('{ Stand By }.');
                                        //         //     // };

                                        //         //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                                        //         //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                        //         //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                        //         //     //     console.log('Backing previous page.');
                                        //         //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                        //         //     // };

                                        //         //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                        //         //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                        //         //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                        //         //     //     console.log('background instruction: { StandBy }.');
                                        //         //     // };
                                        //         // }
                                        //     );

                                        //     // windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                        //     if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                        //         windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                        //     };
                                        //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                        //     };
                                        //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                        //     };
                                        //     if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        //         windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                        //     };
                                        //     if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                        //         windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                        //     };
                                        //     if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                        //         windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                        //     };
                                        //     if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                        //         windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                        //     };
                                        //     // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                        //     //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                        //     // };
                                        //     if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                        //         windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                        //     };
                                        //     if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                        //         windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                        //     };
                                        //     if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                        //         windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                        //     };
                                        //     if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                        //         windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                        //     };
                                        //     if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                        //         windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                        //     };
                                        //     if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                        //         windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                        //     };
                                        //     if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                        //         windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                        //     };

                                        //     PublicVariableStartORStopCollectDataButtonClickState = true;

                                        //     if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                        //         // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                        //         windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                        //     };

                                        //     alert('當前第' + String(StartPageNumber) + ' 個一級網頁中進入二級頁面入口獲取失敗.' + "\n" + "XPath Error:" + "\n" + "Xpath of entry element from first level page to second level page error." + "\n" + "Function Get_Entry_from_First_Level_Page_to_Second_Level_Page() Variable [ EntryElementfromFirstLevelPagetoSecondLevelPage_XPath ] cannot run.");

                                        //     return false;
                                        // };

                                        level = 'Second_Level_Page';  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page';

                                        // 延時等待進入第二層級頁面;
                                        windowHandle_1.setTimeout(

                                            function() {

                                                // if (typeof(Current_First_Level_Page_Number) !== "undefined") {
                                                //     Current_First_Level_Page_Number = parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number));
                                                // };
                                                // if (typeof(Current_Second_Level_Page_Number) !== "undefined") {
                                                //     Current_Second_Level_Page_Number = parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1));
                                                // };
                                                // Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                                                // Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page);

                                                /* 讀取第二層網頁中的數據; */;
                                                level = 'Second_Level_Page';  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page';
                                                // let TemporaryTwoLevelWebCollectResultArray = new Array();
                                                // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                                chrome.runtime.sendMessage(
                                                    {
                                                        "message": 'userInterface->background:Ask_for_Data',
                                                        "error": "",
                                                        "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                        // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                        "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                        "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                        "url": String(windowHandle_2.document.location.href),
                                                        // "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                        "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                        "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                        "Current_Second_Level_Page_Number": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                        "Maximum_Second_Level_Page_Number": parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                        "Configuration_Parameters": {
                                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                            "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                                            "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                                            "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                                            "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                                            "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                                            "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                                            "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                                            "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                                            "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                                            "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                                            "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                                            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                                            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                                            "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                                            "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                                            "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                                                        },
                                                        "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                    },  // 發送的具體數據，可以是 JSON 對象;
                                                    // (response_Data) => {
                                                    //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                    //     // console.log(response_Data);
                                                    //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                    //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                                    //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                    //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //     //     console.log('background instruction: { Stop collecting }.');
                                                    //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //     //     console.log('{ Stand By }.');
                                                    //     // };

                                                    //     // if (response_Data["message"] === "background->userInterface:CollectEnd") {
                                                    //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //     //     console.log('background instruction: { Stop collecting }.');
                                                    //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //     //     console.log('{ Stand By }.');
                                                    //     // };

                                                    //     if (response_Data["message"] === "background->userInterface:Obtain_Second_Level_Page_Data_Error") {
                                                    //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                                    //         // console.log(response_Data["error"]);
                                                    //         // console.log(response_Data);

                                                    //         for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                                    //             windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                                    //         };
                                                    //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;
                                                    //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                                    //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                    //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                    //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                    //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                    //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                    //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                    //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                    //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                                    //         };
                                                    //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                                    //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                                    //         // };
                                                    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                    //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                    //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                                    //         };
                                                    //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                                    //         };

                                                    //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;

                                                    //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                    //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                    //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                                    //         };

                                                    //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取一級頁面 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + "--0 > 中的數據失敗. }";
                                                    //         };

                                                    //         // TemporaryFirstLevelWebCollectResultArray = [""];  // response_Data["data"];
                                                    //         // JSON.parse(response_Data["data"], function (key, value) {});
                                                    //         // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                                    //         alert('讀取當前第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁中的數據失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Obtain_First_Level_Page_Data_Error' + '\n' + response_Data["error"]);

                                                    //         return false;
                                                    //     };

                                                    //     if (response_Data["message"] === "background->userInterface:Real_Time_Data") {
                                                    //         if (XPath_from_Second_Level_Page_to_First_Level_Page.length > 0) {
                                                    //             if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //                 windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 從當前第 < " + String(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)) + " > 個二級頁面返回至第 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + " > 個一級頁面. }";
                                                    //             };
                                                    //             // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                                    //             chrome.runtime.sendMessage(
                                                    //                 {
                                                    //                     "message": 'userInterface->background:Second_return_First',
                                                    //                     "error": "",
                                                    //                     "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    //                     // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    //                     "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    //                     "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    //                     "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    //                     "url": String(windowHandle_2.document.location.href),
                                                    //                     // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    //                     "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                    //                     "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    //                     "Current_Second_Level_Page_Number": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                    //                     "Maximum_Second_Level_Page_Number": parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    //                     "Return_Number_of_First_Level_Page": parseInt(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)),
                                                    //                     "Configuration_Parameters": {
                                                    //                         "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    //                         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    //                         "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                                    //                         "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                                    //                         "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                                    //                         "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                                    //                         "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                                    //                         "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                                    //                         "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                                    //                         "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                                    //                         "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                                    //                         "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                                    //                         "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                                    //                         "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                                    //                         "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                                    //                         "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                                    //                         "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                                    //                         "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                                                    //                     },
                                                    //                     "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                    //                 },  // 發送的具體數據，可以是 JSON 對象;
                                                    //                 (response_Data) => {
                                                    //                     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                    //                     // console.log(response_Data);
                                                    //                     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                    //                     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                                    //                     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                    //                     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                     //     console.log('background instruction: { Stop collecting }.');
                                                    //                     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //                     //     console.log('{ Stand By }.');
                                                    //                     // };
                                                    //                     if (response_Data["message"] === "background->userInterface:from_Second_Level_Page_return_First_Level_Page_Error") {
                                                    //                         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                                    //                         // console.log(response_Data["error"]);
                                                    //                         // console.log(response_Data);
                                                    //                         // 清除跳頁之後的延時操作;
                                                    //                         for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                                    //                             windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                                    //                         };
                                                    //                         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                                                    //                         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
                                                    //                         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁失敗. }";
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                    //                             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                    //                             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                    //                             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                    //                             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                                    //                         };
                                                    //                         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                                    //                         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                                    //                         // };
                                                    //                         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                    //                             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                    //                             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                                    //                         };
                                                    //                         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //                         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                    //                             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                    //                             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁失敗. }";
                                                    //                         };
                                                    //                         alert('從當前第' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁步進至第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' 個一級頁面失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Next_Page_Error' + '\n' + response_Data["error"]);
                                                    //                         return false;
                                                    //                     };

                                                    //                     if ( (parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) < parseInt(EndPageNumber)) {

                                                    //                         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + " > 頁成. }";
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1));
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                                                    //                         };

                                                    //                         if (Next_First_Level_Page_Button_XPath.length > 0) {

                                                    //                             Cycle_Click_Next_Page_Sequence_Number = parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1);

                                                    //                             if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁. }";
                                                    //                             };

                                                    //                             // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                                    //                             chrome.runtime.sendMessage(
                                                    //                                 {
                                                    //                                     "message": 'userInterface->background:Step_Further_Next_Page',
                                                    //                                     "error": "",
                                                    //                                     "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    //                                     // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    //                                     "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    //                                     "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    //                                     "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    //                                     "url": String(windowHandle_2.document.location.href),
                                                    //                                     // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    //                                     "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                    //                                     "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    //                                     "Current_Second_Level_Page_Number": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                    //                                     "Maximum_Second_Level_Page_Number": parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    //                                     "Configuration_Parameters": {
                                                    //                                         "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    //                                         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    //                                         "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                                    //                                         "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                                    //                                         "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                                    //                                         "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                                    //                                         "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                                    //                                         "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                                    //                                         "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                                    //                                         "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                                    //                                         "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                                    //                                         "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                                    //                                         "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                                    //                                         "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                                    //                                         "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                                    //                                         "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                                    //                                         "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                                    //                                         "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                                                    //                                     },
                                                    //                                     "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                    //                                 },  // 發送的具體數據，可以是 JSON 對象;
                                                    //                                 // (response_Data) => {
                                                    //                                 //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                    //                                 //     // console.log(response_Data);
                                                    //                                 //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                    //                                 //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                                    //                                 //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                    //                                 //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                                 //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                                 //     //     console.log('background instruction: { Stop collecting }.');
                                                    //                                 //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //                                 //     //     console.log('{ Stand By }.');
                                                    //                                 //     // };
                                                    //                                 //     if (response_Data["message"] === "background->userInterface:Next_Page_Error") {
                                                    //                                 //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                                    //                                 //         // console.log(response_Data["error"]);
                                                    //                                 //         // console.log(response_Data);
                                                    //                                 //         // 清除跳頁之後的延時操作;
                                                    //                                 //         for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                                    //                                 //             windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                                    //                                 //         };
                                                    //                                 //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                                                    //                                 //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
                                                    //                                 //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁失敗. }";
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                                    //                                 //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                                    //                                 //         // };
                                                    //                                 //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                                    //                                 //         };
                                                    //                                 //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //                                 //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                    //                                 //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                    //                                 //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                                    //                                 //         };
                                                    //                                 //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁失敗. }";
                                                    //                                 //         };
                                                    //                                 //         alert('從當前第' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁步進至第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' 個一級頁面失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Next_Page_Error' + '\n' + response_Data["error"]);
                                                    //                                 //         return false;
                                                    //                                 //     };
                                                    //                                 //     if (response_Data["message"] === "background->userInterface:Step_Furthering_Next_Page") {
                                                    //                                 //         console.log('injected script instruction: { Step_Furthering_Next_Page [ ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' ] }.');
                                                    //                                 //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //                                 //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁. }";
                                                    //                                 //         };
                                                    //                                 //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                                    //                                 //         // console.log(response_Data["error"]);
                                                    //                                 //         // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //                                 //         // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + response_Data["error"]);
                                                    //                                 //         // console.log(response_Data);
                                                    //                                 //         // return false;
                                                    //                                 //     };
                                                    //                                 // }
                                                    //                             );

                                                    //                         } else {

                                                    //                             // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                                    //                             chrome.runtime.sendMessage(
                                                    //                                 {
                                                    //                                     "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                                    //                                     "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                                    //                                     "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    //                                     // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    //                                     "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    //                                     "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    //                                     "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    //                                     "url": String(windowHandle_2.document.location.href),
                                                    //                                     // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    //                                     "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                    //                                     "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    //                                     "Current_Second_Level_Page_Number": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                    //                                     "Maximum_Second_Level_Page_Number": parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    //                                     "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                    //                                 },  // 發送的具體數據，可以是 JSON 對象;
                                                    //                                 // (response_Data) => {
                                                    //                                 //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                    //                                 //     // console.log(response_Data);
                                                    //                                 //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                    //                                 //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                                    //                                 //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                    //                                 //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                                 //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                                 //     //     console.log('background instruction: { Stop collecting }.');
                                                    //                                 //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //                                 //     //     console.log('{ Stand By }.');
                                                    //                                 //     // };
                                                    //                                 //     // if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                                    //                                 //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                                 //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                                 //     //     console.log('Backing previous page.');
                                                    //                                 //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                                    //                                 //     // };
                                                    //                                 //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                                    //                                 //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                                 //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                                 //     //     console.log('background instruction: { StandBy }.');
                                                    //                                 //     // };
                                                    //                                 // }
                                                    //                             );

                                                    //                             for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                                    //                                 windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                                    //                             };
                                                    //                             /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;
                                                    //                             windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                                    //                             if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                                    //                             };
                                                    //                             // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                                    //                             //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                                    //                             // };
                                                    //                             if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                                    //                             };
                                                    //                             PublicVariableStartORStopCollectDataButtonClickState = true;
                                                    //                             if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                    //                                 // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                    //                                 windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                                    //                             };
                                                    //                             if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //                                 windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 個一級頁面失敗. }";
                                                    //                             };
                                                    //                             alert('從當前第' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁步進至第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' 個一級頁面失敗.' + "\n" + "Next_First_Level_Page_Button_XPath.length === 0" + "\n" + "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.");
                                                    //                             return false;
                                                    //                         };

                                                    //                         // return "Collected < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + " >";

                                                    //                     } else if ( (parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) < parseInt(MaximumPageNumber) ) {

                                                    //                         // // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                                    //                         // chrome.runtime.sendMessage(
                                                    //                         //     {
                                                    //                         //         "message": 'userInterface->background:CollectEnd',
                                                    //                         //         "error": "All completed.",
                                                    //                         //         "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    //                         //         // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    //                         //         "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    //                         //         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    //                         //         "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    //                         //         "url": String(windowHandle_2.document.location.href),
                                                    //                         //         // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(0),  // (parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    //                         //         "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                    //                         //         "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    //                         //         "Current_Second_Level_Page_Number": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                    //                         //         "Maximum_Second_Level_Page_Number": parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    //                         //         "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                    //                         //     },  // 發送的具體數據，可以是 JSON 對象;
                                                    //                         //     (response_Data) => {
                                                    //                         //         // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                    //                         //         // console.log(response_Data);
                                                    //                         //         // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                    //                         //         // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                                    //                         //         if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                    //                         //             // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                         //             // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                         //             console.log('background instruction: { Stop collecting }.');
                                                    //                         //             PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //                         //             console.log('{ Stand By }.');
                                                    //                         //         };
                                                    //                         //         if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                                    //                         //             // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                         //             // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                         //             console.log('Backing previous page.');
                                                    //                         //             windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                                    //                         //         };
                                                    //                         //         if (response_Data["message"] === "background->userInterface:StandBy") {
                                                    //                         //             // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                         //             // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                         //             console.log('background instruction: { StandBy }.');
                                                    //                         //         };
                                                    //                         //     }
                                                    //                         // );

                                                    //                         // // 清除跳頁之後的延時操作;
                                                    //                         // for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                                    //                         //     windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                                    //                         // };
                                                    //                         // /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                                                    //                         // windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                                    //                         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) - parseInt(1)) + " > 頁成, 終. }";
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber));
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel") !== null) {
                                                    //                             windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel").innerText = "";
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value = String(parseInt(EndPageNumber) + parseInt(1));
                                                    //                         };

                                                    //                         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                    //                             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                    //                             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                    //                             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                    //                             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                                    //                         };
                                                    //                         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                                    //                         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                                    //                         // };
                                                    //                         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                    //                             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                    //                             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                                    //                         };

                                                    //                         PublicVariableStartORStopCollectDataButtonClickState = true;

                                                    //                         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                    //                             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                    //                             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                                    //                         };

                                                    //                         // return "CollectEnd";

                                                    //                     } else {

                                                    //                         // // 在自定義的網頁包含脚本(content-script.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                                    //                         // chrome.runtime.sendMessage(
                                                    //                         //     {
                                                    //                         //         "message": 'userInterface->background:CollectEnd',
                                                    //                         //         "error": "All completed.",
                                                    //                         //         "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    //                         //         // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    //                         //         "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    //                         //         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    //                         //         "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    //                         //         "url": String(windowHandle_2.document.location.href),
                                                    //                         //         // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(0),  // (parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    //                         //         "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                    //                         //         "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    //                         //         "Current_Second_Level_Page_Number": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                    //                         //         "Maximum_Second_Level_Page_Number": parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    //                         //         "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                    //                         //     },  // 發送的具體數據，可以是 JSON 對象;
                                                    //                         //     (response_Data) => {
                                                    //                         //         // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                    //                         //         // console.log(response_Data);
                                                    //                         //         // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                    //                         //         // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                                    //                         //         if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                    //                         //             // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                         //             // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                         //             console.log('background instruction: { Stop collecting }.');
                                                    //                         //             PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //                         //             console.log('{ Stand By }.');
                                                    //                         //         };
                                                    //                         //         if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                                    //                         //             // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                         //             // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                         //             console.log('Backing previous page.');
                                                    //                         //             windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                                    //                         //         };
                                                    //                         //         if (response_Data["message"] === "background->userInterface:StandBy") {
                                                    //                         //             // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                         //             // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                         //             console.log('background instruction: { StandBy }.');
                                                    //                         //         };
                                                    //                         //     }
                                                    //                         // );

                                                    //                         // // 清除跳頁之後的延時操作;
                                                    //                         // for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                                    //                         //     windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                                    //                         // };
                                                    //                         // /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                                                    //                         // windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                                    //                         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) - parseInt(1)) + " > 頁成，盡. }";
                                                    //                         };

                                                    //                         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                    //                             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                    //                             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                    //                             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                    //                             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                                    //                         };
                                                    //                         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                                    //                         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                                    //                         // };
                                                    //                         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                    //                             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                    //                             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                                    //                         };
                                                    //                         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                    //                             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                                    //                         };

                                                    //                         PublicVariableStartORStopCollectDataButtonClickState = true;

                                                    //                         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                    //                             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                    //                             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                                    //                         };

                                                    //                         // return "CollectEnd";
                                                    //                     };
                                                    //                 }
                                                    //             );
                                                    //         } else {
                                                    //             // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                                    //             chrome.runtime.sendMessage(
                                                    //                 {
                                                    //                     "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                                    //                     "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                                    //                     "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                    //                     // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                    //                     "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                    //                     "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                    //                     "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                    //                     "url": String(windowHandle_2.document.location.href),
                                                    //                     // "page_number": String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                    //                     "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                    //                     "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                    //                     "Current_Second_Level_Page_Number": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                    //                     "Maximum_Second_Level_Page_Number": parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                    //                     "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                    //                 },  // 發送的具體數據，可以是 JSON 對象;
                                                    //                 // (response_Data) => {
                                                    //                 //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                    //                 //     // console.log(response_Data);
                                                    //                 //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                    //                 //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                                    //                 //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                    //                 //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                 //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                 //     //     console.log('background instruction: { Stop collecting }.');
                                                    //                 //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                    //                 //     //     console.log('{ Stand By }.');
                                                    //                 //     // };
                                                    //                 //     // if (response_Data["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                                    //                 //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                 //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                 //     //     console.log('Backing previous page.');
                                                    //                 //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                                    //                 //     // };
                                                    //                 //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                                    //                 //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                    //                 //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                    //                 //     //     console.log('background instruction: { StandBy }.');
                                                    //                 //     // };
                                                    //                 // }
                                                    //             );
                                                    //             for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                                                    //                 windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                                                    //             };
                                                    //             /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;
                                                    //             windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                                    //             if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                    //                 windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                    //                 windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                    //                 windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                    //                 windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                    //                 windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                    //                 windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                    //                 windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                                    //             };
                                                    //             // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                                    //             //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                                    //             // };
                                                    //             if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                    //                 windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                    //                 windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                    //                 windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                    //                 windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                    //                 windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                    //                 windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                    //                 windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                                    //             };
                                                    //             PublicVariableStartORStopCollectDataButtonClickState = true;
                                                    //             if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                    //                 // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                    //                 windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                                    //             };
                                                    //             if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                                    //                 windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 個一級頁面失敗. }";
                                                    //             };
                                                    //             alert('從當前第' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁步進至第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' 個一級頁面失敗.' + "\n" + "Next_First_Level_Page_Button_XPath.length === 0" + "\n" + "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.");
                                                    //             return false;
                                                    //         };
                                                    //     };
                                                    // }
                                                );
                                                /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(TemporaryTwoLevelWebCollectResultArray);}; */;
                                                /* alert(TemporaryTwoLevelWebCollectResultArray); */;

                                                CollectedItemNumberInThisPage = parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1);

                                                // // 從當前第二層級頁面返回上一層的第一層級頁面;
                                                // if (XPath_from_Second_Level_Page_to_First_Level_Page.length > 0) {

                                                    // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                                    chrome.runtime.sendMessage(
                                                        {
                                                            "message": 'userInterface->background:Second_return_First',
                                                            "error": "",
                                                            "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                            // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                            "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                            "url": String(windowHandle_2.document.location.href),
                                                            // "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                            "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                            "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                            "Current_Second_Level_Page_Number": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                            "Maximum_Second_Level_Page_Number": parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                            "Return_Number_of_First_Level_Page": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                            "Configuration_Parameters": {
                                                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                                "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                                                "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                                                "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                                                "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                                                "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                                                "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                                                "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                                                "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                                                "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                                                "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                                                "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                                                "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                                                "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                                                "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                                                "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                                                "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                                                            },
                                                            "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                        },  // 發送的具體數據，可以是 JSON 對象;
                                                        // (response_Data) => {
                                                        //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                        //     // console.log(response_Data);
                                                        //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                        //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                                        //     if (response_Data["message"] === "background->userInterface:from_Second_Level_Page_return_First_Level_Page_Error") {
                                                        //         // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                        //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                        //         console.log('background instruction: { Stop collecting }.');
                                                        //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                        //         console.log('{ Stand By }.');
                                                        //     };

                                                        //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                        //     //     console.log('background instruction: { Stop collecting }.');
                                                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                        //     //     console.log('{ Stand By }.');
                                                        //     // };

                                                        //     // if (response_Data["message"] === "background->userInterface:CollectEnd") {
                                                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                        //     //     console.log('background instruction: { Stop collecting }.');
                                                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                        //     //     console.log('{ Stand By }.');
                                                        //     // };
                                                        // }
                                                    );

                                                // } else {

                                                //     // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                                //     chrome.runtime.sendMessage(
                                                //         {
                                                //             "message": 'userInterface->background:StopCollect',  // 'contentScript->background:from_First_Level_Page_to_Second_Level_Page_Error',  // 'from_First_Level_Page_' + String(StartPageNumber) + '_to_Second_Level_Page_Error',
                                                //             "error": "XPath Error:" + "\n" + "Xpath of entry element from second level page return first level page error." + "\n" + "Function Get_Entry_from_Second_Level_Page_to_First_Level_Page() Variable [ FromSecondLevelWebReturnFirstLevelWeb_XPath ] cannot run.",
                                                //             "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                //             // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                //             "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                //             "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                //             "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                //             "url": String(windowHandle_2.document.location.href),
                                                //             "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                //             "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                //             "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                //             "Current_Second_Level_Page_Number": parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                //             "Maximum_Second_Level_Page_Number": parseInt(MaxNumberOfItemInThisFirstLevelWebPage),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                //             "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                                //         },  // 發送的具體數據，可以是 JSON 對象;
                                                //         // (response_Data) => {
                                                //         //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                                //         //     // console.log(response_Data);
                                                //         //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                                //         //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                                //         //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                                //         //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //         //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //         //     //     console.log('background instruction: { Stop collecting }.');
                                                //         //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                                //         //     //     console.log('{ Stand By }.');
                                                //         //     // };

                                                //         //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                                                //         //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //         //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //         //     //     console.log('Backing previous page.');
                                                //         //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                                //         //     // };

                                                //         //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                                //         //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                                //         //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                                //         //     //     console.log('background instruction: { StandBy }.');
                                                //         //     // };
                                                //         // }
                                                //     );

                                                //     // windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                                //     if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                                //         windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                                //     };
                                                //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                                //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                //     };
                                                //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                                //     };
                                                //     if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                                //         windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                                //     };
                                                //     if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                                //         windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                                //     };
                                                //     if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                                //         windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                                //     };
                                                //     if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                                //         windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                                //     };
                                                //     // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                                //     //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                                //     // };
                                                //     if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                                //         windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                                //     };
                                                //     if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                                //         windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                                //     };
                                                //     if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                                //         windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                                //     };
                                                //     if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                                //         windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                                //     };
                                                //     if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                                //         windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                                //     };
                                                //     if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                                //         windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                                //     };
                                                //     if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                                //         windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                                //     };

                                                //     PublicVariableStartORStopCollectDataButtonClickState = true;

                                                //     if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                                //         // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                                //         windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                                //     };

                                                //     alert('當前第' + String(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)) + ' 個二級頁面中返回至一級頁面的入口獲取失敗.' + "\n" + "XPath Error:" + "\n" + "Xpath of entry element from second level page return first level page error." + "\n" + "Function Get_Entry_from_Second_Level_Page_to_First_Level_Page() Variable [ FromSecondLevelWebReturnFirstLevelWeb_XPath ] cannot run.");

                                                //     return false;
                                                // };

                                                level = 'First_Level_Page';  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page';
                                            },

                                            DelayAfterClickReturnFirstLevelWebButton
                                        );

                                    },

                                    ((parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) - parseInt(StartItemNumberInThisStartPage) + parseInt(1) ) * parseInt(DelayAfterClickEntrySecondLevelWebButton))  /* 首頁中循環點擊進入第二層網頁中抓取的每次延遲時間，單位（毫秒），1000 毫秒 === 1 秒; */
                                );

                            })(h);
                        };
                    };

                    function recursion_refresh() {

                        if (parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) > parseInt(EndPageNumber)) {
                            return "CollectEnd";
                        };

                        /* 循環周期時長（單位毫秒）輸入文本框 input 的值; */;
                        /* // Interval_Of_Circle_Click_value = parseInt(1000);  // 1000 毫秒; */;
                        if (windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput") !== null) {
                            Interval_Of_Circle_Click_value = parseInt(windowHandle_1.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
                        };
                        /* // Randomization_Relative_Interval = parseFloat(0.2);  // Interval_Of_Circle_Click_value * 0.2; */
                        if (windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput") !== null) {
                            Randomization_Relative_Interval = parseFloat(windowHandle_1.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
                        };
                        // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                        Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                        /* // 只抓取第一層網頁中數據的參數; */
                        /* DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
                        /* DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
                        /* DelayAfterClickEntrySecondLevelWebButton = parseInt(0); */  /* 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
                        /* DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value); */  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
                        /* IntervalOfCircleClickNextPageButton = parseInt(0); */  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
                        /* // 抓取第一層網頁中的數據，然後自動進入第二層網頁，抓取第二層網頁中的數據，然後再返回第一層網頁，循環往復，的參數; */
                        DelayAfterClickFirstLevelWebSkipPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2);  /* parseInt(2000) 單擊跳頁按鈕之後的延遲等待時長，單位毫秒; */
                        DelayAfterClickFirstLevelWebNextPageButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 單擊下一頁按鈕之後的延遲等待時長，單位毫秒; */
                        DelayAfterClickEntrySecondLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value) * parseInt(2);  /* parseInt(2000) 從第一層網頁中單擊進入第二層網頁後的延遲等待時長，單位毫秒; */
                        DelayAfterClickReturnFirstLevelWebButton = parseInt(Randomization_Interval_Of_Circle_Click_value);  /* parseInt(1000) 從第二層網頁中單擊返回第一層網頁後的延遲等待時長，單位毫秒; */
                        IntervalOfCircleClickNextPageButton = parseInt(0);  /* 循環點擊下一頁按鈕的間隔時長，單位毫秒; */
                        /* IntervalOfCircleClickNextPageButton = parseInt(DelayAfterClickEntrySecondLevelWebButton) * ( parseInt(MaxNumberOfItemInThisFirstLevelWebPage) - parseInt(StartEntryNumber) + parseInt(1) ) + parseInt(DelayAfterClickFirstLevelWebNextPageButton); */;

                        // 實時更新最大頁碼信息;
                        EndEntryNumber = parseInt(Maximum_Second_Level_Page_Number);
                        /* 獲取最大可采集的頁面數目序號，和當前所在網頁的序號; */;
                        MaximumPageNumber = parseInt(Maximum_First_Level_Page_Number);
                        // 刷新當前第一層級網頁序號;
                        Current_First_Level_Page_Number = parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number));
                        CurrentPageNumber = parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number));
                        /* 獲取當前所處的第一層級網頁中，包含的進入第二層級網頁的入口，一共有多少個; */;
                        Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                        // 刷新當前第一層級網頁中正處在的第二層級網頁的序號;
                        Current_Second_Level_Page_Number = parseInt(1);  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page);

                        level = 'First_Level_Page';  // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';  // 當前打開目標數據源網頁的層級類型;

                        if (PublicVariableStartORStopCollectDataButtonClickState) {

                            // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                            chrome.runtime.sendMessage(
                                {
                                    "message": 'userInterface->background:StopCollect',
                                    "error": 'Execution process interrupted ( PublicVariableStartORStopCollectDataButtonClickState === true ).',
                                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                    "url": String(windowHandle_2.document.location.href),
                                    "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Current_Second_Level_Page_Number),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                    "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                    "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                    "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                    "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                    "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                },  // 發送的具體數據，可以是 JSON 對象;
                                // (response_Data) => {
                                //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                //     // console.log(response_Data);
                                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('background instruction: { Stop collecting }.');
                                //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                //     //     console.log('{ Stand By }.');
                                //     // };

                                //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('background instruction: { StandBy }.');
                                //     // };
                                // }
                            );

                            // if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            //     windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + " > 頁 < " + String(CollectedItemNumberInThisPage) +" > 條成，駐. }";
                            // };

                            // windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                            if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                            };
                            // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                            //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                            // };
                            if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                            };

                            // PublicVariableStartORStopCollectDataButtonClickState = true;

                            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                            };

                            return "StopCollect";
                        };

                        Current_First_Level_Page_Number = parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number));
                        // Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                        Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page);

                        if (parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1)) <= parseInt(EndPageNumber)) {

                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1));
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                            };

                            if (Next_First_Level_Page_Button_XPath.length > 0) {

                                // Next_JSON["Next_Button_Element"][0].click();
                                if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                    windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至第 < " + String( + parseInt(Current_First_Level_Page_Number) + parseInt(1)) + " > 頁. }";
                                };

                                // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                chrome.runtime.sendMessage(
                                    {
                                        "message": 'userInterface->background:Step_Further_Next_Page',
                                        "error": "",
                                        "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                        // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                        "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                        "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                        "url": String(windowHandle_2.document.location.href),
                                        // "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Current_Second_Level_Page_Number),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                        "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                        "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                        "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                        "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                        "Configuration_Parameters": {
                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                                            "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                                            "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                                            "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                                            "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                                            "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                            "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                                            "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                                            "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                                            "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                                            "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                                            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                                            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                                            "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                                            "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                                            "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                                        },
                                        "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                    },  // 發送的具體數據，可以是 JSON 對象;
                                    // (response_Data) => {
                                    //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                    //     // console.log(response_Data);
                                    //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                    //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                    //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                    //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                    //     //     console.log('background instruction: { Stop collecting }.');
                                    //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                    //     //     console.log('{ Stand By }.');
                                    //     // };

                                    //     if (response_Data["message"] === "background->userInterface:Next_Page_Error") {
                                    //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                    //         // console.log(response_Data["error"]);
                                    //         // console.log(response_Data);

                                    //         for (let g = parseInt(Skip_Sequence_Number); g < ( parseInt(StartPageNumber) - parseInt(CurrentPageNumber) - parseInt(1) ); g++) {
                                    //             windowHandle_1.clearTimeout(Next_Page_SetTimeout_Array[g]);
                                    //         };
                                    //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(Skip_Sequence_Number);}; */;

                                    //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                    //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                    //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(StartPageNumber) + " > 頁失敗. }";
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                    //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                    //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                    //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                    //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                    //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                    //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    //         };
                                    //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                    //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    //         // };
                                    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                    //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                    //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                    //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                    //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                    //             windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                    //             windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    //         };
                                    //         if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                    //             windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    //         };
                                    //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                    //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                    //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                    //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    //         };
                                    //         alert('從當前第' + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + ' 個一級網頁步進至第 ' + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number) + parseInt(1)) + ' 個一級頁面失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Skip_Error' + '\n' + response_Data["error"]);
                                    //         return false;
                                    //     };

                                    //     if (response_Data["message"] === "background->userInterface:Step_Furthering_Next_Page") {
                                    //         console.log('injected script instruction: { Step_Furthering_Next_Page [ ' + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number) + parseInt(1)) + ' ] }.');
                                    //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                    //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(CurrentPageNumber) + parseInt(Skip_Sequence_Number)) + " > 頁. }";
                                    //         };
                                    //         // console.log('injected script instruction: { ' + response_Data["message"] + ' }.');
                                    //         // console.log(response_Data["error"]);
                                    //         // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                    //         // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + response_Data["error"]);
                                    //         // console.log(response_Data);
                                    //         // return false;
                                    //     };
                                    // }
                                );

                            } else {

                                // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                chrome.runtime.sendMessage(
                                    {
                                        "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentPageNumber) + parseInt(1)) + '_Page_Error',
                                        "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                        "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                        // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                        "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                        "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                        "url": String(windowHandle_2.document.location.href),
                                        // "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Current_Second_Level_Page_Number),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                        "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                        "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                        "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                        "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                        "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                    },  // 發送的具體數據，可以是 JSON 對象;
                                    // (response_Data) => {
                                    //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                    //     // console.log(response_Data);
                                    //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                    //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
        
                                    //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                    //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                    //     //     console.log('background instruction: { Stop collecting }.');
                                    //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                    //     //     console.log('{ Stand By }.');
                                    //     // };
        
                                    //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                                    //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                    //     //     console.log('Backing previous page.');
                                    //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                    //     // };
        
                                    //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                    //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                    //     //     console.log('background instruction: { StandBy }.');
                                    //     // };
                                    // }
                                );

                                if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                    windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至第 < " + String( + parseInt(Current_First_Level_Page_Number) + parseInt(1)) + " > 頁失敗. }";
                                };

                                if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                    windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                };
                                if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                    windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                };
                                if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                };
                                if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                    windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                };
                                if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                    windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                };
                                if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                    windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                };
                                if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                    windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                };
                                // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                // };
                                if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                    windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                };
                                if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                    windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                };
                                if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                    windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                };
                                if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                    windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                };
                                if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                    windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                };
                                if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                    windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                };
                                if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                    windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                };

                                PublicVariableStartORStopCollectDataButtonClickState = true;

                                if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                    // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                    windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                };

                                alert('從當前第' + String(Current_First_Level_Page_Number) + ' 個一級網頁步進至第 ' + String(parseInt(Current_First_Level_Page_Number) + parseInt(1)) + ' 個一級頁面失敗.' + "\n" + "Next_First_Level_Page_Button_XPath.length === 0" + "\n" + "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.");

                                return false;
                            };

                            let After_Click_Next_Page_setTimeout = windowHandle_1.setTimeout(

                                function() {

                                    Cycle_Click_Next_Page_Sequence_Number = parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1);

                                    if (PublicVariableStartORStopCollectDataButtonClickState) {

                                        // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                        chrome.runtime.sendMessage(
                                            {
                                                "message": 'userInterface->background:StopCollect',
                                                "error": 'Execution process interrupted ( PublicVariableStartORStopCollectDataButtonClickState === true ).',
                                                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                                "url": String(windowHandle_2.document.location.href),
                                                "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Current_Second_Level_Page_Number),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                                "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                                "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                                "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                                "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                            },  // 發送的具體數據，可以是 JSON 對象;
                                            // (response_Data) => {
                                            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                            //     // console.log(response_Data);
                                            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
        
                                            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //     //     console.log('background instruction: { Stop collecting }.');
                                            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                            //     //     console.log('{ Stand By }.');
                                            //     // };
        
                                            //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                            //     //     console.log('background instruction: { StandBy }.');
                                            //     // };
                                            // }
                                        );
        
                                        if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                            windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + " > 頁 < " + String(CollectedItemNumberInThisPage) +" > 條成，駐. }";
                                        };
        
                                        // windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
        
                                        if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                            windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                        };
                                        if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                            windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                        };
                                        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                        };
                                        if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                            windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                        };
                                        if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                            windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                        };
                                        if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                            windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                        };
                                        if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                            windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                        };
                                        // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                        //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                        // };
                                        if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                            windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                        };
                                        if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                            windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                        };
                                        if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                            windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                        };
                                        if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                            windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                        };
                                        if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                            windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                        };
                                        if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                            windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                        };
                                        if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                            windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                        };
            
                                        // PublicVariableStartORStopCollectDataButtonClickState = true;
            
                                        if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                            // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                            windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                        };
            
                                        return "StopCollect";
                                    };

                                    // 實時更新最大頁碼信息;
                                    EndEntryNumber = parseInt(Maximum_Second_Level_Page_Number);
                                    /* 獲取最大可采集的頁面數目序號，和當前所在網頁的序號; */;
                                    MaximumPageNumber = parseInt(Maximum_First_Level_Page_Number);
                                    // 刷新當前第一層級網頁序號;
                                    Current_First_Level_Page_Number = parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number));
                                    CurrentPageNumber = parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number));
                                    /* 獲取當前所處的第一層級網頁中，包含的進入第二層級網頁的入口，一共有多少個; */;
                                    Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(Maximum_Second_Level_Page_Number);
                                    // 刷新當前第一層級網頁中正處在的第二層級網頁的序號;
                                    // Current_Second_Level_Page_Number = parseInt(1);  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page);

                                    // 刷新起始條目號;
                                    let TemporaryStartItemNumberInThisStartPage = parseInt(1);
                                    if ( parseInt(Cycle_Click_Next_Page_Sequence_Number) > parseInt(0) ) {
        
                                        if (windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel") !== null) {
                                            windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel").innerText = " < " + String(Total_Of_Second_Level_Page_in_Current_First_Level_Page) + " > ";
                                        };
        
                                        Max_of_Item_in_Current_First_Level_Page_Sequence_Array.push([( parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number) )], [parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page)]);
        
                                        if ( parseInt( Max_of_Item_in_Current_First_Level_Page_Sequence_Array[ ( parseInt(2) * parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ] ) > parseInt(1) ) {
        
                                            TemporaryStartItemNumberInThisStartPage = parseInt(Max_of_Item_in_Current_First_Level_Page_Sequence_Array[ ( parseInt(2) * parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ] ) - parseInt( Max_of_Item_in_Current_First_Level_Page_Sequence_Array[ ( parseInt(2) * parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ] ) + parseInt(1);
        
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(TemporaryStartItemNumberInThisStartPage);
                                            };
        
                                        } else {
        
                                            TemporaryStartItemNumberInThisStartPage =  parseInt( Max_of_Item_in_Current_First_Level_Page_Sequence_Array[ ( parseInt(2) * parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ] );
        
                                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(TemporaryStartItemNumberInThisStartPage);
                                            };
        
                                        };
        
                                    } else {
        
                                        TemporaryStartItemNumberInThisStartPage = parseInt(StartEntryNumber);
        
                                        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                            windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(TemporaryStartItemNumberInThisStartPage);
                                        };
                                    };

                                    Interval_of_Circle_Click_Next_Page_Sequence_Array[ ( parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ] = parseInt(DelayAfterClickEntrySecondLevelWebButton) * ( parseInt( Max_of_Item_in_Current_First_Level_Page_Sequence_Array[ ( parseInt(2) * parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ] ) - parseInt(TemporaryStartItemNumberInThisStartPage) + parseInt(1) );

                                    level = 'First_Level_Page';  // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';  // 當前打開目標數據源網頁的層級類型;
                                    // 將第一層級頁面數據的暫存數組（公共變量）置零值;
                                    TemporaryFirstLevelWebCollectResultArray = new Array();  // 公共變量;

                                    /* 自定義函數，讀取當前所在的第一層級頁面中的數據，並循環點擊進入當前第一層級網頁中包含的的第二層級頁面，並讀取第二層級頁面中的目標數據; */;
                                    Open_Second_Level_Pages_in_Current_First_Level_in_Order(
                                        parseInt(StartPageNumber),  // 第一層級頁面自定義的起始采集的頁碼號;
                                        parseInt(Cycle_Click_Next_Page_Sequence_Number),  // 在第一層級頁面中點擊下一頁按鈕次數的序列號;
                                        parseInt(TemporaryStartItemNumberInThisStartPage),  // 采集第二層級頁面的自定義的起始的條目號;
                                        parseInt(EndEntryNumber),  // 采集第二層級頁面的自定義的結束的條目號;
                                        parseInt(Max_of_Item_in_Current_First_Level_Page_Sequence_Array[(parseInt(2) * parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1))]),  // 第二層級的頁面中可采集條目的數目;
                                        // Obtain_First_Level_Page_Data,  // 自定義函數，獲取第一層級頁面中的目標數據;
                                        // Get_Entry_from_First_Level_Page_to_Second_Level_Page,  // 自定義函數，獲取第一層級頁面中進入第二層級網頁的入口元素;
                                        // Obtain_Second_Level_Page_Data,  // 自定義函數，獲取第二層級頁面中的目標數據;
                                        // Get_Entry_from_Second_Level_Page_to_First_Level_Page,  // 自定義函數，獲取從第二層級頁面中返回至第一層級網頁的入口元素;
                                        windowHandle_1,  // 操作界面窗口對象;
                                        windowHandle_2,  // 目標數據源頁面窗口對象;
                                        // RetrievalResult_XPath_1,
                                        // EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                                        // SecondLevelWebPageRetrievalResult_XPath,
                                        // FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 當前所處的第二層級網頁中返回至第一層級頁面的入口的網頁元素的 XPath 值字符串;
                                        ResultExhibitsDivID,  // 展示采集到的數據結果的網頁 div 元素的 ID 號碼;
                                        ResultExhibitsDivTagTableID,  // 展示采集到的數據結果的網頁 table 元素的 ID 號碼;
                                        DisplayData  // 自定義函數用於在網頁頁面中展示采集到的結果;
                                    );

                                    First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[Cycle_Click_Next_Page_Sequence_Number] = windowHandle_1.setTimeout(
                                        recursion_refresh,
                                        Interval_of_Circle_Click_Next_Page_Sequence_Array[ ( parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ]
                                    );

                                },

                                parseInt(DelayAfterClickFirstLevelWebNextPageButton)  /* 循環點擊下一頁按鈕後，每次等待載入的延遲時間，單位（毫秒），1000 毫秒 === 1 秒; */

                            );

                            return "Collecting < " + String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + " >";

                        } else if (parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1)) > parseInt(EndPageNumber) && parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1)) < parseInt(MaximumPageNumber) ) {

                            // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                            chrome.runtime.sendMessage(
                                {
                                    "message": 'userInterface->background:CollectEnd',
                                    "error": "All completed.",
                                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                    "url": String(windowHandle_2.document.location.href),
                                    // "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Current_Second_Level_Page_Number),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                    "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                    "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                    "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                    "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                    "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                },  // 發送的具體數據，可以是 JSON 對象;
                                // (response_Data) => {
                                //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                //     // console.log(response_Data);
                                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('background instruction: { Stop collecting }.');
                                //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                //     //     console.log('{ Stand By }.');
                                //     // };

                                //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('Backing previous page.');
                                //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                //     // };

                                //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('background instruction: { StandBy }.');
                                //     // };
                                // }
                            );

                            // windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                            if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + " > 頁成, 終. }";
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1));
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                            };
                            if (windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel") !== null) {
                                windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel").innerText = "";
                            };
                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value = String(parseInt(EndPageNumber) + parseInt(1));
                            };

                            if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                            };
                            // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                            //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                            // };
                            if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                            };

                            PublicVariableStartORStopCollectDataButtonClickState = true;

                            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                            };

                            return "CollectEnd";

                        } else {

                            // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                            chrome.runtime.sendMessage(
                                {
                                    "message": 'userInterface->background:CollectEnd',
                                    "error": "All completed.",
                                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                    "url": String(windowHandle_2.document.location.href),
                                    // "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Current_Second_Level_Page_Number),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                    "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                    "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                    "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                    "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                    "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                },  // 發送的具體數據，可以是 JSON 對象;
                                // (response_Data) => {
                                //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                //     // console.log(response_Data);
                                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                                //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('background instruction: { Stop collecting }.');
                                //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                //     //     console.log('{ Stand By }.');
                                //     // };

                                //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('Backing previous page.');
                                //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                //     // };

                                //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('background instruction: { StandBy }.');
                                //     // };
                                // }
                            );

                            // windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                            if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number) - parseInt(1)) + " > 頁成，盡. }";
                            };

                            if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                            };
                            // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                            //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                            // };
                            if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                            };

                            PublicVariableStartORStopCollectDataButtonClickState = true;

                            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                            };

                            return "CollectEnd";
                        };

                        // return true;
                    };

                    let CollectedItemNumberInThisPage = parseInt(0);

                    /* 序貫進入第二層級頁面; */;
                    if (XPath_from_First_Level_Page_to_Second_Level_Page.length > 0) {

                        if (windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel") !== null) {
                            windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel").innerText = " < " + String(Total_Of_Second_Level_Page_in_Current_First_Level_Page) + " > ";
                        };
                        Max_of_Item_in_Current_First_Level_Page_Sequence_Array.push(
                            [
                                ( parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number) )
                            ],
                            [
                                parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page)
                            ]
                        );

                        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value !== "") {
                                StartEntryNumber = parseInt(windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value);
                            };
                        };

                        if ( parseInt(StartEntryNumber) > parseInt(Max_of_Item_in_Current_First_Level_Page_Sequence_Array[( parseInt(2) * parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ])) {

                            // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                            chrome.runtime.sendMessage(
                                {
                                    "message": 'userInterface->background:StopCollect',  // 'contentScript->background:Input_Start_Second_Level_Page_Number_Error',  // 'Input_Start_Second_Level_Page_Number_' + String(StartEntryNumber) + '_Error',
                                    "error": "Input Start Item Number = { " + String(StartEntryNumber) + " } > Max Number Of Item In This Web Page = { " + String(MaxNumberOfItemInThisFirstLevelWebPage) + " }.",
                                    "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                    // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                    "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                    "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                    "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                    "url": String(windowHandle_2.document.location.href),
                                    "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                    "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                    "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                    "Current_Second_Level_Page_Number": parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                    "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                    "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                },  // 發送的具體數據，可以是 JSON 對象;
                                // (response_Data) => {
                                //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                //     // console.log(response_Data);
                                //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
    
                                //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('background instruction: { Stop collecting }.');
                                //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                //     //     console.log('{ Stand By }.');
                                //     // };

                                //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('Backing previous page.');
                                //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                //     // };

                                //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                //     //     console.log('background instruction: { StandBy }.');
                                //     // };
                                // }
                            );

                            alert("在當前第一層級網頁 " + String(StartPageNumber) + " 中的採集起始第二層級網頁的序號值輸入錯誤." + " \n Input Start Item Number = { " + String(StartEntryNumber) + " } \n Max Number Of Item In This Web Page = { " + String(Total_Of_Second_Level_Page_in_Current_First_Level_Page) + " } \n " + "當前第一層級網頁 " + String(StartPageNumber) + " 中的採集起始第二層級網頁的序號值不可大於當前第一層級網頁 " + String(StartPageNumber) + " 中的採集終止第二層級網頁的序號值.");

                            windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                            if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                            };
                            // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                            //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                            // };
                            if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                            };
                            if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                            };
    
                            PublicVariableStartORStopCollectDataButtonClickState = true;
    
                            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                            };
    
                            return false;
                        };

                        Interval_of_Circle_Click_Next_Page_Sequence_Array[ ( parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ] = parseInt(DelayAfterClickEntrySecondLevelWebButton) * ( parseInt( Max_of_Item_in_Current_First_Level_Page_Sequence_Array[ ( parseInt(2) * parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1) ) ] ) - parseInt(StartEntryNumber) + parseInt(1) );

                        // if (!windowHandle_1.console) { windowHandle_1.console = { log:function(){} }; } else { windowHandle_1.console.log( String(StartPageNumber) + " . " + String(StartEntryNumber) + "  ～  " + String(EndEntryNumber) ); };

                        /* 自定義函數，讀取當前所在的第一層級頁面中的數據，並循環點擊進入當前第一層級網頁中包含的的第二層級頁面，並讀取第二層級頁面中的目標數據; */;
                        Open_Second_Level_Pages_in_Current_First_Level_in_Order(
                            parseInt(StartPageNumber),  // 第一層級頁面自定義的起始采集的頁碼號;
                            parseInt(Cycle_Click_Next_Page_Sequence_Number),  // 在第一層級頁面中點擊下一頁按鈕次數的序列號;
                            parseInt(StartEntryNumber),  // 采集第二層級頁面的自定義的起始的條目號;
                            parseInt(EndEntryNumber),  // 采集第二層級頁面的自定義的結束的條目號;
                            parseInt(Max_of_Item_in_Current_First_Level_Page_Sequence_Array[(parseInt(2) * parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1))]),  // 第二層級的頁面中可采集條目的數目;
                            // Obtain_First_Level_Page_Data,  // 自定義函數，獲取第一層級頁面中的目標數據;
                            // Get_Entry_from_First_Level_Page_to_Second_Level_Page,  // 自定義函數，獲取第一層級頁面中進入第二層級網頁的入口元素;
                            // Obtain_Second_Level_Page_Data,  // 自定義函數，獲取第二層級頁面中的目標數據;
                            // Get_Entry_from_Second_Level_Page_to_First_Level_Page,  // 自定義函數，獲取從第二層級頁面中返回至第一層級網頁的入口元素;
                            windowHandle_1,  // 操作界面窗口對象;
                            windowHandle_2,  // 目標數據源頁面窗口對象;
                            // RetrievalResult_XPath_1,
                            // EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                            // SecondLevelWebPageRetrievalResult_XPath,
                            // FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 當前所處的第二層級網頁中返回至第一層級頁面的入口的網頁元素的 XPath 值字符串;
                            ResultExhibitsDivID,  // 展示采集到的數據結果的網頁 div 元素的 ID 號碼;
                            ResultExhibitsDivTagTableID,  // 展示采集到的數據結果的網頁 table 元素的 ID 號碼;
                            DisplayData  // 自定義函數用於在網頁頁面中展示采集到的結果;
                        );

                        /* 第一頁抓取完畢之後的遞歸延遲抓取 { Function recursion_refresh() } ，以及判斷是否中止退出遞歸; */;
                        First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[0] = windowHandle_1.setTimeout(

                            function() {

                                let FunctionRefreshReturnValue = recursion_refresh();
                                if (FunctionRefreshReturnValue === "StopCollect") {

                                    // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                    chrome.runtime.sendMessage(
                                        {
                                            "message": 'userInterface->background:StopCollect',
                                            "error": 'Execution process interrupted ( PublicVariableStartORStopCollectDataButtonClickState === true ).',
                                            "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            "url": String(windowHandle_2.document.location.href),
                                            "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Current_Second_Level_Page_Number),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                            "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                            "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                        },  // 發送的具體數據，可以是 JSON 對象;
                                        // (response_Data) => {
                                        //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                        //     // console.log(response_Data);
                                        //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                        //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
            
                                        //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                        //     //     console.log('background instruction: { Stop collecting }.');
                                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                        //     //     console.log('{ Stand By }.');
                                        //     // };

                                        //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                        //     //     console.log('Backing previous page.');
                                        //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                        //     // };

                                        //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                        //     //     console.log('background instruction: { StandBy }.');
                                        //     // };
                                        // }
                                    );

                                    // windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                    if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                        windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                        windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                        windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                        windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    };
                                    // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                    //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // };
                                    if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                        windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                        windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                        windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                        windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                        windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                        windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                        windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    };
            
                                    PublicVariableStartORStopCollectDataButtonClickState = true;
            
                                    if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                        // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                        windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    };
            
                                    return "StopCollect";
                                };
                                if (FunctionRefreshReturnValue === "FunctionNextPageReturnValueFalse") {

                                    // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                    chrome.runtime.sendMessage(
                                        {
                                            "message": 'userInterface->background:StopCollect',  // 'contentScript->background:Next_Page_Error',  // 'contentScript->background:Next_to_' + String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1)) + '_Page_Error',
                                            "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                            "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            "url": String(windowHandle_2.document.location.href),
                                            "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Current_Second_Level_Page_Number),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                            "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                            "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                        },  // 發送的具體數據，可以是 JSON 對象;
                                        // (response_Data) => {
                                        //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                        //     // console.log(response_Data);
                                        //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                        //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
            
                                        //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                        //     //     console.log('background instruction: { Stop collecting }.');
                                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                        //     //     console.log('{ Stand By }.');
                                        //     // };

                                        //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                        //     //     console.log('Backing previous page.');
                                        //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                        //     // };

                                        //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                        //     //     console.log('background instruction: { StandBy }.');
                                        //     // };
                                        // }
                                    );

                                    // windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                    if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                        windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                        windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                        windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                        windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    };
                                    // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                    //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // };
                                    if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                        windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                        windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                        windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                        windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                        windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                        windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                        windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    };

                                    PublicVariableStartORStopCollectDataButtonClickState = true;

                                    if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                        // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                        windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    };

                                    return false;
                                };
                                if (FunctionRefreshReturnValue === "CollectEnd") {

                                    // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                    chrome.runtime.sendMessage(
                                        {
                                            "message": 'userInterface->background:StopCollect',  // 'contentScript->background:CollectEnd',
                                            "error": "All completed.",
                                            "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            "url": String(windowHandle_2.document.location.href),
                                            "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Current_Second_Level_Page_Number),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                            "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                            "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                                        },  // 發送的具體數據，可以是 JSON 對象;
                                        // (response_Data) => {
                                        //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                        //     // console.log(response_Data);
                                        //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                                        //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
            
                                        //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                        //     //     console.log('background instruction: { Stop collecting }.');
                                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                        //     //     console.log('{ Stand By }.');
                                        //     // };

                                        //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                        //     //     console.log('Backing previous page.');
                                        //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                        //     // };

                                        //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                                        //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                                        //     //     console.log('background instruction: { StandBy }.');
                                        //     // };
                                        // }
                                    );

                                    windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                                    if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                        windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                        windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                        windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                        windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    };
                                    // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                                    //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // };
                                    if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                        windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                        windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                        windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                        windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                                        windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                        windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    };
                                    if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                        windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    };

                                    PublicVariableStartORStopCollectDataButtonClickState = true;

                                    if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                                        // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                        windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    };

                                    return true;
                                };

                            },

                            parseInt(Interval_of_Circle_Click_Next_Page_Sequence_Array[1])  /* 等待第一頁抓取完畢之後，判斷是否繼續循環抓取的延遲時間，單位（毫秒），1000 毫秒 === 1 秒; */

                        );

                    } else {

                        // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                        chrome.runtime.sendMessage(
                            {
                                "message": 'userInterface->background:StopCollect',  // 'contentScript->background:from_First_Level_Page_to_Second_Level_Page_Error',  // 'from_First_Level_Page_' + String(StartPageNumber) + '_to_Second_Level_Page_Error',
                                "error": "XPath Error:" + "\n" + "Xpath of entry element from first level page to second level page error." + "\n" + "Function Get_Entry_from_First_Level_Page_to_Second_Level_Page() Variable [ EntryElementfromFirstLevelPagetoSecondLevelPage_XPath ] cannot run.",
                                "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                "url": String(windowHandle_2.document.location.href),
                                "page_number": String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(Current_Second_Level_Page_Number),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                "Current_First_Level_Page_Number": parseInt(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)),
                                "Maximum_First_Level_Page_Number": parseInt(MaximumPageNumber),
                                "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                "Maximum_Second_Level_Page_Number": parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                            },  // 發送的具體數據，可以是 JSON 對象;
                            // (response_Data) => {
                            //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                            //     // console.log(response_Data);
                            //     // response_data = JSON.parse(response_Data["data"], function (key, value) {});
                            //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                            //     // if (response_Data["message"] === "background->userInterface:StopCollect") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('background instruction: { Stop collecting }.');
                            //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                            //     //     console.log('{ Stand By }.');
                            //     // };

                            //     // if (response_Data["message"] === "background->contentScript:Step_Back_Previous_Page") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('Backing previous page.');
                            //     //     windowHandle_2.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                            //     // };

                            //     // if (response_Data["message"] === "background->userInterface:StandBy") {
                            //     //     // console.log('background instruction: { ' + response_Data["message"] + ' }.');
                            //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
                            //     //     console.log('background instruction: { StandBy }.');
                            //     // };
                            // }
                        );

                        // windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;

                        if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                            windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                            windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                            windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                            windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                            windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        };
                        // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                        //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        // };
                        if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                            windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                            windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                            windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                            windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataServerUrlInput") !== null) {
                            windowHandle_1.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                            windowHandle_1.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                        };
                        if (windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                            windowHandle_1.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                        };
        
                        PublicVariableStartORStopCollectDataButtonClickState = true;
        
                        if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                            // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                            windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        };

                        alert('當前第' + String(StartPageNumber) + ' 個一級網頁中進入二級頁面入口獲取失敗.' + "\n" + "XPath Error:" + "\n" + "Xpath of entry element from first level page to second level page error." + "\n" + "Function Get_Entry_from_First_Level_Page_to_Second_Level_Page() Variable [ EntryElementfromFirstLevelPagetoSecondLevelPage_XPath ] cannot run.");

                        return false;
                    };

                },

                parseInt(Skip_Delay)  /* 根據輸入的抓取起始頁號碼，跳頁之後的等待載入的延遲時間，單位（毫秒），1000 毫秒 === 1 秒; */
            );

            return true;
            // break;
        };

        case 3: {
            return true;
            // break;
        };

        default: {
            alert("Function: StartORStopCollectData(Parameter1)" + "\n" + "<Parameter1> input Error !" + "\n" + String(BranchSwitch));
        };
    };
};

function CollectResultFromMemoryToHardDisk(
    windowHandle_1,  // 人機交互操作界面窗口對象;
    BranchSwitch,  // "1", "2", 保存數據為一維數組還是二維數組判別參數的整數值字符串;
    Column_Interval_Symbol,  // "<fenliejiangefuhao>", 從硬盤 .csv 文檔讀取數據時的自定義分列間隔符號字符串;
    Row_Interval_Symbol,  // "\n", 從硬盤 .csv 文檔讀取數據時的自定義分行間隔符號（換行符）字符串;
    PublicVariableCollectResultStoredStringArray  // 保存數據的數組變量;
    // DisplayData  // 自定義函數，在結果承載窗口頁面展示采集到的數據;
){

    /* // var PublicVariableCollectResultStoredStringArray = new Array(); */;

    switch(BranchSwitch) {

        /* // 保存一維數組; */
        case "1": {

            /* alert(typeof PublicVariableCollectResultStoredStringArray); */;
            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(PublicVariableCollectResultStoredStringArray.length);}; */;
            /* alert(PublicVariableCollectResultStoredStringArray.length); */;

            let CollectResultStoredString = "";

            if (!(PublicVariableCollectResultStoredStringArray === null || typeof(PublicVariableCollectResultStoredStringArray) === "undefined")) {
                let TemporaryPublicVariableCollectResultStoredStringArray = new Array();
                for (let j in PublicVariableCollectResultStoredStringArray) {
                    if (PublicVariableCollectResultStoredStringArray[j] !== "") {
                        TemporaryPublicVariableCollectResultStoredStringArray.push(PublicVariableCollectResultStoredStringArray[j]);
                    };
                };
                /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(TemporaryPublicVariableCollectResultStoredStringArray.length);}; */;
                /* alert(TemporaryPublicVariableCollectResultStoredStringArray.length); */;

                if (!(TemporaryPublicVariableCollectResultStoredStringArray === null || typeof(TemporaryPublicVariableCollectResultStoredStringArray) === "undefined")) {
                    CollectResultStoredString = TemporaryPublicVariableCollectResultStoredStringArray.join("," + Row_Interval_Symbol);
                    /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CollectResultStoredString);}; */;
                    /* alert(CollectResultStoredString); */;
                };

                /*
                for (let j in TemporaryPublicVariableCollectResultStoredStringArray) {
                    if (TemporaryPublicVariableCollectResultStoredStringArray[j] !== "") {
                        CollectResultStoredString = CollectResultStoredString + TemporaryPublicVariableCollectResultStoredStringArray[j] + "," + "\n";
                        if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CollectResultStoredString);};
                        /// alert(CollectResultStoredString);
                    };
                };
                */;
            };

            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(typeof CollectResultStoredString);}; */;
            /* alert(typeof CollectResultStoredString); */;
            if (!windowHandle_1.console) { windowHandle_1.console = { log:function(){} }; } else { windowHandle_1.console.log(CollectResultStoredString); };

            /* CollectResultStoredString = encodeURIComponent(CollectResultStoredString); */;  /* 將等待下載為 .CSV 文檔的字符串轉換爲 encodeURIComponent 編碼，不然下載之後的 .CSV 文檔不識別 \n 換行符; */;
            CollectResultStoredString = "\ufeff" + CollectResultStoredString;  /* 給下載的字符串加上 “\ufeff” 的 BOM 頭，不然下載的文檔用  Microsoft-Office-Excel 打開時中文亂碼; */;

            /* let CollectResultDivTemporaryBLOB = new Blob([CollectResultStoredString],{"type":"text/html/csv/application/octet-stream/vnd.ms-excel;charset=UTF-8, \ufeff"}); */;  /* 表示下載的文檔用 UTF-8 編碼，不然下載的文檔打開時中文顯示亂碼; */;
            /* let CollectResultDivTemporaryBLOB = new Blob([windowHandle_1.document.getElementById("ResultExhibitsDivTagCenter").innerHTML],{"type":"text/html/csv;charset=UTF-8"}); */;
            let CollectResultDivTemporaryBLOB = new Blob([CollectResultStoredString],{"type":"text/html/csv;charset=UTF-8"});  /* 表示下載的文檔用 UTF-8 編碼，不然下載的文檔打開時中文顯示亂碼; */;
            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CollectResultDivTemporaryBLOB);}; */;
            /* alert(CollectResultDivTemporaryBLOB); */;

            let CollectResultFromMemoryToHardDiskTemporaryLink = windowHandle_1.document.createElement("a");
            CollectResultFromMemoryToHardDiskTemporaryLink.setAttribute("id", "CollectResultFromMemoryToHardDiskTemporaryLink");
            CollectResultFromMemoryToHardDiskTemporaryLink.innerHTML = "Collect Result from Memory to HardDisk";
            CollectResultFromMemoryToHardDiskTemporaryLink.style.display = "none";
            CollectResultFromMemoryToHardDiskTemporaryLink.target = "blank";
            CollectResultFromMemoryToHardDiskTemporaryLink.download = "BackupFileName.csv";
            CollectResultFromMemoryToHardDiskTemporaryLink.href = windowHandle_1.URL.createObjectURL(CollectResultDivTemporaryBLOB);

            windowHandle_1.document.getElementById("OperationModuleDiv").appendChild(CollectResultFromMemoryToHardDiskTemporaryLink);
            windowHandle_1.document.getElementById("CollectResultFromMemoryToHardDiskTemporaryLink").click();
            windowHandle_1.document.getElementById("OperationModuleDiv").removeChild(CollectResultFromMemoryToHardDiskTemporaryLink);

            /*
            let TemporaryCollectResultStoredString = CollectResultStoredString;
            let TemporaryCollectResultStoredStringArray = new Array();
            TemporaryCollectResultStoredStringArray = TemporaryCollectResultStoredString.split(",\n");
            if (TemporaryCollectResultStoredStringArray.sort().toString() === TemporaryPublicVariableCollectResultStoredStringArray.sort().toString()) {
                alert("存檔的抓取結果字符中含有保留區隔字符."+"\\n"+"半角逗號：{ , }；換行符：{ u000A }."+"\\n"+"進行第二次採集時如果想上傳此存檔接續，解析時可能會有差錯.");
            };
            */;

            return CollectResultStoredString;
            // break;
        };

        /* // 保存二維數組; */
        case "2": {

            /* alert(typeof PublicVariableCollectResultStoredStringArray); */;
            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(PublicVariableCollectResultStoredStringArray.length);}; */;
            /* alert(PublicVariableCollectResultStoredStringArray.length); */;

            let CollectResultStoredString = "";

            if (!(PublicVariableCollectResultStoredStringArray === null || typeof(PublicVariableCollectResultStoredStringArray) === "undefined")) {
                let TemporaryPublicVariableCollectResultStoredStringArray = new Array();
                for (let j in PublicVariableCollectResultStoredStringArray) {
                    if (PublicVariableCollectResultStoredStringArray[j] !== "") {
                        TemporaryPublicVariableCollectResultStoredStringArray.push(PublicVariableCollectResultStoredStringArray[j]);
                    };
                };
                /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(TemporaryPublicVariableCollectResultStoredStringArray.length);}; */;
                /* alert(TemporaryPublicVariableCollectResultStoredStringArray.length); */;

                if (!(TemporaryPublicVariableCollectResultStoredStringArray === null || typeof(TemporaryPublicVariableCollectResultStoredStringArray) === "undefined")) {
                    let TemporaryCollectSecondLevelWebResultStoredStringArray = new Array();
                    for (let j in TemporaryPublicVariableCollectResultStoredStringArray) {
                        if (TemporaryPublicVariableCollectResultStoredStringArray[j] !== "") {
                            let TemporaryCollectSecondLevelWebResultStoredString = TemporaryPublicVariableCollectResultStoredStringArray[j].join(String(Column_Interval_Symbol));
                            TemporaryCollectSecondLevelWebResultStoredStringArray.push(TemporaryCollectSecondLevelWebResultStoredString);
                            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(TemporaryCollectSecondLevelWebResultStoredStringArray);}; */;
                            /* alert(TemporaryCollectSecondLevelWebResultStoredStringArray); */;
                        };
                    };
                    CollectResultStoredString = TemporaryCollectSecondLevelWebResultStoredStringArray.join(String(Column_Interval_Symbol + Row_Interval_Symbol));
                    /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CollectResultStoredString);}; */;
                    /* alert(CollectResultStoredString); */;
                };

                /*
                for (let j in TemporaryPublicVariableCollectResultStoredStringArray) {
                    if (TemporaryPublicVariableCollectResultStoredStringArray[j] !== "") {
                        CollectResultStoredString = CollectResultStoredString + TemporaryPublicVariableCollectResultStoredStringArray[j] + "," + "\n";
                        if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CollectResultStoredString);};
                        /// alert(CollectResultStoredString);
                    };
                };
                */;
            };

            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(typeof CollectResultStoredString);}; */;
            /* alert(typeof CollectResultStoredString); */;
            if (!windowHandle_1.console) { windowHandle_1.console = { log:function(){} }; } else { windowHandle_1.console.log(CollectResultStoredString); };

            /* CollectResultStoredString = encodeURIComponent(CollectResultStoredString); */;  /* 將等待下載為 .CSV 文檔的字符串轉換爲 encodeURIComponent 編碼，不然下載之後的 .CSV 文檔不識別 \n 換行符; */;
            CollectResultStoredString = "\ufeff" + CollectResultStoredString;  /* 給下載的字符串加上 “\ufeff” 的 BOM 頭，不然下載之後的文檔  Microsoft-Office-Excel 打開時中文亂碼; */;

            /* let CollectResultDivTemporaryBLOB = new Blob([CollectResultStoredString],{"type":"text/html/csv/application/octet-stream/vnd.ms-excel;charset=UTF-8, \ufeff"}); */;  /* 表示下載的文檔用 UTF-8 編碼，不然下載的文檔打開時中文顯示亂碼; */;
            /* let CollectResultDivTemporaryBLOB = new Blob([windowHandle_1.document.getElementById("ResultExhibitsDivTagCenter").innerHTML],{"type":"text/html/csv;charset=UTF-8"}); */;
            let CollectResultDivTemporaryBLOB = new Blob([CollectResultStoredString],{"type":"text/html/csv;charset=UTF-8"});  /* 表示下載的文檔用 UTF-8 編碼，不然下載之後的文檔打開時中文顯示亂碼; */;
            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CollectResultDivTemporaryBLOB);}; */;
            /* alert(CollectResultDivTemporaryBLOB); */;

            let CollectResultFromMemoryToHardDiskTemporaryLink = windowHandle_1.document.createElement("a");
            CollectResultFromMemoryToHardDiskTemporaryLink.setAttribute("id", "CollectResultFromMemoryToHardDiskTemporaryLink");
            CollectResultFromMemoryToHardDiskTemporaryLink.innerHTML = "Collect Result from Memory to HardDisk";
            CollectResultFromMemoryToHardDiskTemporaryLink.style.display = "none";
            CollectResultFromMemoryToHardDiskTemporaryLink.target = "blank";
            CollectResultFromMemoryToHardDiskTemporaryLink.download = "BackupFileName.csv";
            CollectResultFromMemoryToHardDiskTemporaryLink.href = windowHandle_1.URL.createObjectURL(CollectResultDivTemporaryBLOB);

            windowHandle_1.document.getElementById("OperationModuleDiv").appendChild(CollectResultFromMemoryToHardDiskTemporaryLink);
            windowHandle_1.document.getElementById("CollectResultFromMemoryToHardDiskTemporaryLink").click();
            windowHandle_1.document.getElementById("OperationModuleDiv").removeChild(CollectResultFromMemoryToHardDiskTemporaryLink);

            /*
            let TemporaryCollectResultStoredString = CollectResultStoredString;
            let TemporaryCollectResultStoredStringArray = new Array();
            TemporaryCollectResultStoredStringArray = TemporaryCollectResultStoredString.split(",\\n");
            if (TemporaryCollectResultStoredStringArray.sort().toString() === TemporaryPublicVariableCollectResultStoredStringArray.sort().toString()) {
                alert("存檔的抓取結果字符中含有保留區隔字符."+"\n"+"半角逗號：{ , }；換行符：{ u000A }."+"\\n"+"進行第二次採集時如果想上傳此存檔接續，解析時可能會有差錯.");
            };
            */;

            return CollectResultStoredString;
            // break;
        };

        default: {
            alert("Function: CollectResultFromMemoryToHardDisk(Parameter1)"+"\n"+"<Parameter1> input Error !"+"\n"+ BranchSwitch);
        };
    };
};

function StoredCollectResultFromHardDiskToMemory(
    windowHandle_1,  // 人機交互操作界面窗口對象;
    BranchSwitch,  // "1", "2", 讀取數據為一維數組還是二維數組判別參數的整數值字符串;
    Column_Interval_Symbol,  // "<fenliejiangefuhao>", 保存為 .csv 文檔時的自定義分列間隔符號字符串;
    Row_Interval_Symbol,  // "\n", 從硬盤 .csv 文檔讀取數據時的自定義分行間隔符號（換行符）字符串;
    Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
    ResultExhibitsDivID,  // 讀取到的數據在網頁中展示的 div 元素 ID 值字符串;
    ResultExhibitsDivTagTableID,  // 讀取到的數據在網頁中展示的 table 元素 ID 值字符串;
    PublicVariableResultExhibitsWebPage,  // 讀取到的數據保存數組變量;
    DisplayData  // 自定義函數，在結果承載窗口頁面展示采集到的數據;
){

    /* // var ResultExhibitsDivID = "ResultExhibitsDiv"; */;
    /* // var PublicVariableResultExhibitsWebPage = new Object(); */;
    /* // PublicVariableResultExhibitsWebPage.name = ""; */;

    switch(BranchSwitch) {

        /* // 導入一維數組的數據並展示在網頁表格中; */
        case "1": {
            let StoredCollectResultFromHardDiskToMemoryTemporaryInput = windowHandle_1.document.createElement("input");
            StoredCollectResultFromHardDiskToMemoryTemporaryInput.setAttribute("id", "StoredCollectResultFromHardDiskToMemoryTemporaryInput");
            StoredCollectResultFromHardDiskToMemoryTemporaryInput.setAttribute("type", "file");
            StoredCollectResultFromHardDiskToMemoryTemporaryInput.setAttribute("accept", "text/csv,text/html,text/xml");  /* "accept", "text/html,text/xml,text/csv,application/xml,application/xhtml+xml,application/vnd.ms-excel,application/msword,image/gif,image/jpeg,image/png,image/jpg,text/javascript,text/css,application/javascript,application/json,application/pdf,application/vnd.ms-powerpoint,application/vnd.ms-works,application/xhtml+xml,application/zip"; */;
            /* StoredCollectResultFromHardDiskToMemoryTemporaryInput.multiple = "multiple"; */;
            StoredCollectResultFromHardDiskToMemoryTemporaryInput.style.display = "none";
            /* StoredCollectResultFromHardDiskToMemoryTemporaryInput.innerHTML = "Stored Collect Result from HardDisk to Memory"; */;
            StoredCollectResultFromHardDiskToMemoryTemporaryInput.setAttribute("onchange", "javascript:StoredCollectResultFromHardDiskToMemory(window, '1_FileReader', '" + Column_Interval_Symbol + "', '" + Row_Interval_Symbol + "', '" + Result_Display_Container_Radio_value + "', 'ResultExhibitsDiv', 'ResultExhibitsDivTagTable', PublicVariableResultExhibitsWebPage, '')");
            /* StoredCollectResultFromHardDiskToMemoryTemporaryInput.setAttribute("onpropertychange", "StoredCollectResultFromHardDiskToMemory(window, '1_FileReader', '" + Column_Interval_Symbol + "', '" + Row_Interval_Symbol + "', '" + Result_Display_Container_Radio_value + "', 'ResultExhibitsDiv', 'ResultExhibitsDivTagTable', PublicVariableResultExhibitsWebPage, '')"); */;
            /* StoredCollectResultFromHardDiskToMemoryTemporaryInput.setAttribute("onclick", "javascript:StoredCollectResultFromHardDiskToMemory(window, '1_FileReader', '" + Column_Interval_Symbol + "', '" + Row_Interval_Symbol + "', '" + Result_Display_Container_Radio_value + "', 'ResultExhibitsDiv', 'ResultExhibitsDivTagTable', PublicVariableResultExhibitsWebPage, '')"); */;
            var TemporaryCollectResultStoredStringArray = new Array();

            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput")) {
                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput").click();
            } else {
                windowHandle_1.document.getElementById("OperationModuleDiv").appendChild(StoredCollectResultFromHardDiskToMemoryTemporaryInput);
                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput").click();
            };

            break;
        };

        /* // 導入一維數組的數據並展示在網頁表格中; */
        case "1_FileReader": {

            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput").value !== "") {

                let FileString = windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput").files[0];  /* 獲取上傳的文檔流; */;
                /* FileString.name */;  /* 獲取上傳的文檔名; */;
                let FileStringReader = new FileReader();
                FileStringReader.readAsText(FileString, "UTF-8");  /* .readAsText 以文本形式讀取完文檔; */;
                /* 以超級鏈接地址形式讀取完文檔 .readAsDataURL ，以二進制形式讀取完文檔 .readAsBinaryString ; */;

                /* 讀取完文檔之後會回到這裏; */;
                FileStringReader.onload = function(InputFileReader) {

                    if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                        windowHandle_1.document.getElementById("StartORStopCollectDataButton").disabled = "disabled";
                    };
                    if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").disabled = "disabled";
                    };
                    if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").disabled = "disabled";
                    };

                    let StoredCollectResultFromHardDiskToMemoryFileString = InputFileReader.target.result;
                    /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(StoredCollectResultFromHardDiskToMemoryFileString);}; */;
                    /* alert(StoredCollectResultFromHardDiskToMemoryFileString); */;
                    /* alert(typeof StoredCollectResultFromHardDiskToMemoryFileString); */;

                    let TemporaryStoredCollectResultFromHardDiskToMemoryFileString = StoredCollectResultFromHardDiskToMemoryFileString;
                    TemporaryCollectResultStoredStringArray = new Array();
                    if (TemporaryStoredCollectResultFromHardDiskToMemoryFileString.indexOf(",\n") !== -1) {
                        TemporaryCollectResultStoredStringArray = TemporaryStoredCollectResultFromHardDiskToMemoryFileString.split(",\n");
                    };

                    let TemporaryCollectResultStoredStringArrayEffectiveLength = 0;
                    if (!(TemporaryCollectResultStoredStringArray === null || typeof(TemporaryCollectResultStoredStringArray) === "undefined")) {
                        for (let j in TemporaryCollectResultStoredStringArray) {
                            if (TemporaryCollectResultStoredStringArray[j] !== "") {
                                PublicVariableCollectResultStoredStringArray.push(TemporaryCollectResultStoredStringArray[j]);
                                TemporaryCollectResultStoredStringArrayEffectiveLength = parseInt(TemporaryCollectResultStoredStringArrayEffectiveLength) + parseInt(1);
                            };
                        };
                    };
                    /* alert(typeof PublicVariableCollectResultStoredStringArray); */;
                    /* alert(PublicVariableCollectResultStoredStringArray.length); */;
                    if (!windowHandle_1.console) { windowHandle_1.console = { log:function(){} }; } else { windowHandle_1.console.log(PublicVariableCollectResultStoredStringArray); };

                    if (!(TemporaryCollectResultStoredStringArray === null || typeof(TemporaryCollectResultStoredStringArray) === "undefined")) {

                        if (!(ResultExhibitsDivID === '' && ResultExhibitsDivTagTableID === '') && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                            /* 下面代碼將備份的抓取結果重新導入後，展示在網頁元素 DIV 塊 ResultExhibitsDiv 中; */;
                            for (let j in TemporaryCollectResultStoredStringArray) {
                                if (TemporaryCollectResultStoredStringArray[j] !== "") {
                                    let RetrievalResultEntryNumber = parseInt(j) + parseInt(1);
                                    let RetrievalResultEntryDate = Date();
                                    /* let RetrievalResultEntryDate = new Date().toLocaleString(); */;
                                    let RetrievalResultId = "StoredRetrievalResult" + RetrievalResultEntryNumber + RetrievalResultEntryDate;
                                    DisplayData(
                                        windowHandle_1,
                                        Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                        TemporaryCollectResultStoredStringArray[j],
                                        ResultExhibitsDivID,
                                        ResultExhibitsDivTagTableID,
                                        RetrievalResultId
                                    );
                                    /* windowHandle_1.document.getElementById(RetrievalResultId).scrollIntoView(false); */;  /* 網頁滾動條滑到 RetrievalResultId 元素的位置; */;
                                };
                            };
    
                            /* 下面代碼將備份的抓取結果重新導入後，展示在新創建打開的網頁 window 窗口 PublicVariableResultExhibitsWebPage 中; */;
                            if (PublicVariableResultExhibitsWebPage.name !== "") {
                                for (let j in TemporaryCollectResultStoredStringArray) {
                                    if (TemporaryCollectResultStoredStringArray[j] !== "") {
                                        let RetrievalResultEntryNumber = parseInt(j) + parseInt(1);
                                        let RetrievalResultEntryDate = Date();
                                        /* let RetrievalResultEntryDate = new Date().toLocaleString(); */;
                                        let RetrievalResultId = "StoredRetrievalResult" + RetrievalResultEntryNumber + RetrievalResultEntryDate;
                                        DisplayData(
                                            PublicVariableResultExhibitsWebPage,
                                            Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js" , script src="https://unpkg.com/canvas-datagrid"; */
                                            TemporaryCollectResultStoredStringArray[j],
                                            ResultExhibitsDivID,
                                            ResultExhibitsDivTagTableID,
                                            RetrievalResultId
                                        );
                                        PublicVariableResultExhibitsWebPage.document.getElementById(RetrievalResultId).scrollIntoView(false);  /* 網頁滾動條滑到 RetrievalResultId 元素的位置; */;
                                    };
                                };
                            };
                        };
                    };

                    if (TemporaryCollectResultStoredStringArray === null || typeof(TemporaryCollectResultStoredStringArray) === "undefined" || TemporaryCollectResultStoredStringArray === "") {
                        windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 空源. }";
                    } else {
                        windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 目 < " + TemporaryCollectResultStoredStringArrayEffectiveLength + " > ，既. }";
                    };

                    if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                        windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                    };
                };
            };

            windowHandle_1.document.getElementById("OperationModuleDiv").removeChild(windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput"));
            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput").value);}; */;
            /* alert(windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput").value); */;

            return TemporaryCollectResultStoredStringArray;
            // break;
        };


    /* -------------------------------------------------------------------------------------------------------------------------------------------- */;


        /* // 導入二維數組的數據並展示在網頁表格中; */
        case "2": {
            let StoredCollectResultFromHardDiskToMemoryTemporaryInput = windowHandle_1.document.createElement("input");
            StoredCollectResultFromHardDiskToMemoryTemporaryInput.setAttribute("id", "StoredCollectResultFromHardDiskToMemoryTemporaryInput");
            StoredCollectResultFromHardDiskToMemoryTemporaryInput.setAttribute("type", "file");
            StoredCollectResultFromHardDiskToMemoryTemporaryInput.setAttribute("accept", "text/csv,text/html,text/xml");  /* "accept", "text/html,text/xml,text/csv,application/xml,application/xhtml+xml,application/vnd.ms-excel,application/msword,image/gif,image/jpeg,image/png,image/jpg,text/javascript,text/css,application/javascript,application/json,application/pdf,application/vnd.ms-powerpoint,application/vnd.ms-works,application/xhtml+xml,application/zip"; */;
            /* StoredCollectResultFromHardDiskToMemoryTemporaryInput.multiple = "multiple"; */;
            StoredCollectResultFromHardDiskToMemoryTemporaryInput.style.display = "none";
            /* StoredCollectResultFromHardDiskToMemoryTemporaryInput.innerHTML = "Stored Collect Result from HardDisk to Memory"; */;
            StoredCollectResultFromHardDiskToMemoryTemporaryInput.setAttribute("onchange", "javascript:StoredCollectResultFromHardDiskToMemory(window, '2_FileReader', '" + Column_Interval_Symbol + "', '" + Row_Interval_Symbol + "', '" + Result_Display_Container_Radio_value + "', 'ResultExhibitsDiv', 'ResultExhibitsDivTagTable', PublicVariableResultExhibitsWebPage, '')");
            /* StoredCollectResultFromHardDiskToMemoryTemporaryInput.setAttribute("onpropertychange", "StoredCollectResultFromHardDiskToMemory(window, '2_FileReader', '" + Column_Interval_Symbol + "', '" + Row_Interval_Symbol + "', '" + Result_Display_Container_Radio_value + "', 'ResultExhibitsDiv', 'ResultExhibitsDivTagTable', PublicVariableResultExhibitsWebPage, '')"); */;
            /* StoredCollectResultFromHardDiskToMemoryTemporaryInput.setAttribute("onclick", "javascript:StoredCollectResultFromHardDiskToMemory(window, '2_FileReader', '" + Column_Interval_Symbol + "', '" + Row_Interval_Symbol + "', '" + Result_Display_Container_Radio_value + "', 'ResultExhibitsDiv', 'ResultExhibitsDivTagTable', PublicVariableResultExhibitsWebPage, '')"); */;
            var TemporaryCollectResultStoredStringArray = new Array();
            var TemporaryPublicVariableCollectResultStoredStringArray = new Array();

            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput")) {
                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput").click();
            } else {
                windowHandle_1.document.getElementById("OperationModuleDiv").appendChild(StoredCollectResultFromHardDiskToMemoryTemporaryInput);
                windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput").click();
            };

            break;
        };

        /* // 導入二維數組的數據並展示在網頁表格中; */
        case "2_FileReader": {

            if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput").value !== "") {

                let FileString = windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput").files[0];  /* 獲取上傳的文檔流; */;
                /* FileString.name */;  /* 獲取上傳的文檔名; */;
                let FileStringReader = new FileReader();
                FileStringReader.readAsText(FileString, "UTF-8");  /* .readAsText 以文本形式讀取完文檔; */;
                /* 以超級鏈接地址形式讀取完文檔 .readAsDataURL ，以二進制形式讀取完文檔 .readAsBinaryString ; */;

                /* 讀取完文檔之後會回來這裏; */;
                FileStringReader.onload = function(InputFileReader) {

                    if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                        windowHandle_1.document.getElementById("StartORStopCollectDataButton").disabled = "disabled";
                    };
                    if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").disabled = "disabled";
                    };
                    if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").disabled = "disabled";
                    };

                    let StoredCollectResultFromHardDiskToMemoryFileString = InputFileReader.target.result;
                    /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(StoredCollectResultFromHardDiskToMemoryFileString);}; */;
                    /* alert(StoredCollectResultFromHardDiskToMemoryFileString); */;
                    /* alert(typeof StoredCollectResultFromHardDiskToMemoryFileString); */;

                    let TemporaryStoredCollectResultFromHardDiskToMemoryFileString = StoredCollectResultFromHardDiskToMemoryFileString;
                    TemporaryCollectResultStoredStringArray = new Array();
                    if (TemporaryStoredCollectResultFromHardDiskToMemoryFileString.indexOf(String(Column_Interval_Symbol + Row_Interval_Symbol)) !== -1) {
                        TemporaryCollectResultStoredStringArray = TemporaryStoredCollectResultFromHardDiskToMemoryFileString.split(String(Column_Interval_Symbol + Row_Interval_Symbol));
                    };
                    /* alert(typeof TemporaryCollectResultStoredStringArray); */;
                    /* alert(TemporaryCollectResultStoredStringArray.length); */;
                    /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(TemporaryCollectResultStoredStringArray);}; */;

                    let TemporaryCollectResultStoredStringArrayEffectiveLength = parseInt(0);
                    TemporaryPublicVariableCollectResultStoredStringArray = new Array();
                    if (!(TemporaryCollectResultStoredStringArray === null || typeof(TemporaryCollectResultStoredStringArray) === "undefined")) {
                        let TemporaryCollectSecondLevelWebResultStoredStringArray = new Array();
                        for (let j in TemporaryCollectResultStoredStringArray) {
                            if (TemporaryCollectResultStoredStringArray[j] !== "") {
                                TemporaryCollectSecondLevelWebResultStoredStringArray = TemporaryCollectResultStoredStringArray[j].split(String(Column_Interval_Symbol));
                                /* alert(typeof TemporaryCollectSecondLevelWebResultStoredStringArray); */;
                                /* alert(TemporaryCollectSecondLevelWebResultStoredStringArray.length); */;
                                /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(TemporaryCollectSecondLevelWebResultStoredStringArray);}; */;
                                PublicVariableCollectResultStoredStringArray.push(TemporaryCollectSecondLevelWebResultStoredStringArray);
                                TemporaryPublicVariableCollectResultStoredStringArray.push(TemporaryCollectSecondLevelWebResultStoredStringArray);
                                TemporaryCollectResultStoredStringArrayEffectiveLength = parseInt(TemporaryCollectResultStoredStringArrayEffectiveLength) + parseInt(1);
                            };
                        };
                    };
                    /* alert(typeof TemporaryPublicVariableCollectResultStoredStringArray); */;
                    /* alert(TemporaryPublicVariableCollectResultStoredStringArray.length); */;
                    if (!windowHandle_1.console) { windowHandle_1.console = { log:function(){} }; } else { windowHandle_1.console.log(TemporaryPublicVariableCollectResultStoredStringArray); };

                    if (!(TemporaryCollectResultStoredStringArray === null || typeof(TemporaryCollectResultStoredStringArray) === "undefined")) {

                        if (!(ResultExhibitsDivID === '' && ResultExhibitsDivTagTableID === '') && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                            /* 下面代碼將備份的抓取結果重新導入後，展示在網頁元素 DIV 塊 ResultExhibitsDiv 中; */;
                            for (let k in TemporaryPublicVariableCollectResultStoredStringArray) {
                                if (TemporaryPublicVariableCollectResultStoredStringArray[k] !== "") {
                                    let RetrievalResultEntryNumber = parseInt(k) + parseInt(1);
                                    let RetrievalResultEntryDate = Date();
                                    /* let RetrievalResultEntryDate = new Date().toLocaleString(); */;
                                    let RetrievalResultId = "StoredRetrievalResult<" + RetrievalResultEntryNumber + ">" + RetrievalResultEntryDate;
                                    DisplayData(
                                        windowHandle_1,
                                        Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                        TemporaryPublicVariableCollectResultStoredStringArray[k],
                                        ResultExhibitsDivID,
                                        ResultExhibitsDivTagTableID,
                                        RetrievalResultId
                                    );
                                    /* windowHandle_1.document.getElementById(RetrievalResultId).scrollIntoView(false); */;  /* 網頁滾動條滑到 RetrievalResultId 元素的位置; */;
                                };
                            };
    
                            /* 下面代碼將備份的抓取結果重新導入後，展示在新創建打開的網頁 window 窗口 PublicVariableResultExhibitsWebPage 中; */;
                            if (PublicVariableResultExhibitsWebPage.name !== "") {
    
                                for (let k in TemporaryPublicVariableCollectResultStoredStringArray) {
                                    if (TemporaryPublicVariableCollectResultStoredStringArray[k] !== "") {
                                        let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(k) + parseInt(1);
                                        let PublicVariableResultExhibitsWebPageRetrievalResultEntryDate = Date();
                                        /* let PublicVariableResultExhibitsWebPageRetrievalResultEntryDate = new Date().toLocaleString(); */;
                                        let PublicVariableResultExhibitsWebPageRetrievalResultId = "StoredRetrievalResult<" + PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber + ">" + PublicVariableResultExhibitsWebPageRetrievalResultEntryDate;
                                        DisplayData(
                                            PublicVariableResultExhibitsWebPage,
                                            Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                            TemporaryPublicVariableCollectResultStoredStringArray[k],
                                            ResultExhibitsDivID,
                                            ResultExhibitsDivTagTableID,
                                            PublicVariableResultExhibitsWebPageRetrievalResultId
                                        );
                                        PublicVariableResultExhibitsWebPage.document.getElementById(PublicVariableResultExhibitsWebPageRetrievalResultId).scrollIntoView(false);  /* 網頁滾動條滑到 RetrievalResultId 元素的位置; */;
                                    };
                                };
                            };
                        };
                    };

                    if (TemporaryCollectResultStoredStringArray === null || typeof(TemporaryCollectResultStoredStringArray) === "undefined" || TemporaryCollectResultStoredStringArray === "") {
                        windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 空源. }";
                    } else {
                        windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 目 < " + TemporaryCollectResultStoredStringArrayEffectiveLength + " > ，既. }";
                    };

                    if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                        windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                    };
                    if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                    };
                };
            };

            windowHandle_1.document.getElementById("OperationModuleDiv").removeChild(windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput"));
            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput").value);}; */;
            /* alert(windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryTemporaryInput").value); */;

            return TemporaryPublicVariableCollectResultStoredStringArray;
            // break;
        };

        default: {
            alert("Function: StoredCollectResultFromHardDiskToMemory(Parameter1)"+"\n"+"<Parameter1> input Error !"+"\n"+ BranchSwitch);
        };
    };
};

function NewOpenWebPage(
    windowHandle_1,
    BranchSwitch,
    OpenWebPageName,
    TemporaryStorageNewOpenWebPageInsertFunctionCodeString,
    PublicVariableResultExhibitsWebPage,
    callback
){

    switch(BranchSwitch) {

        case true: {

            /* 配置相關按鈕不可再操作 */;
            if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) { windowHandle_1.document.getElementById("NewOpenWebPageButton").disabled = "disabled"; };
            if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) { windowHandle_1.document.getElementById("StartORStopCollectDataButton").disabled = "disabled"; };

            PublicVariableNewOpenWebPageButtonClickNumber = parseInt(PublicVariableNewOpenWebPageButtonClickNumber) + parseInt(1);

            if (PublicVariableResultExhibitsWebPage.name === "") {
                // Object.prototype.toString.call(PublicVariableResultExhibitsWebPage) === "[object Object]"

                PublicVariableResultExhibitsWebPage = windowHandle_1.open(
                    "about:blank",
                    OpenWebPageName,  // "ResultExhibitsWebPage",
                    "menubar=no, scrollbars=yes, resizable=yes, status=yes, titlebar=no, toolbar=no, location=yes"
                );
                /*
                // window.open("page.html", "newwindow", "height=100, width=400, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, status=no");
                // 參數解釋;
                // window.open 瀏覽器環境中彈出新窗口的命令;
                // "page.html" 表示打開窗口加載的 html 頁面文檔，可以是網絡服務器的 URL 地址，如果取 "about:blank" 值則表示只打開一個空白頁面不加載任何;
                // "newwindow" 瀏覽器環境中新彈出窗口的自定義名字（不是文件名），非必須，可用空字符串 "" 代替;
                // height=100 瀏覽器環境中新彈出窗口的高度，單位像素;
                // width=400 瀏覽器環境中新彈出窗口的寬度單位像素;
                // top=0 瀏覽器環境中新彈出窗口距離屏幕上方的像素值;
                // left=0 瀏覽器環境中新彈出窗口距離屏幕左側的像素值;
                // toolbar=no 瀏覽器環境中新彈出窗口是否顯示工具欄，yes 為顯示;
                // menubar，scrollbars 瀏覽器環境中新彈出窗口的菜單欄和滾動欄;
                // resizable=no 瀏覽器環境中新彈出窗口是否允許改變窗口大小，yes 為允許;
                // location=no 瀏覽器環境中新彈出窗口是否顯示地址欄，yes 為允許;
                // status=no 瀏覽器環境中新彈出窗口是否顯示狀態欄内的信息（通常是文件已經打開），yes 為允許;
                */;
                PublicVariableResultExhibitsWebPage.focus();

            } else if (PublicVariableResultExhibitsWebPage.name === OpenWebPageName) {
                // Object.prototype.toString.call(PublicVariableResultExhibitsWebPage) === "[object Window]"
                // PublicVariableResultExhibitsWebPage.closed

                // PublicVariableResultExhibitsWebPage.replace("about:blank");  // "about:blank" 刷新窗口替換為新鏈接 ContainDataWebPageURL ;
                // PublicVariableResultExhibitsWebPage.assign("about:blank");  // "about:blank" 窗口打開新鏈接 ContainDataWebPageURL ;
                // PublicVariableResultExhibitsWebPage.location.href = "";  // "about:blank" 窗口的 url 地址;
                PublicVariableResultExhibitsWebPage.focus();

            } else {};

            // chrome.tabs.create(
            //     {
            //         // windowId: 1,
            //         url: ContainDataWebPageURL
            //     },
            //     (tabPage) => {
            //         // console.log(tabPage.id);
            //         // alert(tabPage.id);
            //     }
            // );
            // chrome.tabs.get(tabPage.id, (tabPage) => {
            //     console.log(tabPage.id);
            //     alert(tabPage.id);
            // });
            // chrome.tabs.getSelected(tabPage.windowId, (tabPage) => {
            //     console.log(tabPage.id);
            //     alert(tabPage.id);
            // });
            // chrome.tabs.query(
            //     {
            //         // active: true,
            //         // status: "complete",  // "loading";
            //         // title: "",
            //         url: chrome.extension.getURL('./background/background.html')
            //     },
            //     function(tabs) {
            //         alert(tabs.length ? tabs[0].id: null);
            //         alert(tabs.length ? tabs[0].windowId: null);
            //     }
            // );
            // chrome.windows.remove(tabPage.id, function() {});  // 關閉標籤頁;

            // let delay_ms = 30000;
            // let start_time = new Date().getTime();
            // while (new Date().getTime() < start_time + delay_ms) {
            //     continue;
            // };

            let NewOpenWebPageJavaScriptFunctionAggregateScript = windowHandle_1.document.createElement("script");
            NewOpenWebPageJavaScriptFunctionAggregateScript.setAttribute("id", "NewOpenWebPageJavaScriptFunctionAggregateScript");
            NewOpenWebPageJavaScriptFunctionAggregateScript.setAttribute("type", "text/javascript");
            NewOpenWebPageJavaScriptFunctionAggregateScript.setAttribute("language", "javascript");

            /* let NewOpenWebPageInsertFunctionCodeString = windowHandle_1.document.createTextNode(windowHandle_1.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString").innerHTML); */;  /* 關聯到 3874 行的語句; */;

            // /* let TemporaryStorageNewOpenWebPageInsertFunctionCodeString = '+' \';\'+ */
            // TemporaryStorageNewOpenWebPageInsertFunctionCodeString = ';'+
            //     ' window.onbeforeunload = function(event) { '+
            //     '       event.returnValue = "是否現在就要離開本頁面？"+"//n"+"比如要不要先點擊 < 取消 > 關閉本頁面，在保存一下之後再離開呢？"; '+
            //     ' } '+
            //     ' ; '
            //     +
            //     ' function NewFunction() { '+
            //     '    alert(window.document.getElementsByTagName("html")[0].outerHTML); '+
            //     ' }; ';

            let NewOpenWebPageInsertFunctionCodeString = windowHandle_1.document.createTextNode(TemporaryStorageNewOpenWebPageInsertFunctionCodeString);

            // if (Object.prototype.toString.call(PublicVariableResultExhibitsWebPage) === "[object Window]") {
            //     PublicVariableResultExhibitsWebPage.document.addEventListener(
            //         'DOMContentLoaded',  // 'load';
            //         () => {
            //             // 判斷打開的網頁的主機域名，對特定網頁進行操作;
            //             if (PublicVariableResultExhibitsWebPage.document.location.host === "about:blank") {
                            // PublicVariableResultExhibitsWebPage.location.href === "about:blank"
                            /* PublicVariableResultExhibitsWebPage.document.write("<h1>这是新打开的窗口</h1>"); */; /* 注意不能使用 .write() 方法向網頁插入代碼，因爲執行 .write() 方法會重繪網頁 DOM 導致網頁原有内容被清空; */;
                            /* PublicVariableResultExhibitsWebPage.document.head.appendChild(NewOpenWebPageJavaScriptFunctionAggregateScript); */;
                            PublicVariableResultExhibitsWebPage.document.getElementsByTagName("head")[0].appendChild(NewOpenWebPageJavaScriptFunctionAggregateScript);
                            PublicVariableResultExhibitsWebPage.NewOpenWebPageJavaScriptFunctionAggregateScript.appendChild(NewOpenWebPageInsertFunctionCodeString);
            //             };
            //         }
            //     );
            // };

            /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(PublicVariableResultExhibitsWebPage.document.getElementsByTagName("html")[0].outerHTML);}; */;
            /* alert(PublicVariableResultExhibitsWebPage.document.getElementsByTagName("html")[0].outerHTML); */;
            if (callback) { callback(null, PublicVariableResultExhibitsWebPage); };

            windowHandle_1.setTimeout(function () {
                if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) { windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled"); };
                if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) { windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled"); };
            }, 1000);

            return PublicVariableResultExhibitsWebPage;
            // break;
        };

        case false: {
            return PublicVariableNewOpenWebPageButtonClickNumber;
            // break;
        };

        default: {
            alert("Function: NewOpenWebPage(Parameter1,Parameter2)"+"\n"+"<Parameter1> input Error !"+"\n"+ BranchSwitch);
            return null;
        };
    };
};

function UNDisableNewOpenWebPageButton(NewOpenWebPageButton) {
    window.opener.document.getElementById(NewOpenWebPageButton).removeAttribute("disabled");
    return true;
};


// 配置自定義起止頁碼;
var StartFirstLevelPageNumber = parseInt(1);  // 自定義設定的啓動采集的的第一層級網頁的頁碼號;
var EndFirstLevelPageNumber = parseInt(1);  // 自定義設定的終止采集的的第一層級網頁的頁碼號;
var StartCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(1);  // 自定義設定的從第一層級網頁中的第幾個第二層級網頁啓動采集的頁碼號;
var EndCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(5);  // 自定義設定的至第一層級網頁中的第幾個第二層級網頁終止采集的頁碼號;
var CurrentFirstLevelPageNumber = parseInt(1);  // 當前第一層級網頁的頁碼號;
var MaximumPageNumber = parseInt(5);  // 可采集的第一層級網頁的最大碼號;
var NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(1);  // 當前第二層級網頁的頁碼號;
var Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(5);  // 在當前第一層級網頁中，包含的可采集的第二層級網頁的最大碼號;


// 保存目標數據源網頁返回的信息;
var level = 'First_Level_Page';  // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';  // 當前打開目標數據源網頁的層級類型;
var Current_First_Level_Page_Number = parseInt(0);
var Maximum_First_Level_Page_Number = parseInt(0);
var Total_Data_in_Current_First_Level_Page = parseInt(0);
var XPath_Data_in_Current_First_Level_Page = [];  // [RetrievalResult_XPath_1];
var Total_Entry_from_First_Level_Page_to_Second_Level_Page = parseInt(0);
var XPath_from_First_Level_Page_to_Second_Level_Page = [];  // [EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1];
var Current_Second_Level_Page_Number = parseInt(0);
var Maximum_Second_Level_Page_Number = parseInt(0);
var page_number = String(Current_First_Level_Page_Number) + '--' + String(Current_Second_Level_Page_Number);  // 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
var Total_Data_in_Current_Second_Level_Page = parseInt(0);
var XPath_Data_in_Current_Second_Level_Page = [];  // [SecondLevelWebPageRetrievalResult_XPath];
var Total_Entry_from_Second_Level_Page_to_First_Level_Page = parseInt(0);
var XPath_from_Second_Level_Page_to_First_Level_Page = [];  // [FromSecondLevelWebReturnFirstLevelWeb_XPath];
var Start_First_Level_Page_Number = parseInt(0);
var End_First_Level_Page_Number = parseInt(0);
var Start_Current_Second_Level_Page_In_Current_First_Level_Page = parseInt(0);
var End_Current_Second_Level_Page_In_Current_First_Level_Page = parseInt(0);
var Query_Key_Word_First_Level_Page_Textbox_XPath = [];  // [WebKeyWordTextboxElement_XPath];
var Query_Key_Word_First_Level_Page_Button_XPath = [];  // [WebKeyWordQuerySubmitButtonElement_XPath];
var Skip_First_Level_Page_Textbox_XPath = [];  // [TableSkipPageTextboxTdElement_XPath_1];
var Skip_First_Level_Page_Button_XPath = [];  // [TableSkipPageSubmitButtonTdElement_XPath_1];
var Next_First_Level_Page_Button_XPath = [];  // [TableNextPageSubmitButtonImgTdElement_XPath_1];
var Back_First_Level_Page_Button_XPath = [];  // [TableBackPageSubmitButtonImgTdElement_XPath_1];


// // 查詢 Chrome 瀏覽器當前標籤頁的 ID 號碼;
// let test_user_interface_tab_id = parseInt(0);  // 當前標籤頁的 ID 號碼;
// chrome.tabs.query(
//     {
//         active: true,
//         currentWindow: true
//     },
//     (tabs) => {
//         test_user_interface_tab_id = tabs.length ? tabs[0].id: null;
//     }
// );
// 在自定義的用戶操作交互頁面窗口(test.html)進程中主動向後臺頁面(background.html)進程傳遞指令;
chrome.runtime.sendMessage(
    {
        "message": 'userInterface->background:Current_Page_Information',
        "url": String(window.document.location.href),
        "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
        // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
        "status": 'Load_Successful',
        "Configuration_Parameters": {
            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
            "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
            "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
            "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
            "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
            "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
            "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
            "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
            "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
            "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
            "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
            "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
            "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
            "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
            "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
        },
        "data": ""  // JSON.stringify(request_Dict, function (key, value) {}, 4);
    },  // 發送的具體數據，可以是 JSON 對象;
    (response_Data) => {
        // console.log(response_Data);
        // response_data = JSON.parse(response_Data["data"], function (key, value) {});

        if ((typeof (response_Data) === 'object' && Object.prototype.toString.call(response_Data).toLowerCase() === '[object object]' && !(response_Data.length)) && response_Data.hasOwnProperty("message") && response_Data["message"] === "background->userInterface:StandBy") {
            // console.log('background instruction: { ' + response_Data["message"] + ' }.');
            // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + response_Data["message"]);
            console.log('background instruction: { StandBy }.');
        };
    }
);


// 在自定義的網頁包含脚本(content-script.js)進程中監聽後臺頁面(background.html)進程傳遞過來的指令;
chrome.runtime.onMessage.addListener(
    (request, sender, sendResponse) => {
        // console.log('收到來自' + (sender.tab ? "content-script(" + sender.tab.url + ")" : "後臺頁面(background.html)進程") + '傳遞過來的消息: ', request);
        // console.log(request);
        // console.log(sender);
        // console.log(sendResponse);
        // alert('後臺頁面(background.html)進程中傳遞過來消息.\n' + 'request:\n' + request + '\nsender:\n' + sender + '\nsendResponse:\n' + sendResponse);

        if ((typeof (request) === 'object' && Object.prototype.toString.call(request).toLowerCase() === '[object object]' && !(request.length)) && request.hasOwnProperty("message")) {

            if (request["message"] === "background->userInterface:Ask_for_Configuration_Parameters") {

                // if (window.document.getElementById("OperationModuleDiv") !== null) {
                //     if (window.document.getElementById("OperationModuleDiv").style.display === "none") {
                //         window.document.getElementById("OperationModuleDiv").style.display = "block";
                //     };
                // };
                // if (window.document.getElementById("ResultExhibitsDiv") !== null) {
                //     if (window.document.getElementById("ResultExhibitsDiv").style.display === "none") {
                //         window.document.getElementById("ResultExhibitsDiv").style.display = "block";
                //     };
                // };
                // if (window.document.getElementById("ParameterVariableDiv") !== null) {
                //     if (window.document.getElementById("ParameterVariableDiv").style.display !== "none") {
                //         window.document.getElementById("ParameterVariableDiv").style.display = "none";
                //     };
                // };
                // if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                //     if (window.document.getElementById("NewOpenWebPageContainDataButton").style.display !== "none") {
                //         window.document.getElementById("NewOpenWebPageContainDataButton").style.display = "none";
                //     };
                // };

                // 每一次點擊操作的延時長度值輸入框;
                if (window.document.getElementById("IntervalOfCircleClickInputTextBoxInput") !== null) {
                    Interval_Of_Circle_Click_value = parseInt(window.document.getElementById("IntervalOfCircleClickInputTextBoxInput").value);
                    // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                    Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                };
                // 每一次點擊操作的延時長度隨機化增減值輸入框;
                if (window.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput") !== null) {
                    Randomization_Relative_Interval = parseFloat(window.document.getElementById("RandomizationRelativeIntervalInputTextBoxInput").value);
                    // Randomization_Interval_Of_Circle_Click_value = Math.round(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                    Randomization_Interval_Of_Circle_Click_value = parseInt(parseFloat(Interval_Of_Circle_Click_value) + (Math.random() * (parseFloat(Interval_Of_Circle_Click_value) * parseFloat(Randomization_Relative_Interval))));
                };
                // 數據源網頁的網址;
                if (window.document.getElementById("URLofDataWebPageInputTextarea") !== null) {
                    ContainDataWebPageURL = window.document.getElementById("URLofDataWebPageInputTextarea").value;
                };
                // 網頁中關鍵詞輸入框元素的 XPath 值;
                if (window.document.getElementById("WebKeyWordTextboxElementXPathInputTextarea") !== null) {
                    WebKeyWordTextboxElement_XPath = window.document.getElementById("WebKeyWordTextboxElementXPathInputTextarea").value;
                };
                // 網頁中關鍵詞查詢按鈕元素的 XPath 值;
                if (window.document.getElementById("WebKeyWordQuerySubmitButtonElementXPathInputTextarea") !== null) {
                    WebKeyWordQuerySubmitButtonElement_XPath = window.document.getElementById("WebKeyWordQuerySubmitButtonElementXPathInputTextarea").value;
                };
                // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                if (window.document.getElementById("TableWebPageNumberTdElementXPath1InputTextarea") !== null) {
                    TableWebPageNumberTdElement_XPath_1 = window.document.getElementById("TableWebPageNumberTdElementXPath1InputTextarea").value;
                };
                // 當前網頁中可采集數據元素的 XPath 值;
                if (window.document.getElementById("RetrievalResultXPath1InputTextarea") !== null) {
                    RetrievalResult_XPath_1 = window.document.getElementById("RetrievalResultXPath1InputTextarea").value;
                };
                // // 第二層網頁中需要抓取的數據的條目數目;
                // if (window.document.getElementById("NumberOfItemInThisSecondLevelWebPageInputTextarea") !== null) {
                //     NumberOfItemInThisSecondLevelWebPage = parseInt(window.document.getElementById("NumberOfItemInThisSecondLevelWebPageInputTextarea").value);
                // };
                // 第二層網頁中需要抓取的數據元素的 XPath 值;
                if (window.document.getElementById("SecondLevelWebPageRetrievalResultXPathInputTextarea") !== null) {
                    SecondLevelWebPageRetrievalResult_XPath = window.document.getElementById("SecondLevelWebPageRetrievalResultXPathInputTextarea").value;
                };
                // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                if (window.document.getElementById("EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea") !== null) {
                    EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1 = window.document.getElementById("EntryElementfromFirstLevelPagetoSecondLevelPageXPath1InputTextarea").value;
                };
                // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                if (window.document.getElementById("FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea") !== null) {
                    FromSecondLevelWebReturnFirstLevelWeb_XPath = window.document.getElementById("FromSecondLevelWebReturnFirstLevelWebXPathInputTextarea").value;
                };
                // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                if (window.document.getElementById("TableSkipPageTextboxTdElementXPath1InputTextarea") !== null) {
                    TableSkipPageTextboxTdElement_XPath_1 = window.document.getElementById("TableSkipPageTextboxTdElementXPath1InputTextarea").value;
                };
                // 目標網頁中的跳頁按鈕的 xpath 值;
                if (window.document.getElementById("TableSkipPageSubmitButtonTdElementXPath1InputTextarea") !== null) {
                    TableSkipPageSubmitButtonTdElement_XPath_1 = window.document.getElementById("TableSkipPageSubmitButtonTdElementXPath1InputTextarea").value;
                };
                // 目標網頁中的下一頁按鈕的 xpath 值;
                if (window.document.getElementById("TableNextPageSubmitButtonImgTdElementXPath1InputTextarea") !== null) {
                    TableNextPageSubmitButtonImgTdElement_XPath_1 = window.document.getElementById("TableNextPageSubmitButtonImgTdElementXPath1InputTextarea").value;
                };
                // 目標網頁中的上一頁按鈕的 xpath 值;
                if (window.document.getElementById("TableBackPageSubmitButtonImgTdElementXPath1InputTextarea") !== null) {
                    TableBackPageSubmitButtonImgTdElement_XPath_1 = window.document.getElementById("TableBackPageSubmitButtonImgTdElementXPath1InputTextarea").value;
                };
                // 用於加載數據源網頁的新建窗口變量;
                if (window.document.getElementById("CustomOpenContainDataWebPageNameInputTextarea") !== null) {
                    Open_Contain_Data_Web_Page_Name = window.document.getElementById("CustomOpenContainDataWebPageNameInputTextarea").value;
                };
                // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                // if (window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton") !== null) {
                //     TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageContainDataButton").innerHTML;
                // };
                if (window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton") !== null) {
                    TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton = window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton").innerHTML;
                };
                // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                // if (window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton") !== null) {
                //     TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = window.document.getElementById("OperationModuleDivTemporaryStorageNewOpenWebPageScriptFunctionCodeStringTagP_NewOpenWebPageButton").innerHTML;
                // };
                if (window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton") !== null) {
                    TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton = window.document.getElementById("TagSpanTemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton").innerHTML;
                };

                // 指令更新啓動常量參數;
                sendResponse(
                    {
                        "message": "userInterface->background:Update_Configuration_Parameters",
                        "url": String(window.document.location.href),
                        "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                        // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                        "ContainDataWebPageURL": ContainDataWebPageURL,
                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,
                        "level": level,
                        "Configuration_Parameters": {
                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                            "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                            "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                            "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                            "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                            "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                            "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                            "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                            "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                            "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                            "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                            "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                            "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                            "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                            "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                            "Data_Level": Data_Level,  // parseInt(1);  // 想要采集的數據處在目標數據源網頁的第幾個層級上;
                            "level": level,
                            "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                        },
                        "data": ""
                    }
                );
            };

            if (request["message"] === "background->userInterface:Current_Page_Information") {

                if (window.document.getElementById("OperationModuleDiv") !== null) {
                    if (window.document.getElementById("OperationModuleDiv").style.display === "none") {
                        window.document.getElementById("OperationModuleDiv").style.display = "block";
                    };
                };

                if (window.document.getElementById("ResultExhibitsDiv") !== null) {
                    if (window.document.getElementById("ResultExhibitsDiv").style.display === "none") {
                        window.document.getElementById("ResultExhibitsDiv").style.display = "block";
                    };
                };

                if (window.document.getElementById("ParameterVariableDiv") !== null) {
                    if (window.document.getElementById("ParameterVariableDiv").style.display !== "none") {
                        window.document.getElementById("ParameterVariableDiv").style.display = "none";
                    };
                };

                if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                    if (window.document.getElementById("NewOpenWebPageContainDataButton").style.display !== "none") {
                        window.document.getElementById("NewOpenWebPageContainDataButton").style.display = "none";
                    };
                };

                // 更新目標數據源網頁返回的信息;
                if (request.hasOwnProperty("Current_First_Level_Page_Number") && parseInt(request["Current_First_Level_Page_Number"]) !== parseInt(0)) {
                    Current_First_Level_Page_Number = parseInt(request["Current_First_Level_Page_Number"]);
                };
                if (request.hasOwnProperty("Maximum_First_Level_Page_Number") && parseInt(request["Maximum_First_Level_Page_Number"]) !== parseInt(0)) {
                    Maximum_First_Level_Page_Number = parseInt(request["Maximum_First_Level_Page_Number"]);
                };
                if (request.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(request["Current_Second_Level_Page_Number"]) !== parseInt(0)) {
                    Current_Second_Level_Page_Number = parseInt(request["Current_Second_Level_Page_Number"]);
                };
                if (request.hasOwnProperty("Maximum_Second_Level_Page_Number") && parseInt(request["Maximum_Second_Level_Page_Number"]) !== parseInt(0)) {
                    Maximum_Second_Level_Page_Number = parseInt(request["Maximum_Second_Level_Page_Number"]);
                };
                if (request.hasOwnProperty("ContainDataWebPageURL") && request["ContainDataWebPageURL"] !== "") {
                    ContainDataWebPageURL = String(request["ContainDataWebPageURL"]);  // String(request["url"]);
                };
                if (request.hasOwnProperty("Open_Contain_Data_Web_Page_Name") && request["Open_Contain_Data_Web_Page_Name"] !== "") {
                    Open_Contain_Data_Web_Page_Name = String(request["Open_Contain_Data_Web_Page_Name"]);
                };
                if (request.hasOwnProperty("level") && request["level"] !== "") {
                    level = String(request["level"]);
                };
                if (request.hasOwnProperty("page_number") && request["page_number"] !== "") {
                    level = String(request["page_number"]);
                };
                if (request.hasOwnProperty("Total_Data_in_Current_First_Level_Page") && parseInt(request["Total_Data_in_Current_First_Level_Page"]) !== parseInt(0)) {
                    Total_Data_in_Current_First_Level_Page = parseInt(request["Total_Data_in_Current_First_Level_Page"]);
                };
                if (request.hasOwnProperty("Total_Entry_from_First_Level_Page_to_Second_Level_Page") && parseInt(request["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]) !== parseInt(0)) {
                    Total_Entry_from_First_Level_Page_to_Second_Level_Page = parseInt(request["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]);
                };
                if (request.hasOwnProperty("XPath_from_First_Level_Page_to_Second_Level_Page") && parseInt(request["XPath_from_First_Level_Page_to_Second_Level_Page"].length) > parseInt(0)) {
                    XPath_from_First_Level_Page_to_Second_Level_Page = request["XPath_from_First_Level_Page_to_Second_Level_Page"];
                };
                if (request.hasOwnProperty("Total_Data_in_Current_Second_Level_Page") && parseInt(request["Total_Data_in_Current_Second_Level_Page"]) !== parseInt(0)) {
                    Total_Data_in_Current_Second_Level_Page = parseInt(request["Total_Data_in_Current_Second_Level_Page"]);
                };
                if (request.hasOwnProperty("Total_Entry_from_Second_Level_Page_to_First_Level_Page") && parseInt(request["Total_Entry_from_Second_Level_Page_to_First_Level_Page"]) !== parseInt(0)) {
                    Total_Entry_from_Second_Level_Page_to_First_Level_Page = parseInt(request["Total_Entry_from_Second_Level_Page_to_First_Level_Page"]);
                };
                if (request.hasOwnProperty("XPath_from_Second_Level_Page_to_First_Level_Page") && parseInt(request["XPath_from_Second_Level_Page_to_First_Level_Page"].length) > parseInt(0)) {
                    XPath_from_Second_Level_Page_to_First_Level_Page = request["XPath_from_Second_Level_Page_to_First_Level_Page"];
                };
                // if (request.hasOwnProperty("Data_in_Current_First_Level_Page") && parseInt(request["Data_in_Current_First_Level_Page"].length) > parseInt(0)) {
                //     Data_in_Current_First_Level_Page = request["Data_in_Current_First_Level_Page"];
                // };
                // if (request.hasOwnProperty("Data_in_Current_Second_Level_Page") && parseInt(request["Data_in_Current_Second_Level_Page"].length) > parseInt(0)) {
                //     Data_in_Current_Second_Level_Page = request["Data_in_Current_Second_Level_Page"];
                // };
                if (request.hasOwnProperty("Query_Key_Word_First_Level_Page_Textbox_XPath") && parseInt(request["Query_Key_Word_First_Level_Page_Textbox_XPath"].length) > parseInt(0)) {
                    Query_Key_Word_First_Level_Page_Textbox_XPath = request["Query_Key_Word_First_Level_Page_Textbox_XPath"];
                };
                if (request.hasOwnProperty("Query_Key_Word_First_Level_Page_Button_XPath") && parseInt(request["Query_Key_Word_First_Level_Page_Button_XPath"].length) > parseInt(0)) {
                    Query_Key_Word_First_Level_Page_Button_XPath = request["Query_Key_Word_First_Level_Page_Button_XPath"];
                };
                if (request.hasOwnProperty("Skip_First_Level_Page_Textbox_XPath") && parseInt(request["Skip_First_Level_Page_Textbox_XPath"].length) > parseInt(0)) {
                    Skip_First_Level_Page_Textbox_XPath = request["Skip_First_Level_Page_Textbox_XPath"];
                };
                if (request.hasOwnProperty("Skip_First_Level_Page_Button_XPath") && parseInt(request["Skip_First_Level_Page_Button_XPath"].length) > parseInt(0)) {
                    Skip_First_Level_Page_Button_XPath = request["Skip_First_Level_Page_Button_XPath"];
                };
                if (request.hasOwnProperty("Next_First_Level_Page_Button_XPath") && parseInt(request["Next_First_Level_Page_Button_XPath"].length) > parseInt(0)) {
                    Next_First_Level_Page_Button_XPath = request["Next_First_Level_Page_Button_XPath"];
                };
                if (request.hasOwnProperty("Back_First_Level_Page_Button_XPath") && parseInt(request["Back_First_Level_Page_Button_XPath"].length) > parseInt(0)) {
                    Back_First_Level_Page_Button_XPath = request["Back_First_Level_Page_Button_XPath"];
                };

                // // 指令更新啓動常量參數;
                // sendResponse(
                //     {
                //         "message": "userInterface->background:StandBy",
                //         "error": "",
                //         "url": String(window.document.location.href),
                //         "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                //         // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                //         "ContainDataWebPageURL": request["ContainDataWebPageURL"],  // request["url"],
                //         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,
                //         "level": level,  // 'First_Level_Page', 'Second_Level_Page',
                //         "Data_Level": Data_Level,  // parseInt(2), parseInt(1),
                //         // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Current_Second_Level_Page_Number),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                //         "Current_First_Level_Page_Number": Current_First_Level_Page_Number,
                //         "Maximum_First_Level_Page_Number": Maximum_First_Level_Page_Number,
                //         "Total_Data_in_Current_First_Level_Page": Total_Data_in_Current_First_Level_Page,
                //         // "Data_in_Current_First_Level_Page": Data_in_Current_First_Level_Page,
                //         "Total_Entry_from_First_Level_Page_to_Second_Level_Page": Total_Entry_from_First_Level_Page_to_Second_Level_Page,
                //         // "XPath_from_First_Level_Page_to_Second_Level_Page": XPath_from_First_Level_Page_to_Second_Level_Page,
                //         "Current_Second_Level_Page_Number": Current_Second_Level_Page_Number,
                //         "Maximum_Second_Level_Page_Number": Maximum_Second_Level_Page_Number,
                //         "Total_Data_in_Current_Second_Level_Page": Total_Data_in_Current_Second_Level_Page,
                //         // "Data_in_Current_Second_Level_Page": Data_in_Current_Second_Level_Page,
                //         "Total_Entry_from_Second_Level_Page_to_First_Level_Page": Total_Entry_from_Second_Level_Page_to_First_Level_Page,
                //         // "XPath_from_Second_Level_Page_to_First_Level_Page": XPath_from_Second_Level_Page_to_First_Level_Page,
                //         "Start_First_Level_Page_Number": Start_First_Level_Page_Number,
                //         "End_First_Level_Page_Number": End_First_Level_Page_Number,
                //         "Start_Current_Second_Level_Page_In_Current_First_Level_Page": Start_Current_Second_Level_Page_In_Current_First_Level_Page,
                //         "End_Current_Second_Level_Page_In_Current_First_Level_Page": End_Current_Second_Level_Page_In_Current_First_Level_Page,
                //         "data": ""
                //     }
                // );
            };

            if (request["message"] === "background->userInterface:Extract_Page_Information") {

                // 更新目標數據源網頁返回的信息;
                if (request.hasOwnProperty("Current_First_Level_Page_Number") && parseInt(request["Current_First_Level_Page_Number"]) !== parseInt(0)) {
                    Current_First_Level_Page_Number = parseInt(request["Current_First_Level_Page_Number"]);
                };
                if (request.hasOwnProperty("Maximum_First_Level_Page_Number") && parseInt(request["Maximum_First_Level_Page_Number"]) !== parseInt(0)) {
                    Maximum_First_Level_Page_Number = parseInt(request["Maximum_First_Level_Page_Number"]);
                };
                if (request.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(request["Current_Second_Level_Page_Number"]) !== parseInt(0)) {
                    Current_Second_Level_Page_Number = parseInt(request["Current_Second_Level_Page_Number"]);
                };
                if (request.hasOwnProperty("Maximum_Second_Level_Page_Number") && parseInt(request["Maximum_Second_Level_Page_Number"]) !== parseInt(0)) {
                    Maximum_Second_Level_Page_Number = parseInt(request["Maximum_Second_Level_Page_Number"]);
                };
                if (request.hasOwnProperty("ContainDataWebPageURL") && request["ContainDataWebPageURL"] !== "") {
                    ContainDataWebPageURL = String(request["ContainDataWebPageURL"]);  // String(request["url"]);
                };
                if (request.hasOwnProperty("Open_Contain_Data_Web_Page_Name") && request["Open_Contain_Data_Web_Page_Name"] !== "") {
                    Open_Contain_Data_Web_Page_Name = String(request["Open_Contain_Data_Web_Page_Name"]);
                };
                if (request.hasOwnProperty("level") && request["level"] !== "") {
                    level = String(request["level"]);
                };
                if (request.hasOwnProperty("page_number") && request["page_number"] !== "") {
                    level = String(request["page_number"]);
                };
                if (request.hasOwnProperty("Total_Data_in_Current_First_Level_Page")) {
                    Total_Data_in_Current_First_Level_Page = parseInt(request["Total_Data_in_Current_First_Level_Page"]);
                };
                if (request.hasOwnProperty("Total_Entry_from_First_Level_Page_to_Second_Level_Page")) {
                    Total_Entry_from_First_Level_Page_to_Second_Level_Page = parseInt(request["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]);
                };
                if (request.hasOwnProperty("XPath_from_First_Level_Page_to_Second_Level_Page")) {
                    XPath_from_First_Level_Page_to_Second_Level_Page = request["XPath_from_First_Level_Page_to_Second_Level_Page"];
                };
                if (request.hasOwnProperty("Total_Data_in_Current_Second_Level_Page")) {
                    Total_Data_in_Current_Second_Level_Page = parseInt(request["Total_Data_in_Current_Second_Level_Page"]);
                };
                if (request.hasOwnProperty("Total_Entry_from_Second_Level_Page_to_First_Level_Page")) {
                    Total_Entry_from_Second_Level_Page_to_First_Level_Page = parseInt(request["Total_Entry_from_Second_Level_Page_to_First_Level_Page"]);
                };
                if (request.hasOwnProperty("XPath_from_Second_Level_Page_to_First_Level_Page")) {
                    XPath_from_Second_Level_Page_to_First_Level_Page = request["XPath_from_Second_Level_Page_to_First_Level_Page"];
                };
                // if (request.hasOwnProperty("Data_in_Current_First_Level_Page")) {
                //     Data_in_Current_First_Level_Page = request["Data_in_Current_First_Level_Page"];
                // };
                // if (request.hasOwnProperty("Data_in_Current_Second_Level_Page")) {
                //     Data_in_Current_Second_Level_Page = request["Data_in_Current_Second_Level_Page"];
                // };
                if (request.hasOwnProperty("Query_Key_Word_First_Level_Page_Textbox_XPath")) {
                    Query_Key_Word_First_Level_Page_Textbox_XPath = request["Query_Key_Word_First_Level_Page_Textbox_XPath"];
                };
                if (request.hasOwnProperty("Query_Key_Word_First_Level_Page_Button_XPath")) {
                    Query_Key_Word_First_Level_Page_Button_XPath = request["Query_Key_Word_First_Level_Page_Button_XPath"];
                };
                if (request.hasOwnProperty("Skip_First_Level_Page_Textbox_XPath")) {
                    Skip_First_Level_Page_Textbox_XPath = request["Skip_First_Level_Page_Textbox_XPath"];
                };
                if (request.hasOwnProperty("Skip_First_Level_Page_Button_XPath")) {
                    Skip_First_Level_Page_Button_XPath = request["Skip_First_Level_Page_Button_XPath"];
                };
                if (request.hasOwnProperty("Next_First_Level_Page_Button_XPath")) {
                    Next_First_Level_Page_Button_XPath = request["Next_First_Level_Page_Button_XPath"];
                };
                if (request.hasOwnProperty("Back_First_Level_Page_Button_XPath")) {
                    Back_First_Level_Page_Button_XPath = request["Back_First_Level_Page_Button_XPath"];
                };

                // 刷新提示標簽;
                if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                    if (parseInt(Current_First_Level_Page_Number) !== parseInt(0)) {
                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(Current_First_Level_Page_Number);
                    };
                };
                if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                    if (parseInt(Maximum_First_Level_Page_Number) !== parseInt(0)) {
                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value = String(Maximum_First_Level_Page_Number);
                    };
                };
                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                    if (parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page) !== parseInt(0)) {
                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                    };
                };
                if (window.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel") !== null) {
                    if (parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page) !== parseInt(0)) {
                        window.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel").innerText = " < " + String(Total_Entry_from_First_Level_Page_to_Second_Level_Page) + " >  ";
                        /* window.document.getElementById("CollectDataEndPageEndEntryNumberInputTextBoxInput").value = parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page); */;
                    };
                };

                // 配置相關按鈕取消禁用改爲可操作;
                if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                    window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                };
                if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                    window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                };
                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                    window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                };
                if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                    window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                };
                if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                    window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                };
                // if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                //     window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                //     window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                //     window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                //     window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                //     window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                //     window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                // };
                if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                    window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                };
            };

            if (request["message"] === "background->userInterface:Extract_Page_Number_Error") {

                // 配置相關按鈕取消禁用改爲可操作;
                if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                    window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                };
                if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                    window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                };
                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                    window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                };
                if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                    window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                };
                if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                    window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                };
                // if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                //     window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                //     window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                //     window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                //     window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                //     window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                //     window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                // };
                if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                    window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                };
            };

            if (request["message"] === "background->userInterface:Contain_Data_Web_Page_Tab_Removed") {
    
                if (window.document.getElementById("OperationModuleDiv") !== null) {
                    if (window.document.getElementById("OperationModuleDiv").style.display !== "none") {
                        window.document.getElementById("OperationModuleDiv").style.display = "none";
                    };
                };
    
                // if (window.document.getElementById("ResultExhibitsDiv") !== null) {
                //     if (window.document.getElementById("ResultExhibitsDiv").style.display !== "none") {
                //         window.document.getElementById("ResultExhibitsDiv").style.display = "none";
                //     };
                // };
    
                if (window.document.getElementById("ParameterVariableDiv") !== null) {
                    if (window.document.getElementById("ParameterVariableDiv").style.display === "none") {
                        window.document.getElementById("ParameterVariableDiv").style.display = "block";
                    };
                };
    
                if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                    if (window.document.getElementById("NewOpenWebPageContainDataButton").style.display === "none") {
                        window.document.getElementById("NewOpenWebPageContainDataButton").style.display = "block";
                    };
                };
    
                // 指令重新開啓目標數據源網頁;
                sendResponse(
                    {
                        "message": 'userInterface->background:',  // 'userInterface->background:Reopen_Contain_Data_Web_Page',
                        "url": String(window.document.location.href),
                        "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                        // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // "testContainDataWebPage",
                        "ContainDataWebPageURL": ContainDataWebPageURL,
                        "data": ""  // JSON.stringify(request_Dict, function (key, value) {}, 4);
                    }  // 發送的具體數據，可以是 JSON 對象;
                );
            };

            if (request["message"] === "background->userInterface:Querying_Key_Word" || request["message"] === "background->userInterface:Query_Key_Word_Error") {

                // 配置相關按鈕取消禁用改爲可操作;
                if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                    window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                };
                // if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                //     window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                //     window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                //     window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                // };
                if (window.document.getElementById("QueryKeyWordInputTextBoxInput") !== null) {
                    window.document.getElementById("QueryKeyWordInputTextBoxInput").removeAttribute("disabled");
                };
                // if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                //     window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                // };
                if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                    window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                };
                // if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                //     window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                //     window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                //     window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                //     window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                // };
                // if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                //     window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                // };
                if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                    window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                };
            };

            // if (request["message"] === "background->userInterface:Skipping") {
            //     console.log(request);
            // };

            if (request["message"] === "background->userInterface:Real_Time_Data") {
                // JSON.parse(request["data"], function (key, value) {});
                // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                // console.log('background instruction: { ' + request["message"] + ' }.');
                // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);

                // 更新目標數據源網頁返回的信息;
                if (request.hasOwnProperty("Current_First_Level_Page_Number") && parseInt(request["Current_First_Level_Page_Number"]) !== parseInt(0)) {
                    Current_First_Level_Page_Number = parseInt(request["Current_First_Level_Page_Number"]);
                    // CurrentFirstLevelPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                };
                if (request.hasOwnProperty("Maximum_First_Level_Page_Number") && parseInt(request["Maximum_First_Level_Page_Number"]) !== parseInt(0)) {
                    Maximum_First_Level_Page_Number = parseInt(request["Maximum_First_Level_Page_Number"]);
                    // MaximumPageNumber = parseInt(request["Maximum_First_Level_Page_Number"]);
                };
                if (request.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(request["Current_Second_Level_Page_Number"]) !== parseInt(0)) {
                    Current_Second_Level_Page_Number = parseInt(request["Current_Second_Level_Page_Number"]);
                    // NumberOfCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(request["Current_Second_Level_Page_Number"]);
                };
                if (request.hasOwnProperty("Maximum_Second_Level_Page_Number") && parseInt(request["Maximum_Second_Level_Page_Number"]) !== parseInt(0)) {
                    Maximum_Second_Level_Page_Number = parseInt(request["Maximum_Second_Level_Page_Number"]);
                    End_Current_Second_Level_Page_In_Current_First_Level_Page = parseInt(request["Maximum_Second_Level_Page_Number"]);
                    Total_Of_Second_Level_Page_in_Current_First_Level_Page = parseInt(request["Maximum_Second_Level_Page_Number"]);
                    EndCurrentSecondLevelPageInCurrentFirstLevelPage = parseInt(request["Maximum_Second_Level_Page_Number"]);
                };
                if (request.hasOwnProperty("ContainDataWebPageURL") && request["ContainDataWebPageURL"] !== "") {
                    ContainDataWebPageURL = String(request["ContainDataWebPageURL"]);  // String(request["url"]);
                };
                if (request.hasOwnProperty("Open_Contain_Data_Web_Page_Name") && request["Open_Contain_Data_Web_Page_Name"] !== "") {
                    Open_Contain_Data_Web_Page_Name = String(request["Open_Contain_Data_Web_Page_Name"]);
                };
                // if (request.hasOwnProperty("level") && request["level"] !== "") {
                //     level = String(request["level"]);
                // };
                // if (request.hasOwnProperty("page_number") && request["page_number"] !== "") {
                //     page_number = String(request["page_number"]);
                // };
                if (request.hasOwnProperty("Total_Data_in_Current_First_Level_Page") && parseInt(request["Total_Data_in_Current_First_Level_Page"]) !== parseInt(0)) {
                    Total_Data_in_Current_First_Level_Page = parseInt(request["Total_Data_in_Current_First_Level_Page"]);
                };
                if (request.hasOwnProperty("Total_Entry_from_First_Level_Page_to_Second_Level_Page") && parseInt(request["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]) !== parseInt(0)) {
                    Total_Entry_from_First_Level_Page_to_Second_Level_Page = parseInt(request["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]);
                };
                if (request.hasOwnProperty("XPath_from_First_Level_Page_to_Second_Level_Page") && parseInt(request["XPath_from_First_Level_Page_to_Second_Level_Page"].length) > parseInt(0)) {
                    XPath_from_First_Level_Page_to_Second_Level_Page = request["XPath_from_First_Level_Page_to_Second_Level_Page"];
                };
                if (request.hasOwnProperty("Total_Data_in_Current_Second_Level_Page") && parseInt(request["Total_Data_in_Current_Second_Level_Page"]) !== parseInt(0)) {
                    Total_Data_in_Current_Second_Level_Page = parseInt(request["Total_Data_in_Current_Second_Level_Page"]);
                };
                if (request.hasOwnProperty("Total_Entry_from_Second_Level_Page_to_First_Level_Page") && parseInt(request["Total_Entry_from_Second_Level_Page_to_First_Level_Page"]) !== parseInt(0)) {
                    Total_Entry_from_Second_Level_Page_to_First_Level_Page = parseInt(request["Total_Entry_from_Second_Level_Page_to_First_Level_Page"]);
                };
                if (request.hasOwnProperty("XPath_from_Second_Level_Page_to_First_Level_Page") && parseInt(request["XPath_from_Second_Level_Page_to_First_Level_Page"].length) > parseInt(0)) {
                    XPath_from_Second_Level_Page_to_First_Level_Page = request["XPath_from_Second_Level_Page_to_First_Level_Page"];
                };
                // if (request.hasOwnProperty("Data_in_Current_First_Level_Page") && parseInt(request["Data_in_Current_First_Level_Page"].length) > parseInt(0)) {
                //     Data_in_Current_First_Level_Page = request["Data_in_Current_First_Level_Page"];
                // };
                // if (request.hasOwnProperty("Data_in_Current_Second_Level_Page") && parseInt(request["Data_in_Current_Second_Level_Page"].length) > parseInt(0)) {
                //     Data_in_Current_Second_Level_Page = request["Data_in_Current_Second_Level_Page"];
                // };
                if (request.hasOwnProperty("Query_Key_Word_First_Level_Page_Textbox_XPath") && parseInt(request["Query_Key_Word_First_Level_Page_Textbox_XPath"].length) > parseInt(0)) {
                    Query_Key_Word_First_Level_Page_Textbox_XPath = request["Query_Key_Word_First_Level_Page_Textbox_XPath"];
                };
                if (request.hasOwnProperty("Query_Key_Word_First_Level_Page_Button_XPath") && parseInt(request["Query_Key_Word_First_Level_Page_Button_XPath"].length) > parseInt(0)) {
                    Query_Key_Word_First_Level_Page_Button_XPath = request["Query_Key_Word_First_Level_Page_Button_XPath"];
                };
                if (request.hasOwnProperty("Skip_First_Level_Page_Textbox_XPath") && parseInt(request["Skip_First_Level_Page_Textbox_XPath"].length) > parseInt(0)) {
                    Skip_First_Level_Page_Textbox_XPath = request["Skip_First_Level_Page_Textbox_XPath"];
                };
                if (request.hasOwnProperty("Skip_First_Level_Page_Button_XPath") && parseInt(request["Skip_First_Level_Page_Button_XPath"].length) > parseInt(0)) {
                    Skip_First_Level_Page_Button_XPath = request["Skip_First_Level_Page_Button_XPath"];
                };
                if (request.hasOwnProperty("Next_First_Level_Page_Button_XPath") && parseInt(request["Next_First_Level_Page_Button_XPath"].length) > parseInt(0)) {
                    Next_First_Level_Page_Button_XPath = request["Next_First_Level_Page_Button_XPath"];
                };
                if (request.hasOwnProperty("Back_First_Level_Page_Button_XPath") && parseInt(request["Back_First_Level_Page_Button_XPath"].length) > parseInt(0)) {
                    Back_First_Level_Page_Button_XPath = request["Back_First_Level_Page_Button_XPath"];
                };

                // // 用於存儲采集結果的數據庫服務器網址，字符串變量;
                // // http://localhost:27016/insertMany?dbName=testWebData&dbTableName=test20220703&dbUser=admin_testWebData&dbPass=admin&Key=username:password
                // // Data_Server_Url = "";  // 用於存儲采集結果的數據庫服務器網址，字符串變量;
                // if (window.document.getElementById("DataServerUrlInput") !== null) {
                //     Data_Server_Url = String(window.document.getElementById("DataServerUrlInput").value);
                // };
                // // console.log(Data_Server_Url);

                // /* 采集到的結果數據保存形式選擇複選框<input id="DataReceptorsDatabaseCheckbox" type="checkbox" name="DataReceptorsCheckbox" value="Database"> 或者 <input id="DataReceptorsWebpageCheckbox" type="checkbox" name="DataReceptorsCheckbox" value="Webpage" checked="true">; */;
                // // Data_Receptors = String("Webpage");  // 用於存儲采集結果的容器類型複選框值，字符串變量，可取 "Database"，"Database_and_Webpage"，"Webpage" 值，例如取值：String("Webpage");
                // // 判斷指定名稱的複選框元素是否存在;
                // if (window.document.getElementsByName("DataReceptorsCheckbox") !== null && window.document.getElementsByName("DataReceptorsCheckbox").length > 0) {
                //     // window.document.getElementsByName("DataReceptorsCheckbox");
                //     // window.document.getElementById("DataReceptorsDatabaseCheckbox");
                //     // window.document.getElementById("DataReceptorsWebpageCheckbox");

                //     let Data_Receptors_Checkbox = new Array;
                //     Data_Receptors_Checkbox = window.document.getElementsByName("DataReceptorsCheckbox");
                //     Data_Receptors = "";
                //     // 遍歷指定名稱的複選框元素;
                //     for (let i = 0; i < Data_Receptors_Checkbox.length; i++) {

                //         // 判斷複選框元素的選中狀態;
                //         if (Data_Receptors_Checkbox[i].checked) {
                //             if (Data_Receptors === "") {
                //                 /* Data_Receptors_Checkbox[i].getAttribute("checked"); */
                //                 Data_Receptors = String(Data_Receptors_Checkbox[i].getAttribute("value"));  // 從複選框張提取值，並强制轉換爲字符串類型;
                //                 /* Data_Receptors = String(Data_Receptors_Checkbox[i].value); */
                //             } else {
                //                 /* Data_Receptors_Checkbox[i].getAttribute("checked"); */
                //                 Data_Receptors = String(Data_Receptors) + "_and_" + String(Data_Receptors_Checkbox[i].getAttribute("value"));  // 從複選框張提取值，並强制轉換爲字符串類型，然後與已有字符串值拼接;
                //                 /* Data_Receptors = String(Data_Receptors) + "_and_" + String(Data_Receptors_Checkbox[i].value); */
                //             };
                //             // console.log(String(Data_Receptors_Checkbox[i].getAttribute("value")));
                //             // console.log(Data_Receptors);
                //         };
                //     };
                // };
                // // console.log(Data_Receptors);

                // let TemporaryFirstLevelWebCollectResultArray = new Array();
                // let TemporaryTwoLevelWebCollectResultArray = new Array();
                if (request["level"] === "First_and_Second_Level_Page") {
                    // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';
                    // console.log(request["message"]);
                    // console.log(request["error"]);
                    // console.log(request["url"]);
                    // console.log(request["level"]);
                    // console.log(request["Current_First_Level_Page_Number"]);
                    // console.log(request["Current_Second_Level_Page_Number"]);
                    // console.log(request["page_number"]);
                    // // console.log(request["Total_Data_in_Current_First_Level_Page"]);
                    // console.log(request["Total_Data_in_Current_Second_Level_Page"]);
                    // console.log(request["data"]);
                    // JSON.parse(request["data"], function (key, value) {});
                    // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                    let TemporaryPublicVariableCollectResultStoredStringArray = new Array();
                    TemporaryPublicVariableCollectResultStoredStringArray = request["data"];
                    let RetrievalResultId = new Array();
                    let PublicVariableResultExhibitsWebPageRetrievalResultId = new Array();

                    if (parseInt(Data_Level) === parseInt(1)) {

                        // 將抓取到的結果追加保存到臨時暫存一級頁面中的數據數組 TemporaryFirstLevelWebCollectResultArray 中，用於與對應的二級頁面中的數據整合;
                        TemporaryFirstLevelWebCollectResultArray = TemporaryPublicVariableCollectResultStoredStringArray;

                        // 判斷結果數據的保存模式（數據庫或者 Web Page 網頁）;
                        if (Data_Receptors === "Database" || Data_Receptors === "Database_and_Webpage") {

                            if (Data_Server_Url !== "") {

                                let column_Name = [
                                    "Column_1",
                                    "Column_2"
                                ];

                                let UpLoadData = "";
                                let UpLoadData_Array = new Array();
                                for (let i in TemporaryPublicVariableCollectResultStoredStringArray) {
                                    let tempJSON = {};
                                    for (let j in TemporaryPublicVariableCollectResultStoredStringArray[i]) {
                                        tempJSON[column_Name[j]] = String(TemporaryPublicVariableCollectResultStoredStringArray[i][j]);
                                    };
                                    // console.log(tempJSON);
                                    UpLoadData_Array.push(tempJSON);
                                };
                                UpLoadData = JSON.stringify(UpLoadData_Array);
                                // UpLoadData_Array = JSON.parse(UpLoadData, function (key, value) {});
                                // console.log(UpLoadData);

                                // http://localhost:27016/insertMany?dbName=testWebData&dbTableName=test20220703&dbUser=admin_testWebData&dbPass=admin&Key=username:password
                                let request_Authorization = ""; // "username:password";
                                if (Data_Server_Url !== "" && Data_Server_Url.indexOf("&Key=", 0) !== -1) {
                                    request_Authorization = String(Data_Server_Url.split("&Key=")[1]);
                                    if (request_Authorization.indexOf("&", 0) !== -1) {
                                        request_Authorization = String(request_Authorization.split("&")[0]);
                                    };
                                };
                                // console.log(request_Authorization);
                                // let request_Authorization_Base64 = "";
                                // if (request_Authorization === "") {
                                //     request_Authorization_Base64 = "Basic ";  // 'www-authenticate': 'Basic realm="domain name -> username:password"'  獲取響應頭中的"www-authenticate"參數值 response.headers["www-authenticate"];
                                // } else {
                                //     request_Authorization_Base64 = String("Basic".concat(" ", new Base64().encode(request_Authorization)));  // new Base64().decode(request_Authorization_Base64.split(" ")[1])，'www-authenticate': 'Basic realm="domain name -> username:password"'  獲取響應頭中的"www-authenticate"參數值 response.headers["www-authenticate"];
                                // };
                                // // console.log(request_Authorization_Base64);

                                use_AJAX(
                                    "post",  // "get", "post", "form", "file", "ArrayBuffer", "Blob"
                                    UpLoadData,
                                    Data_Server_Url,
                                    request_Authorization,
                                    "",  // abort_button_id_string,
                                    "",  // show_label_id,
                                    // textarea_path_or_URL_id,
                                    function (error, response) {
                                        if (error) {
                                            PublicVariableStartORStopCollectDataButtonClickState = true;  // 中止正在運行的程序
                                            console.log(error);
                                        };
                                        if (response) {
                                            // console.log(typeof(response));
                                            // console.log(response);
                                            let responseJSON = response;
                                            // let responseJSON = JSON.parse(response, function (key, value) {});
                                            // JSON.stringify(responseJSON);
                                            // console.log(responseJSON["ResponseStatus"]);
                                            // console.log(responseJSON["ResponseHeaders"]);
                                            // console.log(typeof(responseJSON["ResponseBody"]));
                                            let responseBodyJSON = JSON.parse(responseJSON["ResponseBody"]);
                                            // console.log(responseBodyJSON);
                                            let Database_say = JSON.parse(responseBodyJSON["Database_say"]);
                                            // console.log(Database_say);
                                            if (Database_say["insertedCount"] === 0 || Database_say["insertedCount"] !== TemporaryPublicVariableCollectResultStoredStringArray.length) {
                                                PublicVariableStartORStopCollectDataButtonClickState = true;  // 中止正在運行的程序
                                                console.log(Database_say);
                                            };
                                        };
                                    }
                                );
                            };

                            /*
                            if (Data_Server_Url === "") {

                                console.log("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                if (Data_Receptors === "Database") {

                                    // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                    chrome.runtime.sendMessage(
                                        {
                                            "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                            "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                            "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            "url": String(window.document.location.href),
                                            // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                                            "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                                            "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                                            "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                                            "data": ''  // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray);
                                        },  // 發送的具體數據，可以是 JSON 對象;
                                        // (request) => {
                                        //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                        //     // console.log(request);
                                        //     // response_data = JSON.parse(request["data"], function (key, value) {});
                                        //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                        //     // if (request["message"] === "background->userInterface:StopCollect") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('background instruction: { Stop collecting }.');
                                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                        //     //     console.log('{ Stand By }.');
                                        //     // };
                                        //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('Backing previous page.');
                                        //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                        //     // };
                                        //     // if (request["message"] === "background->userInterface:StandBy") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('background instruction: { StandBy }.');
                                        //     // };
                                        // }
                                    );

                                    if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                        window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                                    };
                                    // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    };
                                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // };
                                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataServerUrlInput") !== null) {
                                        window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                        window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                        window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    };

                                    PublicVariableStartORStopCollectDataButtonClickState = true;

                                    if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                        // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                        window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    };

                                    return false;
                                };

                                let confirmReteurn = confirm(
                                    "傳入的用於保存結果的數據庫服務器地址參數值錯誤." + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空." + "\n" + "在數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空的情況下，將不會向數據庫服務器發送數據，結果只寫入網頁含有的表格元素中." + "\n" + "單擊 { 確定 } 按鈕將繼續運行，單擊 { 取消 } 按鈕將中止運行.",
                                    "確定",
                                    "取消"
                                );

                                if (confirmReteurn === true) {
                                    // 鼠標左鍵單擊 { 確定 } 按鈕，程序不會中止運行，繼續執行後面的語句;
                                } else if (confirmReteurn === false) {
                                    // 鼠標左鍵單擊 { 取消 } 按鈕，程序中止運行;

                                    // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                    chrome.runtime.sendMessage(
                                        {
                                            "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                            "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                            "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            "url": String(window.document.location.href),
                                            // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                                            "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                                            "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                                            "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                                            "data": ''  // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray);
                                        },  // 發送的具體數據，可以是 JSON 對象;
                                        // (request) => {
                                        //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                        //     // console.log(request);
                                        //     // response_data = JSON.parse(request["data"], function (key, value) {});
                                        //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                        //     // if (request["message"] === "background->userInterface:StopCollect") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('background instruction: { Stop collecting }.');
                                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                        //     //     console.log('{ Stand By }.');
                                        //     // };
                                        //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('Backing previous page.');
                                        //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                        //     // };
                                        //     // if (request["message"] === "background->userInterface:StandBy") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('background instruction: { StandBy }.');
                                        //     // };
                                        // }
                                    );

                                    if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                        window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                                    };
                                    // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    };
                                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // };
                                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataServerUrlInput") !== null) {
                                        window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                        window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                        window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    };

                                    PublicVariableStartORStopCollectDataButtonClickState = true;

                                    if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                        // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                        window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    };

                                    return false;

                                } else {

                                    console.log("參數錯誤 ( Window Confirm Reteurn = " + String(confirmReteurn) + " )，只能取布爾值 true、false 之一.");

                                    // // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                    // chrome.runtime.sendMessage(
                                    //     {
                                    //         "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                    //         "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                    //         "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                    //         // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                    //         "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                    //         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                    //         "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                    //         "url": String(window.document.location.href),
                                    //         // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                    //         "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                                    //         "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                                    //         "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                    //         "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                    //         "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                                    //         "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                                    //         "data": ''  // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray);
                                    //     },  // 發送的具體數據，可以是 JSON 對象;
                                    //     // (request) => {
                                    //     //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                    //     //     // console.log(request);
                                    //     //     // response_data = JSON.parse(request["data"], function (key, value) {});
                                    //     //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                    //     //     // if (request["message"] === "background->userInterface:StopCollect") {
                                    //     //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     //     console.log('background instruction: { Stop collecting }.');
                                    //     //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                    //     //     //     console.log('{ Stand By }.');
                                    //     //     // };
                                    //     //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                    //     //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     //     console.log('Backing previous page.');
                                    //     //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                    //     //     // };
                                    //     //     // if (request["message"] === "background->userInterface:StandBy") {
                                    //     //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     //     console.log('background instruction: { StandBy }.');
                                    //     //     // };
                                    //     // }
                                    // );

                                    // // if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                    // //     window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                                    // // };
                                    // // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                    // if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                    //     window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                    //     window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    //     window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                    //     window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                    //     window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                    //     window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                    //     window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    // };
                                    // // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                    // //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // // };
                                    // if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                    //     window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                    //     window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                    //     window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                    //     window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("DataServerUrlInput") !== null) {
                                    //     window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                    //     window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                    //     window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    // };

                                    // PublicVariableStartORStopCollectDataButtonClickState = true;

                                    // if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                    //     // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                    //     window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    // };

                                    // // alert("參數錯誤 ( Window Confirm Reteurn = " + String(confirmReteurn) + " )，只能取布爾值 true、false 之一.");

                                    // return false;
                                };
                            };
                            */
                        };

                        // 判斷結果數據的保存模式（數據庫或者 Web Page 網頁）;
                        if (Data_Receptors === "Database_and_Webpage" || Data_Receptors === "Webpage") {

                            for (let i in TemporaryPublicVariableCollectResultStoredStringArray) {

                                /* 下面代碼將抓取到的結果追加保存到公共變量數組 PublicVariableCollectResultStoredStringArray 中; */;
                                PublicVariableCollectResultStoredStringArray.push(TemporaryPublicVariableCollectResultStoredStringArray[i]);
                                // /* 下面代碼將抓取到的結果追加保存到臨時暫存一級頁面中的數據數組 TemporaryFirstLevelWebCollectResultArray 中，用於與對應的二級頁面中的數據整合; */;
                                // TemporaryFirstLevelWebCollectResultArray.push(TemporaryPublicVariableCollectResultStoredStringArray[i]);

                                // 創建在當前頁展示的數據表格 <table> 的一行元素 <tr> 的 ID 號字符串;
                                let RetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                                let RetrievalResultEntryNumber = parseInt(i + 1);  // parseInt(request["Current_Second_Level_Page_Number"]);
                                // RetrievalResultId[i] = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                                RetrievalResultId.push("RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">");

                                // 創建在新打開的專門用於展示數據的頁面中的表格 <table> 的一行元素 <tr> 的 ID 號字符串;
                                let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                                let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(i + 1);  // parseInt(request["Current_Second_Level_Page_Number"]);
                                // PublicVariableResultExhibitsWebPageRetrievalResultId[i] = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                                PublicVariableResultExhibitsWebPageRetrievalResultId.push("RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">");

                            };

                            /* 下面代碼將抓取到的結果展示在網頁元素 DIV 層 ResultExhibitsDiv 中; */;
                            if ((window.document.getElementById("ResultExhibitsDiv") !== null || window.document.getElementById("ResultExhibitsDivTagTable") !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                                // let RetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                                // let RetrievalResultEntryNumber = parseInt(request["Current_Second_Level_Page_Number"]);
                                // let RetrievalResultId = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                                DisplayData(
                                    window,
                                    Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                    TemporaryPublicVariableCollectResultStoredStringArray,
                                    "ResultExhibitsDiv",
                                    "ResultExhibitsDivTagTable",
                                    RetrievalResultId
                                );
                            };

                            /* 下面代碼將抓取到的結果展示在新打開的網頁 window 窗口 PublicVariableResultExhibitsWebPage 中; */;
                            if (PublicVariableResultExhibitsWebPage.name !== "") {
                                if ((PublicVariableResultExhibitsWebPage.document.getElementById("ResultExhibitsDiv") !== null || PublicVariableResultExhibitsWebPage.document.getElementById("ResultExhibitsDivTagTable") !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                                    // let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                                    // let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(request["Current_Second_Level_Page_Number"]);
                                    // let PublicVariableResultExhibitsWebPageRetrievalResultId = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                                    DisplayData(
                                        PublicVariableResultExhibitsWebPage,
                                        Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                        TemporaryPublicVariableCollectResultStoredStringArray,
                                        "ResultExhibitsDiv",
                                        "ResultExhibitsDivTagTable",
                                        PublicVariableResultExhibitsWebPageRetrievalResultId
                                    );
                                    PublicVariableResultExhibitsWebPage.document.getElementById(PublicVariableResultExhibitsWebPageRetrievalResultId[parseInt(parseInt(PublicVariableResultExhibitsWebPageRetrievalResultId.length) - parseInt(1))]).scrollIntoView(false);  /* 網頁滾動條滑到 RetrievalResultId 元素的位置; */;
                                };
                            };

                            // for (let i in TemporaryPublicVariableCollectResultStoredStringArray) {
                            //     /* 下面代碼將抓取到的結果追加保存到公共變量數組 PublicVariableCollectResultStoredStringArray 中; */;
                            //     PublicVariableCollectResultStoredStringArray.push(TemporaryPublicVariableCollectResultStoredStringArray[i]);
                            //     /* 下面代碼將抓取到的結果展示在網頁元素 DIV 層 ResultExhibitsDiv 中; */;
                            //     if ((window.document.getElementById("ResultExhibitsDiv") !== null || window.document.getElementById("ResultExhibitsDivTagTable") !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                            //         let RetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                            //         let RetrievalResultEntryNumber = parseInt(i + 1);  // parseInt(request["Current_Second_Level_Page_Number"]);
                            //         // let RetrievalResultId = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                            //         RetrievalResultId[i] = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                            //         DisplayData(
                            //             window,
                            //             Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                            //             [TemporaryPublicVariableCollectResultStoredStringArray[i]],
                            //             "ResultExhibitsDiv",
                            //             "ResultExhibitsDivTagTable",
                            //             [RetrievalResultId[i]]
                            //         );
                            //     };
                            //     /* 下面代碼將抓取到的結果展示在新打開的網頁 window 窗口 PublicVariableResultExhibitsWebPage 中; */;
                            //     if (PublicVariableResultExhibitsWebPage.name !== "") {
                            //         if ((PublicVariableResultExhibitsWebPage.document.getElementById("ResultExhibitsDiv") !== null || PublicVariableResultExhibitsWebPage.document.getElementById("ResultExhibitsDivTagTable") !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                            //             let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                            //             let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(i + 1);  // parseInt(request["Current_Second_Level_Page_Number"]);
                            //             // let PublicVariableResultExhibitsWebPageRetrievalResultId = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                            //             PublicVariableResultExhibitsWebPageRetrievalResultId[i] = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                            //             DisplayData(
                            //                 PublicVariableResultExhibitsWebPage,
                            //                 Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                            //                 [TemporaryPublicVariableCollectResultStoredStringArray[i]],
                            //                 "ResultExhibitsDiv",
                            //                 "ResultExhibitsDivTagTable",
                            //                 [PublicVariableResultExhibitsWebPageRetrievalResultId[i]]
                            //             );
                            //             PublicVariableResultExhibitsWebPage.document.getElementById(PublicVariableResultExhibitsWebPageRetrievalResultId).scrollIntoView(false);  /* 網頁滾動條滑到 RetrievalResultId 元素的位置; */;
                            //         };
                            //     };
                            // };
                        };

                        console.log('injected script instruction: { Obtain_First_Level_Page_Data [ ' + String(request["Current_First_Level_Page_Number"]) + '--' + String(request["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]) + ' ] ' + String(TemporaryFirstLevelWebCollectResultArray.length) + ' }.');
                        // if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //     // window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取第 < " + String(request["Current_First_Level_Page_Number"]) + " > 個一級頁面中的第 < " + String(request["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]) + " > 個二級頁面中的數據. }";
                        //     window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取 < " + String(request["Current_First_Level_Page_Number"]) + "--" + String(request["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]) + "--" + String(TemporaryFirstLevelWebCollectResultArray.length) + " > }";
                        // };

                        // 刷新操作頁面中的提示標簽顯示值;
                        // if (request.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(request["Current_Second_Level_Page_Number"]) < parseInt(End_Current_Second_Level_Page_In_Current_First_Level_Page)) {
                            if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁 < " + String(request["Total_Data_in_Current_First_Level_Page"]) +" > 條成. }";
                            };
                            if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = "1";  // String(parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1));
                            };
                        // } else {
                            if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁 < " + String(request["Total_Data_in_Current_First_Level_Page"]) +" > 條成，< " + String(request["Current_First_Level_Page_Number"]) + " > 頁終. }";
                            };
                        // };

                        // 刷新操作頁面中的提示標簽顯示值;
                        // if (request.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(request["Current_Second_Level_Page_Number"]) === parseInt(End_Current_Second_Level_Page_In_Current_First_Level_Page)) {
                            if (request.hasOwnProperty("Current_First_Level_Page_Number") && ( parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1) ) > parseInt(End_First_Level_Page_Number)) {
                                if (request.hasOwnProperty("Current_First_Level_Page_Number") && ( parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1) ) <= parseInt(Maximum_First_Level_Page_Number)) {
                                    if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                        window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁成，已. }";
                                    };
                                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1));
                                    };
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = parseInt(1);
                                    };
                                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value = String(parseInt(EndFirstLevelPageNumber) + parseInt(1));
                                    };
                                } else {
                                    if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                        window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁成，盡端. }";
                                    };
                                };

                                /* 更改按鈕狀態和標志 */;
                                PublicVariableStartORStopCollectDataButtonClickState = !PublicVariableStartORStopCollectDataButtonClickState;
                                if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                    switch(PublicVariableStartORStopCollectDataButtonClickState) {
                                        case true: window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data"; break;
                                        case false: window.document.getElementById("StartORStopCollectDataButton").innerText = "Stop Collect Data"; break;
                                        default: alert("Start OR Stop Collect Data Button" + "\n" + "Function StartORStopCollectData() Variable { PublicVariableStartORStopCollectDataButtonClickState } Error !" + "\n" + PublicVariableStartORStopCollectDataButtonClickState);
                                    };
                                };
                                if (PublicVariableStartORStopCollectDataButtonClickState) {

                                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    };
                                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // };
                                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    };
                                };

                            } else if (request.hasOwnProperty("Current_First_Level_Page_Number") && parseInt(request["Current_First_Level_Page_Number"]) < parseInt(End_First_Level_Page_Number)) {
                                if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1));
                                };
                            } else {};

                            // if (( parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1) ) <= parseInt(Maximum_Second_Level_Page_Number)) {
                            //     if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //         window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1));
                            //     };
                            // } else if (( parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1) ) > parseInt(Maximum_Second_Level_Page_Number) && parseInt(request["Current_First_Level_Page_Number"]) < parseInt(Maximum_First_Level_Page_Number)) {
                            //     if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //         window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = "1";
                            //     };
                            // } else if (( parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1) ) > parseInt(Maximum_Second_Level_Page_Number) && parseInt(request["Current_First_Level_Page_Number"]) >= parseInt(Maximum_First_Level_Page_Number)) {
                            //     if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //         window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(request["Current_Second_Level_Page_Number"]);
                            //     };
                            // };
                        // };

                    } else if (parseInt(Data_Level) === parseInt(2)) {

                        // for (let i in TemporaryPublicVariableCollectResultStoredStringArray) {
                        //     /* 下面代碼將抓取到的結果追加保存到公共變量數組 PublicVariableCollectResultStoredStringArray 中; */;
                        //     PublicVariableCollectResultStoredStringArray.push(TemporaryPublicVariableCollectResultStoredStringArray[i]);
                        //     // /* 下面代碼將抓取到的結果追加保存到臨時暫存一級頁面中的數據數組 TemporaryFirstLevelWebCollectResultArray 中，用於與對應的二級頁面中的數據整合; */;
                        //     // TemporaryFirstLevelWebCollectResultArray.push(TemporaryPublicVariableCollectResultStoredStringArray[i]);
                        //     // 創建在當前頁展示的數據表格 <table> 的一行元素 <tr> 的 ID 號字符串;
                        //     let RetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                        //     let RetrievalResultEntryNumber = parseInt(i + 1);  // parseInt(request["Current_Second_Level_Page_Number"]);
                        //     // RetrievalResultId[i] = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                        //     RetrievalResultId.push("RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">");
                        //     // 創建在新打開的專門用於展示數據的頁面中的表格 <table> 的一行元素 <tr> 的 ID 號字符串;
                        //     let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                        //     let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(i + 1);  // parseInt(request["Current_Second_Level_Page_Number"]);
                        //     // PublicVariableResultExhibitsWebPageRetrievalResultId[i] = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                        //     PublicVariableResultExhibitsWebPageRetrievalResultId.push("RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">");
                        // };

                        let temp_one_row_Array = new Array();
                        for (let i in TemporaryPublicVariableCollectResultStoredStringArray) {
                            for (let j in TemporaryPublicVariableCollectResultStoredStringArray[i]) {
                                temp_one_row_Array.push(TemporaryPublicVariableCollectResultStoredStringArray[i][j]);
                            };
                        };
                        // 將抓取到的結果追加保存到臨時暫存一級頁面中的數據數組 TemporaryFirstLevelWebCollectResultArray 中，用於與對應的二級頁面中的數據整合;
                        // TemporaryFirstLevelWebCollectResultArray = TemporaryPublicVariableCollectResultStoredStringArray;
                        TemporaryFirstLevelWebCollectResultArray = temp_one_row_Array;

                        // 判斷結果數據的保存模式（數據庫或者 Web Page 網頁）;
                        if (Data_Receptors === "Database" || Data_Receptors === "Database_and_Webpage") {
    
                            if (Data_Server_Url !== "") {
    
                                let column_Name = [
                                    "Column_1",
                                    "Column_2",
                                    "Column_3",
                                    "Column_4",
                                    "Column_5",
                                    "Column_6",
                                    "Column_7",
                                    "Column_8",
                                    "Column_9",
                                    "Column_10",
                                    "Column_11",
                                    "Column_12"
                                ];
    
                                let UpLoadData = "";
                                let UpLoadData_Array = new Array();
                                for (let i in [temp_one_row_Array]) {
                                    let tempJSON = {};
                                    for (let j in [temp_one_row_Array][i]) {
                                        tempJSON[column_Name[j]] = String([temp_one_row_Array][i][j]);
                                    };
                                    // console.log(tempJSON);
                                    UpLoadData_Array.push(tempJSON);
                                };
                                UpLoadData = JSON.stringify(UpLoadData_Array);
                                // UpLoadData_Array = JSON.parse(UpLoadData, function (key, value) {});
                                // console.log(UpLoadData);
    
                                // http://localhost:27016/insertMany?dbName=testWebData&dbTableName=test20220703&dbUser=admin_testWebData&dbPass=admin&Key=username:password
                                let request_Authorization = ""; // "username:password";
                                if (Data_Server_Url !== "" && Data_Server_Url.indexOf("&Key=", 0) !== -1) {
                                    request_Authorization = String(Data_Server_Url.split("&Key=")[1]);
                                    if (request_Authorization.indexOf("&", 0) !== -1) {
                                        request_Authorization = String(request_Authorization.split("&")[0]);
                                    };
                                };
                                // console.log(request_Authorization);
                                // let request_Authorization_Base64 = "";
                                // if (request_Authorization === "") {
                                //     request_Authorization_Base64 = "Basic ";  // 'www-authenticate': 'Basic realm="domain name -> username:password"'  獲取響應頭中的"www-authenticate"參數值 response.headers["www-authenticate"];
                                // } else {
                                //     request_Authorization_Base64 = String("Basic".concat(" ", new Base64().encode(request_Authorization)));  // new Base64().decode(request_Authorization_Base64.split(" ")[1])，'www-authenticate': 'Basic realm="domain name -> username:password"'  獲取響應頭中的"www-authenticate"參數值 response.headers["www-authenticate"];
                                // };
                                // // console.log(request_Authorization_Base64);
    
                                use_AJAX(
                                    "post",  // "get", "post", "form", "file", "ArrayBuffer", "Blob"
                                    UpLoadData,
                                    Data_Server_Url,
                                    request_Authorization,
                                    "",  // abort_button_id_string,
                                    "",  // show_label_id,
                                    // textarea_path_or_URL_id,
                                    function (error, response) {
                                        if (error) {
                                            PublicVariableStartORStopCollectDataButtonClickState = true;  // 中止正在運行的程序
                                            console.log(error);
                                        };
                                        if (response) {
                                            // console.log(typeof(response));
                                            // console.log(response);
                                            let responseJSON = response;
                                            // let responseJSON = JSON.parse(response, function (key, value) {});
                                            // JSON.stringify(responseJSON);
                                            // console.log(responseJSON["ResponseStatus"]);
                                            // console.log(responseJSON["ResponseHeaders"]);
                                            // console.log(typeof(responseJSON["ResponseBody"]));
                                            let responseBodyJSON = JSON.parse(responseJSON["ResponseBody"]);
                                            // console.log(responseBodyJSON);
                                            let Database_say = JSON.parse(responseBodyJSON["Database_say"]);
                                            // console.log(Database_say);
                                            if (Database_say["insertedCount"] === 0 || Database_say["insertedCount"] !== [temp_one_row_Array].length) {
                                                PublicVariableStartORStopCollectDataButtonClickState = true;  // 中止正在運行的程序
                                                console.log(Database_say);
                                            };
                                        };
                                    }
                                );
                            };

                            /*
                            if (Data_Server_Url === "") {

                                console.log("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                if (Data_Receptors === "Database") {

                                    // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                    chrome.runtime.sendMessage(
                                        {
                                            "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                            "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                            "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            "url": String(window.document.location.href),
                                            // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                                            "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                                            "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                                            "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                                            "data": ''  // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray);
                                        },  // 發送的具體數據，可以是 JSON 對象;
                                        // (request) => {
                                        //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                        //     // console.log(request);
                                        //     // response_data = JSON.parse(request["data"], function (key, value) {});
                                        //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                        //     // if (request["message"] === "background->userInterface:StopCollect") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('background instruction: { Stop collecting }.');
                                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                        //     //     console.log('{ Stand By }.');
                                        //     // };
                                        //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('Backing previous page.');
                                        //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                        //     // };
                                        //     // if (request["message"] === "background->userInterface:StandBy") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('background instruction: { StandBy }.');
                                        //     // };
                                        // }
                                    );

                                    if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                        window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                                    };
                                    // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    };
                                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // };
                                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataServerUrlInput") !== null) {
                                        window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                        window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                        window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    };

                                    PublicVariableStartORStopCollectDataButtonClickState = true;

                                    if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                        // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                        window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    };

                                    return false;
                                };

                                let confirmReteurn = confirm(
                                    "傳入的用於保存結果的數據庫服務器地址參數值錯誤." + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空." + "\n" + "在數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空的情況下，將不會向數據庫服務器發送數據，結果只寫入網頁含有的表格元素中." + "\n" + "單擊 { 確定 } 按鈕將繼續運行，單擊 { 取消 } 按鈕將中止運行.",
                                    "確定",
                                    "取消"
                                );

                                if (confirmReteurn === true) {
                                    // 鼠標左鍵單擊 { 確定 } 按鈕，程序不會中止運行，繼續執行後面的語句;
                                } else if (confirmReteurn === false) {
                                    // 鼠標左鍵單擊 { 取消 } 按鈕，程序中止運行;

                                    // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                    chrome.runtime.sendMessage(
                                        {
                                            "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                            "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                            "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            "url": String(window.document.location.href),
                                            // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                                            "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                                            "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                                            "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                                            "data": ''  // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray);
                                        },  // 發送的具體數據，可以是 JSON 對象;
                                        // (request) => {
                                        //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                        //     // console.log(request);
                                        //     // response_data = JSON.parse(request["data"], function (key, value) {});
                                        //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                        //     // if (request["message"] === "background->userInterface:StopCollect") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('background instruction: { Stop collecting }.');
                                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                        //     //     console.log('{ Stand By }.');
                                        //     // };
                                        //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('Backing previous page.');
                                        //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                        //     // };
                                        //     // if (request["message"] === "background->userInterface:StandBy") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('background instruction: { StandBy }.');
                                        //     // };
                                        // }
                                    );

                                    if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                        window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                                    };
                                    // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    };
                                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // };
                                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataServerUrlInput") !== null) {
                                        window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                        window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                        window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    };

                                    PublicVariableStartORStopCollectDataButtonClickState = true;

                                    if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                        // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                        window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    };

                                    return false;

                                } else {

                                    console.log("參數錯誤 ( Window Confirm Reteurn = " + String(confirmReteurn) + " )，只能取布爾值 true、false 之一.");

                                    // // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                    // chrome.runtime.sendMessage(
                                    //     {
                                    //         "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                    //         "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                    //         "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                    //         // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                    //         "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                    //         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                    //         "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                    //         "url": String(window.document.location.href),
                                    //         // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                    //         "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                                    //         "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                                    //         "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                    //         "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                    //         "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                                    //         "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                                    //         "data": ''  // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray);
                                    //     },  // 發送的具體數據，可以是 JSON 對象;
                                    //     // (request) => {
                                    //     //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                    //     //     // console.log(request);
                                    //     //     // response_data = JSON.parse(request["data"], function (key, value) {});
                                    //     //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                    //     //     // if (request["message"] === "background->userInterface:StopCollect") {
                                    //     //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     //     console.log('background instruction: { Stop collecting }.');
                                    //     //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                    //     //     //     console.log('{ Stand By }.');
                                    //     //     // };
                                    //     //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                    //     //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     //     console.log('Backing previous page.');
                                    //     //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                    //     //     // };
                                    //     //     // if (request["message"] === "background->userInterface:StandBy") {
                                    //     //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     //     console.log('background instruction: { StandBy }.');
                                    //     //     // };
                                    //     // }
                                    // );

                                    // // if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                    // //     window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                                    // // };
                                    // // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                    // if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                    //     window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                    //     window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    //     window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                    //     window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                    //     window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                    //     window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                    //     window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    // };
                                    // // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                    // //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // // };
                                    // if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                    //     window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                    //     window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                    //     window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                    //     window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("DataServerUrlInput") !== null) {
                                    //     window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                    //     window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                    //     window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    // };

                                    // PublicVariableStartORStopCollectDataButtonClickState = true;

                                    // if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                    //     // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                    //     window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    // };

                                    // // alert("參數錯誤 ( Window Confirm Reteurn = " + String(confirmReteurn) + " )，只能取布爾值 true、false 之一.");

                                    // return false;
                                };
                            };
                            */
                        };

                        // 判斷結果數據的保存模式（數據庫或者 Web Page 網頁）;
                        if (Data_Receptors === "Database_and_Webpage" || Data_Receptors === "Webpage") {

                            /* 下面代碼將抓取到的結果追加保存到公共變量數組 PublicVariableCollectResultStoredStringArray 中; */;
                            // PublicVariableCollectResultStoredStringArray.push(TemporaryPublicVariableCollectResultStoredStringArray);
                            PublicVariableCollectResultStoredStringArray.push(temp_one_row_Array);
                            // /* 下面代碼將抓取到的結果追加保存到臨時暫存一級頁面中的數據數組 TemporaryFirstLevelWebCollectResultArray 中，用於與對應的二級頁面中的數據整合; */;
                            // TemporaryFirstLevelWebCollectResultArray.push(TemporaryPublicVariableCollectResultStoredStringArray[i]);

                            // 創建在當前頁展示的數據表格 <table> 的一行元素 <tr> 的 ID 號字符串;
                            let RetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                            let RetrievalResultEntryNumber = parseInt(request["Current_Second_Level_Page_Number"]);
                            RetrievalResultId[0] = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                            // RetrievalResultId.push("RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">");

                            // 創建在新打開的專門用於展示數據的頁面中的表格 <table> 的一行元素 <tr> 的 ID 號字符串;
                            let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                            let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(request["Current_Second_Level_Page_Number"]);
                            PublicVariableResultExhibitsWebPageRetrievalResultId[0] = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                            // PublicVariableResultExhibitsWebPageRetrievalResultId.push("RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">");

                            /* 下面代碼將抓取到的結果展示在網頁元素 DIV 層 ResultExhibitsDiv 中; */;
                            if ((window.document.getElementById("ResultExhibitsDiv") !== null || window.document.getElementById("ResultExhibitsDivTagTable") !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                                // let RetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                                // let RetrievalResultEntryNumber = parseInt(request["Current_Second_Level_Page_Number"]);
                                // let RetrievalResultId = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                                DisplayData(
                                    window,
                                    Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                    [temp_one_row_Array],  // TemporaryPublicVariableCollectResultStoredStringArray,
                                    "ResultExhibitsDiv",
                                    "ResultExhibitsDivTagTable",
                                    RetrievalResultId
                                );
                            };

                            /* 下面代碼將抓取到的結果展示在新打開的網頁 window 窗口 PublicVariableResultExhibitsWebPage 中; */;
                            if (PublicVariableResultExhibitsWebPage.name !== "") {
                                if ((PublicVariableResultExhibitsWebPage.document.getElementById("ResultExhibitsDiv") !== null || PublicVariableResultExhibitsWebPage.document.getElementById("ResultExhibitsDivTagTable") !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                                    // let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                                    // let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(request["Current_Second_Level_Page_Number"]);
                                    // let PublicVariableResultExhibitsWebPageRetrievalResultId = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                                    DisplayData(
                                        PublicVariableResultExhibitsWebPage,
                                        Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                        [temp_one_row_Array],  // TemporaryPublicVariableCollectResultStoredStringArray,
                                        "ResultExhibitsDiv",
                                        "ResultExhibitsDivTagTable",
                                        PublicVariableResultExhibitsWebPageRetrievalResultId
                                    );
                                    PublicVariableResultExhibitsWebPage.document.getElementById(PublicVariableResultExhibitsWebPageRetrievalResultId[0]).scrollIntoView(false);  /* 網頁滾動條滑到 RetrievalResultId 元素的位置; */;
                                };
                            };

                            // for (let i in TemporaryPublicVariableCollectResultStoredStringArray) {
                            //     /* 下面代碼將抓取到的結果追加保存到公共變量數組 PublicVariableCollectResultStoredStringArray 中; */;
                            //     PublicVariableCollectResultStoredStringArray.push(TemporaryPublicVariableCollectResultStoredStringArray[i]);
                            //     /* 下面代碼將抓取到的結果展示在網頁元素 DIV 層 ResultExhibitsDiv 中; */;
                            //     if ((window.document.getElementById("ResultExhibitsDiv") !== null || window.document.getElementById("ResultExhibitsDivTagTable") !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                            //         let RetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                            //         let RetrievalResultEntryNumber = parseInt(i + 1);  // parseInt(request["Current_Second_Level_Page_Number"]);
                            //         // let RetrievalResultId = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                            //         RetrievalResultId[i] = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                            //         DisplayData(
                            //             window,
                            //             Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                            //             [TemporaryPublicVariableCollectResultStoredStringArray[i]],
                            //             "ResultExhibitsDiv",
                            //             "ResultExhibitsDivTagTable",
                            //             [RetrievalResultId[i]]
                            //         );
                            //     };
                            //     /* 下面代碼將抓取到的結果展示在新打開的網頁 window 窗口 PublicVariableResultExhibitsWebPage 中; */;
                            //     if (PublicVariableResultExhibitsWebPage.name !== "") {
                            //         if ((PublicVariableResultExhibitsWebPage.document.getElementById("ResultExhibitsDiv") !== null || PublicVariableResultExhibitsWebPage.document.getElementById("ResultExhibitsDivTagTable") !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                            //             let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                            //             let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(i + 1);  // parseInt(request["Current_Second_Level_Page_Number"]);
                            //             // let PublicVariableResultExhibitsWebPageRetrievalResultId = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                            //             PublicVariableResultExhibitsWebPageRetrievalResultId[i] = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                            //             DisplayData(
                            //                 PublicVariableResultExhibitsWebPage,
                            //                 Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                            //                 [TemporaryPublicVariableCollectResultStoredStringArray[i]],
                            //                 "ResultExhibitsDiv",
                            //                 "ResultExhibitsDivTagTable",
                            //                 [PublicVariableResultExhibitsWebPageRetrievalResultId[i]]
                            //             );
                            //             PublicVariableResultExhibitsWebPage.document.getElementById(PublicVariableResultExhibitsWebPageRetrievalResultId).scrollIntoView(false);  /* 網頁滾動條滑到 RetrievalResultId 元素的位置; */;
                            //         };
                            //     };
                            // };
                        };

                        // console.log('injected script instruction: { Obtain_First_Level_Page_Data [ ' + String(request["Current_First_Level_Page_Number"]) + '--' + String(request["Current_Second_Level_Page_Number"]) + ' ] ' + String(TemporaryFirstLevelWebCollectResultArray.length) + ' }.');
                        console.log('injected script instruction: { Obtain_First_Level_Page_Data [ ' + String(request["Current_First_Level_Page_Number"]) + '--' + String(request["Current_Second_Level_Page_Number"]) + ' ] ' + String(request["Maximum_Second_Level_Page_Number"]) + ' }.');
                        // if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //     // window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取第 < " + String(request["Current_First_Level_Page_Number"]) + " > 個一級頁面中的第 < " + String(request["Current_Second_Level_Page_Number"]) + " > 個二級頁面中的數據. }";
                        //     window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取 < " + String(request["Current_First_Level_Page_Number"]) + "--" + String(request["Current_Second_Level_Page_Number"]) + "--" + String(TemporaryFirstLevelWebCollectResultArray.length) + " > }";
                        // };

                        // 刷新操作頁面中的提示標簽顯示值;
                        if (request.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(request["Current_Second_Level_Page_Number"]) < parseInt(End_Current_Second_Level_Page_In_Current_First_Level_Page)) {
                            if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁 < " + String(request["Current_Second_Level_Page_Number"]) +" > 條成. }";
                            };
                            if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1));
                            };
                        } else {
                            if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁 < " + String(request["Current_Second_Level_Page_Number"]) +" > 條成，< " + String(request["Current_First_Level_Page_Number"]) + " > 頁終. }";
                            };
                        };
                        // 刷新操作頁面中的提示標簽顯示值;
                        if (request.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(request["Current_Second_Level_Page_Number"]) === parseInt(End_Current_Second_Level_Page_In_Current_First_Level_Page)) {
                            if (request.hasOwnProperty("Current_First_Level_Page_Number") && ( parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1) ) > parseInt(End_First_Level_Page_Number)) {
                                if (request.hasOwnProperty("Current_First_Level_Page_Number") && ( parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1) ) <= parseInt(Maximum_First_Level_Page_Number)) {
                                    if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                        window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁成，已. }";
                                    };
                                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1));
                                    };
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = parseInt(1);
                                    };
                                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value = String(parseInt(EndFirstLevelPageNumber) + parseInt(1));
                                    };
                                } else {
                                    if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                        window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁成，盡端. }";
                                    };
                                };

                                /* 更改按鈕狀態和標志 */;
                                PublicVariableStartORStopCollectDataButtonClickState = !PublicVariableStartORStopCollectDataButtonClickState;
                                if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                    switch(PublicVariableStartORStopCollectDataButtonClickState) {
                                        case true: window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data"; break;
                                        case false: window.document.getElementById("StartORStopCollectDataButton").innerText = "Stop Collect Data"; break;
                                        default: alert("Start OR Stop Collect Data Button" + "\n" + "Function StartORStopCollectData() Variable { PublicVariableStartORStopCollectDataButtonClickState } Error !" + "\n" + PublicVariableStartORStopCollectDataButtonClickState);
                                    };
                                };
                                if (PublicVariableStartORStopCollectDataButtonClickState) {

                                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    };
                                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // };
                                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    };
                                };

                            } else if (request.hasOwnProperty("Current_First_Level_Page_Number") && parseInt(request["Current_First_Level_Page_Number"]) < parseInt(End_First_Level_Page_Number)) {
                                if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1));
                                };
                            } else {};
    
                            if (( parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1) ) <= parseInt(Maximum_Second_Level_Page_Number)) {
                                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1));
                                };
                            } else if (( parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1) ) > parseInt(Maximum_Second_Level_Page_Number) && parseInt(request["Current_First_Level_Page_Number"]) < parseInt(Maximum_First_Level_Page_Number)) {
                                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = "1";
                                };
                            } else if (( parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1) ) > parseInt(Maximum_Second_Level_Page_Number) && parseInt(request["Current_First_Level_Page_Number"]) >= parseInt(Maximum_First_Level_Page_Number)) {
                                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(request["Current_Second_Level_Page_Number"]);
                                };
                            };
                        };

                    } else {};

                    // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                    // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + request["error"]);
                    // console.log(request);
                    // return false;
                };
                if (request["level"] === "First_Level_Page") {
                    // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';
                    // console.log(request["message"]);
                    // console.log(request["error"]);
                    // console.log(request["url"]);
                    // console.log(request["level"]);
                    // console.log(request["Current_First_Level_Page_Number"]);
                    // console.log(request["Current_Second_Level_Page_Number"]);
                    // console.log(request["page_number"]);
                    // console.log(request["Total_Data_in_Current_First_Level_Page"]);
                    // // console.log(request["Total_Data_in_Current_Second_Level_Page"]);
                    // JSON.parse(request["data"], function (key, value) {});
                    // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                    // console.log(request["data"]);

                    TemporaryFirstLevelWebCollectResultArray = new Array();
                    TemporaryFirstLevelWebCollectResultArray = request["Data_in_Current_First_Level_Page"];  // request["data"];
                    // console.log(TemporaryFirstLevelWebCollectResultArray);
                    let RetrievalResultId = new Array();
                    let PublicVariableResultExhibitsWebPageRetrievalResultId = new Array();

                    // Data_Level = parseInt(2); parseInt(1);  // 想要采集的數據處在目標數據源網頁的第幾個層級上;
                    if (parseInt(Data_Level) === parseInt(2)) {
                        // console.log('injected script instruction: { Obtain_First_Level_Page_Data [ ' + String(request["Current_First_Level_Page_Number"]) + '--' + String(request["Current_Second_Level_Page_Number"]) + ' ] ' + String(TemporaryFirstLevelWebCollectResultArray.length) + ' }.');
                        console.log('injected script instruction: { Obtain_First_Level_Page_Data [ ' + String(request["Current_First_Level_Page_Number"]) + '--' + String(0) + ' ] ' + String(TemporaryFirstLevelWebCollectResultArray.length) + ' }.');
                        if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            // window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取第 < " + String(request["Current_First_Level_Page_Number"]) + " > 個一級頁面中的第 < " + String(request["Current_Second_Level_Page_Number"]) + " > 個二級頁面中的數據. }";
                            window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取 < " + String(request["Current_First_Level_Page_Number"]) + "--" + String(0) + "--" + String(TemporaryFirstLevelWebCollectResultArray.length) + " > }";
                            // window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取 < " + String(request["Current_First_Level_Page_Number"]) + "--" + String(request["Current_Second_Level_Page_Number"]) + "--" + String(TemporaryFirstLevelWebCollectResultArray.length) + " > }";
                        };
                    } else if (parseInt(Data_Level) === parseInt(1)) {

                        // 判斷結果數據的保存模式（數據庫或者 Web Page 網頁）;
                        if (Data_Receptors === "Database" || Data_Receptors === "Database_and_Webpage") {

                            if (Data_Server_Url !== "") {

                                let column_Name = [
                                    "Column_1",
                                    "Column_2"
                                ];

                                let UpLoadData = "";
                                let UpLoadData_Array = new Array();
                                for (let i in TemporaryFirstLevelWebCollectResultArray) {
                                    let tempJSON = {};
                                    for (let j in TemporaryFirstLevelWebCollectResultArray[i]) {
                                        tempJSON[column_Name[j]] = String(TemporaryFirstLevelWebCollectResultArray[i][j]);
                                    };
                                    // console.log(tempJSON);
                                    UpLoadData_Array.push(tempJSON);
                                };
                                UpLoadData = JSON.stringify(UpLoadData_Array);
                                // UpLoadData_Array = JSON.parse(UpLoadData, function (key, value) {});
                                // console.log(UpLoadData);

                                // http://localhost:27016/insertMany?dbName=testWebData&dbTableName=test20220703&dbUser=admin_testWebData&dbPass=admin&Key=username:password
                                let request_Authorization = ""; // "username:password";
                                if (Data_Server_Url !== "" && Data_Server_Url.indexOf("&Key=", 0) !== -1) {
                                    request_Authorization = String(Data_Server_Url.split("&Key=")[1]);
                                    if (request_Authorization.indexOf("&", 0) !== -1) {
                                        request_Authorization = String(request_Authorization.split("&")[0]);
                                    };
                                };
                                // console.log(request_Authorization);
                                // let request_Authorization_Base64 = "";
                                // if (request_Authorization === "") {
                                //     request_Authorization_Base64 = "Basic ";  // 'www-authenticate': 'Basic realm="domain name -> username:password"'  獲取響應頭中的"www-authenticate"參數值 response.headers["www-authenticate"];
                                // } else {
                                //     request_Authorization_Base64 = String("Basic".concat(" ", new Base64().encode(request_Authorization)));  // new Base64().decode(request_Authorization_Base64.split(" ")[1])，'www-authenticate': 'Basic realm="domain name -> username:password"'  獲取響應頭中的"www-authenticate"參數值 response.headers["www-authenticate"];
                                // };
                                // // console.log(request_Authorization_Base64);

                                use_AJAX(
                                    "post",  // "get", "post", "form", "file", "ArrayBuffer", "Blob"
                                    UpLoadData,
                                    Data_Server_Url,
                                    request_Authorization,
                                    "",  // abort_button_id_string,
                                    "",  // show_label_id,
                                    // textarea_path_or_URL_id,
                                    function (error, response) {
                                        if (error) {
                                            PublicVariableStartORStopCollectDataButtonClickState = true;  // 中止正在運行的程序
                                            console.log(error);
                                        };
                                        if (response) {
                                            // console.log(typeof(response));
                                            // console.log(response);
                                            let responseJSON = response;
                                            // let responseJSON = JSON.parse(response, function (key, value) {});
                                            // JSON.stringify(responseJSON);
                                            // console.log(responseJSON["ResponseStatus"]);
                                            // console.log(responseJSON["ResponseHeaders"]);
                                            // console.log(typeof(responseJSON["ResponseBody"]));
                                            let responseBodyJSON = JSON.parse(responseJSON["ResponseBody"]);
                                            // console.log(responseBodyJSON);
                                            let Database_say = JSON.parse(responseBodyJSON["Database_say"]);
                                            // console.log(Database_say);
                                            if (Database_say["insertedCount"] === 0 || Database_say["insertedCount"] !== TemporaryFirstLevelWebCollectResultArray.length) {
                                                PublicVariableStartORStopCollectDataButtonClickState = true;  // 中止正在運行的程序
                                                console.log(Database_say);
                                            };
                                        };
                                    }
                                );
                            };

                            /*
                            if (Data_Server_Url === "") {

                                console.log("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                if (Data_Receptors === "Database") {

                                    // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                    chrome.runtime.sendMessage(
                                        {
                                            "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                            "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                            "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            "url": String(window.document.location.href),
                                            // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                                            "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                                            "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                                            "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                                            "data": ''  // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray);
                                        },  // 發送的具體數據，可以是 JSON 對象;
                                        // (request) => {
                                        //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                        //     // console.log(request);
                                        //     // response_data = JSON.parse(request["data"], function (key, value) {});
                                        //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                        //     // if (request["message"] === "background->userInterface:StopCollect") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('background instruction: { Stop collecting }.');
                                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                        //     //     console.log('{ Stand By }.');
                                        //     // };
                                        //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('Backing previous page.');
                                        //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                        //     // };
                                        //     // if (request["message"] === "background->userInterface:StandBy") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('background instruction: { StandBy }.');
                                        //     // };
                                        // }
                                    );

                                    if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                        window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                                    };
                                    // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    };
                                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // };
                                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataServerUrlInput") !== null) {
                                        window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                        window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                        window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    };

                                    PublicVariableStartORStopCollectDataButtonClickState = true;

                                    if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                        // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                        window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    };

                                    return false;
                                };

                                let confirmReteurn = confirm(
                                    "傳入的用於保存結果的數據庫服務器地址參數值錯誤." + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空." + "\n" + "在數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空的情況下，將不會向數據庫服務器發送數據，結果只寫入網頁含有的表格元素中." + "\n" + "單擊 { 確定 } 按鈕將繼續運行，單擊 { 取消 } 按鈕將中止運行.",
                                    "確定",
                                    "取消"
                                );

                                if (confirmReteurn === true) {
                                    // 鼠標左鍵單擊 { 確定 } 按鈕，程序不會中止運行，繼續執行後面的語句;
                                } else if (confirmReteurn === false) {
                                    // 鼠標左鍵單擊 { 取消 } 按鈕，程序中止運行;

                                    // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                    chrome.runtime.sendMessage(
                                        {
                                            "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                            "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                            "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                            // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                            "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                            "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                            "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                            "url": String(window.document.location.href),
                                            // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                            "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                                            "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                                            "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                            "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                            "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                                            "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                                            "data": ''  // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray);
                                        },  // 發送的具體數據，可以是 JSON 對象;
                                        // (request) => {
                                        //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                        //     // console.log(request);
                                        //     // response_data = JSON.parse(request["data"], function (key, value) {});
                                        //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                        //     // if (request["message"] === "background->userInterface:StopCollect") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('background instruction: { Stop collecting }.');
                                        //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                        //     //     console.log('{ Stand By }.');
                                        //     // };
                                        //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('Backing previous page.');
                                        //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                        //     // };
                                        //     // if (request["message"] === "background->userInterface:StandBy") {
                                        //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                        //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                        //     //     console.log('background instruction: { StandBy }.');
                                        //     // };
                                        // }
                                    );

                                    if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                        window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                                    };
                                    // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                    if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                        window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                        window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                        window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                        window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    };
                                    // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                    //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // };
                                    if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                        window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                        window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataServerUrlInput") !== null) {
                                        window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                        window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    };
                                    if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                        window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    };

                                    PublicVariableStartORStopCollectDataButtonClickState = true;

                                    if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                        // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                        window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    };

                                    return false;

                                } else {

                                    console.log("參數錯誤 ( Window Confirm Reteurn = " + String(confirmReteurn) + " )，只能取布爾值 true、false 之一.");

                                    // // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                    // chrome.runtime.sendMessage(
                                    //     {
                                    //         "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                    //         "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                    //         "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                    //         // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                    //         "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                    //         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                    //         "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                    //         "url": String(window.document.location.href),
                                    //         // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                    //         "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                                    //         "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                                    //         "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                    //         "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                    //         "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                                    //         "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                                    //         "data": ''  // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray);
                                    //     },  // 發送的具體數據，可以是 JSON 對象;
                                    //     // (request) => {
                                    //     //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                    //     //     // console.log(request);
                                    //     //     // response_data = JSON.parse(request["data"], function (key, value) {});
                                    //     //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                    //     //     // if (request["message"] === "background->userInterface:StopCollect") {
                                    //     //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     //     console.log('background instruction: { Stop collecting }.');
                                    //     //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                    //     //     //     console.log('{ Stand By }.');
                                    //     //     // };
                                    //     //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                    //     //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     //     console.log('Backing previous page.');
                                    //     //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                    //     //     // };
                                    //     //     // if (request["message"] === "background->userInterface:StandBy") {
                                    //     //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     //     console.log('background instruction: { StandBy }.');
                                    //     //     // };
                                    //     // }
                                    // );

                                    // // if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                    // //     window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                                    // // };
                                    // // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                    // if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                    //     window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                    //     window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    //     window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                    //     window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                    //     window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                    //     window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                    //     window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                    // };
                                    // // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                    // //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                    // // };
                                    // if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                    //     window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                    //     window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                    //     window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                    //     window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("DataServerUrlInput") !== null) {
                                    //     window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                    //     window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                    // };
                                    // if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                    //     window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                    // };

                                    // PublicVariableStartORStopCollectDataButtonClickState = true;

                                    // if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                    //     // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                    //     window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                    // };

                                    // // alert("參數錯誤 ( Window Confirm Reteurn = " + String(confirmReteurn) + " )，只能取布爾值 true、false 之一.");

                                    // return false;
                                };
                            };
                            */
                        };

                        // 判斷結果數據的保存模式（數據庫或者 Web Page 網頁）;
                        if (Data_Receptors === "Database_and_Webpage" || Data_Receptors === "Webpage") {

                            // 讀取返回數據;
                            for (let i in TemporaryFirstLevelWebCollectResultArray) {

                                /* 下面代碼將抓取到的結果追加保存到公共變量數組 PublicVariableCollectResultStoredStringArray 中; */;
                                PublicVariableCollectResultStoredStringArray.push(TemporaryFirstLevelWebCollectResultArray[i]);
                                // /* 下面代碼將抓取到的結果追加保存到臨時暫存一級頁面中的數據數組 TemporaryFirstLevelWebCollectResultArray 中，用於與對應的二級頁面中的數據整合; */;
                                // TemporaryFirstLevelWebCollectResultArray.push(TemporaryFirstLevelWebCollectResultArray[i]);

                                // 創建在當前頁展示的數據表格 <table> 的一行元素 <tr> 的 ID 號字符串;
                                let RetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                                let RetrievalResultEntryNumber = parseInt(i + 1);  // parseInt(request["Current_Second_Level_Page_Number"]);
                                // RetrievalResultId[i] = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                                RetrievalResultId.push("RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">");

                                // 創建在新打開的專門用於展示數據的頁面中的表格 <table> 的一行元素 <tr> 的 ID 號字符串;
                                let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                                let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(i + 1);  // parseInt(request["Current_Second_Level_Page_Number"]);
                                // PublicVariableResultExhibitsWebPageRetrievalResultId[i] = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                                PublicVariableResultExhibitsWebPageRetrievalResultId.push("RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">");

                            };

                            /* 下面代碼將抓取到的結果展示在網頁元素 DIV 層 ResultExhibitsDiv 中; */;
                            if ((window.document.getElementById("ResultExhibitsDiv") !== null || window.document.getElementById("ResultExhibitsDivTagTable") !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                                // let RetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                                // let RetrievalResultEntryNumber = parseInt(request["Current_Second_Level_Page_Number"]);
                                // let RetrievalResultId = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                                DisplayData(
                                    window,
                                    Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                    TemporaryFirstLevelWebCollectResultArray,
                                    "ResultExhibitsDiv",
                                    "ResultExhibitsDivTagTable",
                                    RetrievalResultId
                                );
                            };

                            /* 下面代碼將抓取到的結果展示在新打開的網頁 window 窗口 PublicVariableResultExhibitsWebPage 中; */;
                            if (PublicVariableResultExhibitsWebPage.name !== "") {
                                if ((PublicVariableResultExhibitsWebPage.document.getElementById("ResultExhibitsDiv") !== null || PublicVariableResultExhibitsWebPage.document.getElementById("ResultExhibitsDivTagTable") !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                                    // let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                                    // let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(request["Current_Second_Level_Page_Number"]);
                                    // let PublicVariableResultExhibitsWebPageRetrievalResultId = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                                    DisplayData(
                                        PublicVariableResultExhibitsWebPage,
                                        Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                        TemporaryFirstLevelWebCollectResultArray,
                                        "ResultExhibitsDiv",
                                        "ResultExhibitsDivTagTable",
                                        PublicVariableResultExhibitsWebPageRetrievalResultId
                                    );
                                    PublicVariableResultExhibitsWebPage.document.getElementById(PublicVariableResultExhibitsWebPageRetrievalResultId[parseInt(parseInt(PublicVariableResultExhibitsWebPageRetrievalResultId.length) - parseInt(1))]).scrollIntoView(false);  /* 網頁滾動條滑到 RetrievalResultId 元素的位置; */;
                                };
                            };

                        };

                        // 將抓取到的結果追加保存到臨時暫存一級頁面中的數據數組 TemporaryFirstLevelWebCollectResultArray 中，用於與對應的二級頁面中的數據整合;
                        console.log('injected script instruction: { Obtain_First_Level_Page_Data [ ' + String(request["Current_First_Level_Page_Number"]) + '--' + String((request["Total_Entry_from_First_Level_Page_to_Second_Level_Page"])) + ' ] ' + String((request["Total_Entry_from_First_Level_Page_to_Second_Level_Page"])) + ' }.');
                        // if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //     // window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取第 < " + String(request["Current_First_Level_Page_Number"]) + " > 個一級頁面中的第 < " + String(request["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]) + " > 個二級頁面中的數據. }";
                        //     window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取 < " + String(request["Current_First_Level_Page_Number"]) + "--" + String(request["Total_Entry_from_First_Level_Page_to_Second_Level_Page"]) + "--" + String(TemporaryFirstLevelWebCollectResultArray.length) + " > }";
                        // };

                        // 刷新操作頁面中的提示標簽顯示值;
                        // if (request.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(request["Current_Second_Level_Page_Number"]) < parseInt(End_Current_Second_Level_Page_In_Current_First_Level_Page)) {
                            if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁 < " + String(request["Total_Data_in_Current_First_Level_Page"]) +" > 條成. }";
                            };
                            if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = "1";  // String(parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1));
                            };
                        // } else {
                            if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁 < " + String(request["Total_Data_in_Current_First_Level_Page"]) +" > 條成，< " + String(request["Current_First_Level_Page_Number"]) + " > 頁終. }";
                            };
                        // };

                        // 刷新操作頁面中的提示標簽顯示值;
                        // if (request.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(request["Current_Second_Level_Page_Number"]) === parseInt(End_Current_Second_Level_Page_In_Current_First_Level_Page)) {
                            if (request.hasOwnProperty("Current_First_Level_Page_Number") && ( parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1) ) > parseInt(End_First_Level_Page_Number)) {
                                if (request.hasOwnProperty("Current_First_Level_Page_Number") && ( parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1) ) <= parseInt(Maximum_First_Level_Page_Number)) {
                                    if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                        window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁成，已. }";
                                    };
                                    if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1));
                                    };
                                    if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = parseInt(1);
                                    };
                                    if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                        window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value = String(parseInt(EndFirstLevelPageNumber) + parseInt(1));
                                    };
                                } else {
                                    if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                        window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁成，盡端. }";
                                    };
                                };
                            } else if (request.hasOwnProperty("Current_First_Level_Page_Number") && parseInt(request["Current_First_Level_Page_Number"]) < parseInt(End_First_Level_Page_Number)) {
                                if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1));
                                };
                            } else {};

                            // if (( parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1) ) <= parseInt(Maximum_Second_Level_Page_Number)) {
                            //     if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //         window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1));
                            //     };
                            // } else if (( parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1) ) > parseInt(Maximum_Second_Level_Page_Number) && parseInt(request["Current_First_Level_Page_Number"]) < parseInt(Maximum_First_Level_Page_Number)) {
                            //     if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //         window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = "1";
                            //     };
                            // } else if (( parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1) ) > parseInt(Maximum_Second_Level_Page_Number) && parseInt(request["Current_First_Level_Page_Number"]) >= parseInt(Maximum_First_Level_Page_Number)) {
                            //     if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            //         window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(request["Current_Second_Level_Page_Number"]);
                            //     };
                            // };
                        // };

                        // // 序貫點擊第一層級頁面的下一頁按鈕;
                        // if (parseInt(request["Current_First_Level_Page_Number"]) < parseInt(End_First_Level_Page_Number)) {
                        //     if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //         windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁成. }";
                        //     };
                        //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1));
                        //     };
                        //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                        //     };
                        //     if (Next_First_Level_Page_Button_XPath.length > 0) {
                        //         Cycle_Click_Next_Page_Sequence_Number = parseInt(Cycle_Click_Next_Page_Sequence_Number) + parseInt(1);
                        //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1)) + " > 頁. }";
                        //         };
                        //         // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                        //         chrome.runtime.sendMessage(
                        //             {
                        //                 "message": 'userInterface->background:Step_Further_Next_Page',
                        //                 "error": "",
                        //                 "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                        //                 // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                        //                 "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                        //                 "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                        //                 "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                        //                 "url": String(window.document.location.href),
                        //                 // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                        //                 "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                        //                 "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                        //                 "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                        //                 "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                        //                 "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                        //                 "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                        //                 "Configuration_Parameters": {
                        //                     "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                        //                     "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                        //                     "WebKeyWordTextboxElement_XPath": WebKeyWordTextboxElement_XPath,  // 網頁中關鍵詞輸入框元素的 XPath 值;
                        //                     "WebKeyWordQuerySubmitButtonElement_XPath": WebKeyWordQuerySubmitButtonElement_XPath,  // 網頁中關鍵詞查詢按鈕的 XPath 值;
                        //                     "TableWebPageNumberTdElement_XPath_1": TableWebPageNumberTdElement_XPath_1,  // 可采集的最大網頁序號，和當前所處網頁的序號的，元素 XPath 值;
                        //                     "RetrievalResult_XPath_1": RetrievalResult_XPath_1,  // 當前網頁中可采集數據元素的 XPath 值;
                        //                     "SecondLevelWebPageRetrievalResult_XPath": SecondLevelWebPageRetrievalResult_XPath,  // 第二層網頁中需要抓取的數據元素的 XPath 值;
                        //                     "EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1": EntryElementfromFirstLevelPagetoSecondLevelPage_XPath_1,  // 當前網頁中進入第二層級頁面的入口的網頁元素的 XPath 值字符串;
                        //                     "FromSecondLevelWebReturnFirstLevelWeb_XPath": FromSecondLevelWebReturnFirstLevelWeb_XPath,  // 從第二層網頁返回第一層網頁的按鈕元素 XPath 值;
                        //                     "TableSkipPageTextboxTdElement_XPath_1": TableSkipPageTextboxTdElement_XPath_1,  // 目標網頁中的跳頁頁碼輸入文本框的 xpath 值;
                        //                     "TableSkipPageSubmitButtonTdElement_XPath_1": TableSkipPageSubmitButtonTdElement_XPath_1,  // 目標網頁中的跳頁按鈕的 xpath 值;
                        //                     "TableNextPageSubmitButtonImgTdElement_XPath_1": TableNextPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的下一頁按鈕的 xpath 值;
                        //                     "TableBackPageSubmitButtonImgTdElement_XPath_1": TableBackPageSubmitButtonImgTdElement_XPath_1,  // 目標網頁中的上一頁按鈕的 xpath 值;
                        //                     "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageContainDataButton,  // 即將注入新創建的加載數據源網頁的新建窗口的 JavaScript 代碼;
                        //                     "TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton": TemporaryStorageNewOpenWebPageInsertFunctionCodeString_NewOpenWebPageButton,  // 即將注入新創建的用於呈現采集結果的新建窗口的 JavaScript 代碼;
                        //                     "Interval_Of_Circle_Click_value": Interval_Of_Circle_Click_value,  // 循環周期時長（單位毫秒）輸入文本框 input 的值;
                        //                     "Randomization_Relative_Interval": Randomization_Relative_Interval,  // 循環周期時長（單位毫秒）隨機化損益百分比輸入文本框 input 的值;
                        //                     "OpenResultExhibitsWebPageName": OpenResultExhibitsWebPageName  // 用於呈現采集結果的的新建窗口變量;
                        //                 },
                        //                 "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                        //             },  // 發送的具體數據，可以是 JSON 對象;
                        //             // (request) => {
                        //             //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                        //             //     // console.log(request);
                        //             //     // response_data = JSON.parse(request["data"], function (key, value) {});
                        //             //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                        //             //     // if (request["message"] === "background->userInterface:StopCollect") {
                        //             //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                        //             //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                        //             //     //     console.log('background instruction: { Stop collecting }.');
                        //             //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //             //     //     console.log('{ Stand By }.');
                        //             //     // };
                        //             //     if (request["message"] === "background->userInterface:Next_Page_Error") {
                        //             //         // console.log('injected script instruction: { ' + request["message"] + ' }.');
                        //             //         // console.log(request["error"]);
                        //             //         // console.log(request);
                        //             //         // 清除跳頁之後的延時操作;
                        //             //         for (let g = parseInt(CycleClickNextPageSequenceNumber); g <= parseInt(parseInt(EndPageNumber) - parseInt(StartPageNumber)); g++) {
                        //             //             windowHandle_1.clearTimeout(First_Level_Web_Cycle_Click_Next_Page_Delay_Read_Data_setTimeout_Array[g]);
                        //             //         };
                        //             //         /* if(!windowHandle_1.console){windowHandle_1.console = {log:function(){}};}else{windowHandle_1.console.log(CycleClickNextPageSequenceNumber);}; */;
                        //             //         windowHandle_1.clearTimeout(Skip_setTimeout);  // 清除跳頁之後的延時操作;
                        //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 跳至第 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁失敗. }";
                        //             //         };
                        //             //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        //             //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        //             //         };
                        //             //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        //             //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        //             //         };
                        //             //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        //             //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        //             //         };
                        //             //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        //             //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        //             //         };
                        //             //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        //             //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        //             //         };
                        //             //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        //             //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        //             //         };
                        //             //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        //             //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        //             //         };
                        //             //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                        //             //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        //             //         // };
                        //             //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        //             //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        //             //         };
                        //             //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        //             //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        //             //         };
                        //             //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        //             //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        //             //         };
                        //             //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        //             //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        //             //         };
                        //             //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //             //         if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                        //             //             // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        //             //             windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        //             //         };
                        //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁失敗. }";
                        //             //         };
                        //             //         alert('從當前第' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber)) + ' 個一級網頁步進至第 ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' 個一級頁面失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Next_Page_Error' + '\n' + request["error"]);
                        //             //         return false;
                        //             //     };
                        //             //     if (request["message"] === "background->userInterface:Step_Furthering_Next_Page") {
                        //             //         console.log('injected script instruction: { Step_Furthering_Next_Page [ ' + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + ' ] }.');
                        //             //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //             //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) + parseInt(1)) + " > 頁. }";
                        //             //         };
                        //             //         // console.log('injected script instruction: { ' + request["message"] + ' }.');
                        //             //         // console.log(request["error"]);
                        //             //         // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //             //         // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + request["error"]);
                        //             //         // console.log(request);
                        //             //         // return false;
                        //             //     };
                        //             // }
                        //         );
                        //     } else {
                        //         // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                        //         chrome.runtime.sendMessage(
                        //             {
                        //                 "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                        //                 "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                        //                 "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                        //                 // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                        //                 "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                        //                 "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                        //                 "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                        //                 "url": String(window.document.location.href),
                        //                 // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                        //                 "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                        //                 "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                        //                 "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                        //                 "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                        //                 "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                        //                 "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                        //                 "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                        //             },  // 發送的具體數據，可以是 JSON 對象;
                        //             // (request) => {
                        //             //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                        //             //     // console.log(request);
                        //             //     // response_data = JSON.parse(request["data"], function (key, value) {});
                        //             //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                        //             //     // if (request["message"] === "background->userInterface:StopCollect") {
                        //             //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                        //             //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                        //             //     //     console.log('background instruction: { Stop collecting }.');
                        //             //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //             //     //     console.log('{ Stand By }.');
                        //             //     // };
                        //             //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                        //             //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                        //             //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                        //             //     //     console.log('Backing previous page.');
                        //             //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                        //             //     // };
                        //             //     // if (request["message"] === "background->userInterface:StandBy") {
                        //             //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                        //             //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                        //             //     //     console.log('background instruction: { StandBy }.');
                        //             //     // };
                        //             // }
                        //         );
                        //         if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        //             windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        //             windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        //             windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        //             windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        //             windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        //             windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        //             windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        //         };
                        //         // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                        //         //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        //         // };
                        //         if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        //             windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        //             windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        //             windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        //         };
                        //         if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        //             windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        //         };
                        //         PublicVariableStartORStopCollectDataButtonClickState = true;
                        //         // if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                        //         //     // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        //         //     windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        //         // };
                        //         if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //             windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 步進至 < " + String(parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1)) + " > 個一級頁面失敗. }";
                        //         };
                        //         alert('從當前第' + String(request["Current_First_Level_Page_Number"]) + ' 個一級網頁步進至第 ' + String(parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1)) + ' 個一級頁面失敗.' + "\n" + "Next_First_Level_Page_Button_XPath.length === 0" + "\n" + "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.");
                        //     };
                        // } else if (parseInt(request["Current_First_Level_Page_Number"]) < parseInt(Maximum_First_Level_Page_Number) ) {
                        //     // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                        //     chrome.runtime.sendMessage(
                        //         {
                        //             "message": 'userInterface->background:CollectEnd',
                        //             "error": "",
                        //             "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                        //             // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                        //             "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                        //             "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                        //             "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                        //             "url": String(window.document.location.href),
                        //             // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                        //             "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                        //             "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                        //             "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                        //             "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                        //             "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                        //             "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                        //             "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                        //         },  // 發送的具體數據，可以是 JSON 對象;
                        //         // (request) => {
                        //         //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                        //         //     // console.log(request);
                        //         //     // response_data = JSON.parse(request["data"], function (key, value) {});
                        //         //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                        //         //     // if (request["message"] === "background->userInterface:StopCollect") {
                        //         //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                        //         //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                        //         //     //     console.log('background instruction: { Stop collecting }.');
                        //         //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //         //     //     console.log('{ Stand By }.');
                        //         //     // };
                        //         //     if (request["message"] === "background->userInterface:Next_Page_Error") {
                        //         //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                        //         //     // console.log(request);
                        //         //     // response_data = JSON.parse(request["data"], function (key, value) {});
                        //         //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                        //         //     if (request["message"] === "background->userInterface:StopCollect") {
                        //         //         // console.log('background instruction: { ' + request["message"] + ' }.');
                        //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                        //         //         console.log('background instruction: { Stop collecting }.');
                        //         //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //         //         console.log('{ Stand By }.');
                        //         //     };
                        //         //     if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                        //         //         // console.log('background instruction: { ' + request["message"] + ' }.');
                        //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                        //         //         console.log('Backing previous page.');
                        //         //         window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                        //         //     };
                        //         //     if (request["message"] === "background->userInterface:StandBy") {
                        //         //         // console.log('background instruction: { ' + request["message"] + ' }.');
                        //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                        //         //         console.log('background instruction: { StandBy }.');
                        //         //     };
                        //         // }
                        //     );
                        //     if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //         windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) - parseInt(1)) + " > 頁成, 終. }";
                        //     };
                        //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber));
                        //     };
                        //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(1);
                        //     };
                        //     if (windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel") !== null) {
                        //         windowHandle_1.document.getElementById("MaximumNumberOfItemsCanBeCollectedInThisPageDisplayLabel").innerText = "";
                        //     };
                        //     if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        //         windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value = String(parseInt(EndPageNumber) + parseInt(1));
                        //     };
                        //     if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        //         windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        //         windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        //         windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        //         windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        //         windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        //     };
                        //     // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                        //     //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        //     // };
                        //     if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        //         windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        //         windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        //         windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        //         windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        //     };
                        //     PublicVariableStartORStopCollectDataButtonClickState = true;
                        //     // if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                        //     //     // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        //     //     windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        //     // };
                        // } else {
                        //     // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                        //     chrome.runtime.sendMessage(
                        //         {
                        //             "message": 'userInterface->background:CollectEnd',
                        //             "error": "",
                        //             "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                        //             // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                        //             "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                        //             "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                        //             "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                        //             "url": String(window.document.location.href),
                        //             // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                        //             "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                        //             "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                        //             "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                        //             "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                        //             "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                        //             "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                        //             "data": ''  /* JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray); */
                        //         },  // 發送的具體數據，可以是 JSON 對象;
                        //         // (request) => {
                        //         //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                        //         //     // console.log(request);
                        //         //     // response_data = JSON.parse(request["data"], function (key, value) {});
                        //         //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                        //         //     // if (request["message"] === "background->userInterface:StopCollect") {
                        //         //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                        //         //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                        //         //     //     console.log('background instruction: { Stop collecting }.');
                        //         //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //         //     //     console.log('{ Stand By }.');
                        //         //     // };
                        //         //     if (request["message"] === "background->userInterface:Next_Page_Error") {
                        //         //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                        //         //     // console.log(request);
                        //         //     // response_data = JSON.parse(request["data"], function (key, value) {});
                        //         //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                        //         //     if (request["message"] === "background->userInterface:StopCollect") {
                        //         //         // console.log('background instruction: { ' + request["message"] + ' }.');
                        //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                        //         //         console.log('background instruction: { Stop collecting }.');
                        //         //         PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        //         //         console.log('{ Stand By }.');
                        //         //     };
                        //         //     if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                        //         //         // console.log('background instruction: { ' + request["message"] + ' }.');
                        //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                        //         //         console.log('Backing previous page.');
                        //         //         window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                        //         //     };
                        //         //     if (request["message"] === "background->userInterface:StandBy") {
                        //         //         // console.log('background instruction: { ' + request["message"] + ' }.');
                        //         //         // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                        //         //         console.log('background instruction: { StandBy }.');
                        //         //     };
                        //         // }
                        //     );
                        //     if (windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                        //         windowHandle_1.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(parseInt(StartPageNumber) + parseInt(CycleClickNextPageSequenceNumber) - parseInt(1)) + " > 頁成，盡. }";
                        //     };
                        //     if (windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                        //         windowHandle_1.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                        //         windowHandle_1.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                        //         windowHandle_1.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                        //         windowHandle_1.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                        //         windowHandle_1.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                        //         windowHandle_1.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                        //         windowHandle_1.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                        //     };
                        //     // if (windowHandle_1.document.getElementById("NewOpenWebPageButton") !== null) {
                        //     //     windowHandle_1.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                        //     // };
                        //     if (windowHandle_1.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                        //         windowHandle_1.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                        //         windowHandle_1.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                        //         windowHandle_1.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                        //     };
                        //     if (windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                        //         windowHandle_1.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                        //     };
                        //     PublicVariableStartORStopCollectDataButtonClickState = true;
                        //     // if (windowHandle_1.document.getElementById("StartORStopCollectDataButton") !== null) {
                        //     //     // windowHandle_1.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                        //     //     windowHandle_1.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                        //     // };
                        // };

                        // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                        // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + request["error"]);
                        // console.log(request);
                        // return false;
                    } else {};
                };
                if (request["level"] === "Second_Level_Page") {
                    // 'First_Level_Page'; 'Second_Level_Page'; 'First_and_Second_Level_Page';
                    // console.log(request["message"]);
                    // console.log(request["error"]);
                    // console.log(request["url"]);
                    // console.log(request["level"]);
                    // console.log(request["Current_First_Level_Page_Number"]);
                    // console.log(request["Current_Second_Level_Page_Number"]);
                    // console.log(request["page_number"]);
                    // // console.log(request["Total_Data_in_Current_First_Level_Page"]);
                    // console.log(request["Total_Data_in_Current_Second_Level_Page"]);
                    // console.log(request["data"]);
                    // JSON.parse(request["data"], function (key, value) {});
                    // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);

                    let TemporaryTwoLevelWebCollectResultArray = new Array();
                    TemporaryTwoLevelWebCollectResultArray = request["Data_in_Current_Second_Level_Page"];
                    // console.log(TemporaryTwoLevelWebCollectResultArray);
                    let RetrievalResultId = new Array();
                    let PublicVariableResultExhibitsWebPageRetrievalResultId = new Array();

                    let TemporaryPublicVariableCollectResultStoredStringArray = new Array();
                    // TemporaryPublicVariableCollectResultStoredStringArray = new Array();
                    for (let i in TemporaryFirstLevelWebCollectResultArray[parseInt(parseInt(request["Current_Second_Level_Page_Number"]) - parseInt(1))]) {
                        /* if (!window.console) { window.console = {log:function(){}}; } else { window.console.log(TemporaryPublicVariableCollectResultStoredStringArray.length);}; */;
                        /* alert(TemporaryPublicVariableCollectResultStoredStringArray.length); */;
                        TemporaryPublicVariableCollectResultStoredStringArray.push(TemporaryFirstLevelWebCollectResultArray[parseInt(parseInt(request["Current_Second_Level_Page_Number"]) - parseInt(1))][i]);  /* Array.push([item1 [item2 [. . . [itemN ]]]]) 將一個或多個新元素追加到數組結尾; */;
                    };
                    for (let i in TemporaryTwoLevelWebCollectResultArray) {
                        for (let j in TemporaryTwoLevelWebCollectResultArray[i]) {
                            /* if (!window.console) { window.console = {log:function(){}}; } else { window.console.log(TemporaryPublicVariableCollectResultStoredStringArray.length);}; */;
                            /* alert(TemporaryPublicVariableCollectResultStoredStringArray.length); */;
                            TemporaryPublicVariableCollectResultStoredStringArray.push(TemporaryTwoLevelWebCollectResultArray[i][j]);  /* Array.push([item1 [item2 [. . . [itemN ]]]]) 將一個或多個新元素追加到數組結尾; */;
                        };
                    };
                    // if (!window.console) { window.console = { log:function(){}}; } else { window.console.log(TemporaryPublicVariableCollectResultStoredStringArray); };

                    // 判斷結果數據的保存模式（數據庫或者 Web Page 網頁）;
                    if (Data_Receptors === "Database" || Data_Receptors === "Database_and_Webpage") {

                        if (Data_Server_Url !== "") {

                            let column_Name = [
                                "Column_1",
                                "Column_2",
                                "Column_3",
                                "Column_4",
                                "Column_5",
                                "Column_6",
                                "Column_7",
                                "Column_8",
                                "Column_9",
                                "Column_10",
                                "Column_11",
                                "Column_12"
                            ];

                            let UpLoadData = "";
                            let UpLoadData_Array = new Array();
                            for (let i in [TemporaryPublicVariableCollectResultStoredStringArray]) {
                                let tempJSON = {};
                                for (let j in [TemporaryPublicVariableCollectResultStoredStringArray][i]) {
                                    tempJSON[column_Name[j]] = String([TemporaryPublicVariableCollectResultStoredStringArray][i][j]);
                                };
                                // console.log(tempJSON);
                                UpLoadData_Array.push(tempJSON);
                            };
                            UpLoadData = JSON.stringify(UpLoadData_Array);
                            // UpLoadData_Array = JSON.parse(UpLoadData, function (key, value) {});
                            // console.log(UpLoadData);

                            // http://localhost:27016/insertMany?dbName=testWebData&dbTableName=test20220703&dbUser=admin_testWebData&dbPass=admin&Key=username:password
                            let request_Authorization = ""; // "username:password";
                            if (Data_Server_Url !== "" && Data_Server_Url.indexOf("&Key=", 0) !== -1) {
                                request_Authorization = String(Data_Server_Url.split("&Key=")[1]);
                                if (request_Authorization.indexOf("&", 0) !== -1) {
                                    request_Authorization = String(request_Authorization.split("&")[0]);
                                };
                            };
                            // console.log(request_Authorization);
                            // let request_Authorization_Base64 = "";
                            // if (request_Authorization === "") {
                            //     request_Authorization_Base64 = "Basic ";  // 'www-authenticate': 'Basic realm="domain name -> username:password"'  獲取響應頭中的"www-authenticate"參數值 response.headers["www-authenticate"];
                            // } else {
                            //     request_Authorization_Base64 = String("Basic".concat(" ", new Base64().encode(request_Authorization)));  // new Base64().decode(request_Authorization_Base64.split(" ")[1])，'www-authenticate': 'Basic realm="domain name -> username:password"'  獲取響應頭中的"www-authenticate"參數值 response.headers["www-authenticate"];
                            // };
                            // // console.log(request_Authorization_Base64);

                            use_AJAX(
                                "post",  // "get", "post", "form", "file", "ArrayBuffer", "Blob"
                                UpLoadData,
                                Data_Server_Url,
                                request_Authorization,
                                "",  // abort_button_id_string,
                                "",  // show_label_id,
                                // textarea_path_or_URL_id,
                                function (error, response) {
                                    if (error) {
                                        PublicVariableStartORStopCollectDataButtonClickState = true;  // 中止正在運行的程序
                                        console.log(error);
                                    };
                                    if (response) {
                                        // console.log(typeof(response));
                                        // console.log(response);
                                        let responseJSON = response;
                                        // let responseJSON = JSON.parse(response, function (key, value) {});
                                        // JSON.stringify(responseJSON);
                                        // console.log(responseJSON["ResponseStatus"]);
                                        // console.log(responseJSON["ResponseHeaders"]);
                                        // console.log(typeof(responseJSON["ResponseBody"]));
                                        let responseBodyJSON = JSON.parse(responseJSON["ResponseBody"]);
                                        // console.log(responseBodyJSON);
                                        let Database_say = JSON.parse(responseBodyJSON["Database_say"]);
                                        // console.log(Database_say);
                                        if (Database_say["insertedCount"] === 0 || Database_say["insertedCount"] !== [TemporaryPublicVariableCollectResultStoredStringArray].length) {
                                            PublicVariableStartORStopCollectDataButtonClickState = true;  // 中止正在運行的程序
                                            console.log(Database_say);
                                        };
                                    };
                                }
                            );
                        };

                        /*
                        if (Data_Server_Url === "") {

                            console.log("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                            if (Data_Receptors === "Database") {

                                // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                chrome.runtime.sendMessage(
                                    {
                                        "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                        "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                        "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                        // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                        "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                        "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                        "url": String(window.document.location.href),
                                        // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                        "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                                        "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                                        "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                        "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                        "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                                        "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                                        "data": ''  // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray);
                                    },  // 發送的具體數據，可以是 JSON 對象;
                                    // (request) => {
                                    //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                    //     // console.log(request);
                                    //     // response_data = JSON.parse(request["data"], function (key, value) {});
                                    //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                    //     // if (request["message"] === "background->userInterface:StopCollect") {
                                    //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     console.log('background instruction: { Stop collecting }.');
                                    //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                    //     //     console.log('{ Stand By }.');
                                    //     // };
                                    //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                    //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     console.log('Backing previous page.');
                                    //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                    //     // };
                                    //     // if (request["message"] === "background->userInterface:StandBy") {
                                    //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     console.log('background instruction: { StandBy }.');
                                    //     // };
                                    // }
                                );

                                if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                    window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                                };
                                // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                    window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                    window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                    window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                    window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                };
                                // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                // };
                                if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                    window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                    window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                    window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                    window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("DataServerUrlInput") !== null) {
                                    window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                    window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                    window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                };

                                PublicVariableStartORStopCollectDataButtonClickState = true;

                                if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                    // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                    window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                };

                                return false;
                            };

                            let confirmReteurn = confirm(
                                "傳入的用於保存結果的數據庫服務器地址參數值錯誤." + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空." + "\n" + "在數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空的情況下，將不會向數據庫服務器發送數據，結果只寫入網頁含有的表格元素中." + "\n" + "單擊 { 確定 } 按鈕將繼續運行，單擊 { 取消 } 按鈕將中止運行.",
                                "確定",
                                "取消"
                            );

                            if (confirmReteurn === true) {
                                // 鼠標左鍵單擊 { 確定 } 按鈕，程序不會中止運行，繼續執行後面的語句;
                            } else if (confirmReteurn === false) {
                                // 鼠標左鍵單擊 { 取消 } 按鈕，程序中止運行;

                                // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                chrome.runtime.sendMessage(
                                    {
                                        "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                        "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                        "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                        // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                        "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                        "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                        "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                        "url": String(window.document.location.href),
                                        // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                        "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                                        "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                                        "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                        "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                        "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                                        "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                                        "data": ''  // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray);
                                    },  // 發送的具體數據，可以是 JSON 對象;
                                    // (request) => {
                                    //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                    //     // console.log(request);
                                    //     // response_data = JSON.parse(request["data"], function (key, value) {});
                                    //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                    //     // if (request["message"] === "background->userInterface:StopCollect") {
                                    //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     console.log('background instruction: { Stop collecting }.');
                                    //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                    //     //     console.log('{ Stand By }.');
                                    //     // };
                                    //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                    //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     console.log('Backing previous page.');
                                    //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                    //     // };
                                    //     // if (request["message"] === "background->userInterface:StandBy") {
                                    //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                    //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                    //     //     console.log('background instruction: { StandBy }.');
                                    //     // };
                                    // }
                                );

                                if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                    window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                                };
                                // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                    window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                    window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                    window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                    window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                };
                                // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                // };
                                if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                    window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                    window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                    window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                    window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("DataServerUrlInput") !== null) {
                                    window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                    window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                };
                                if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                    window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                };

                                PublicVariableStartORStopCollectDataButtonClickState = true;

                                if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                    // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                    window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                };

                                return false;

                            } else {

                                console.log("參數錯誤 ( Window Confirm Reteurn = " + String(confirmReteurn) + " )，只能取布爾值 true、false 之一.");

                                // // 在自定義的用戶交互界面窗口(test.js)進程中主動向後臺頁面(background.html)進程傳遞指令;
                                // chrome.runtime.sendMessage(
                                //     {
                                //         "message": 'userInterface->background:StopCollect',  // 'injectedScript->contentScript:Next_Page_Error', // 'userInterface->background:Next_to_' + String(parseInt(CurrentFirstLevelPageNumber) + parseInt(1)) + '_Page_Error',
                                //         "error": "XPath Error:" + "\n" + "Web Next Page Element Xpath Error." + "\n" + "Function Next_First_Level_Page() Variable [ TableNextPageSubmitButtonImgTdElement_XPath ] cannot run.",
                                //         "user_interface_tab_name": "test",  // "test", 當前操作界面窗口的標籤頁的自定義名字字符串;
                                //         // "user_interface_tab_id": test_user_interface_tab_id,  // 當前標籤頁的 ID 號碼;
                                //         "ContainDataWebPageURL": ContainDataWebPageURL,  // 數據源網頁的地址;
                                //         "Open_Contain_Data_Web_Page_Name": Open_Contain_Data_Web_Page_Name,  // 用於加載數據源網頁的新建窗口變量;
                                //         "level": level,  // 'First_Level_Page', 'Second_Level_Page', 'First_and_Second_Level_Page',
                                //         "url": String(window.document.location.href),
                                //         // "page_number": String(Current_First_Level_Page_Number) + '--' + String(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // String(parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)) + '--' + String(1),  // (parseInt(StartPageNumber) + parseInt(Cycle_Click_Next_Page_Sequence_Number)), 當前第一層級網頁的頁碼號; (parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)), 當前第二層級網頁的頁碼號;
                                //         "Current_First_Level_Page_Number": parseInt(Current_First_Level_Page_Number),
                                //         "Maximum_First_Level_Page_Number": parseInt(Maximum_First_Level_Page_Number),
                                //         "Current_Second_Level_Page_Number": parseInt(Current_Second_Level_Page_Number),  // parseInt(Number_of_Current_Second_Level_Page_in_Current_First_Level_Page),  // parseInt(parseInt(Cycle_Click_Entry_Second_Level_Page_Sequence_Number) + parseInt(1)),
                                //         "Maximum_Second_Level_Page_Number": parseInt(Maximum_Second_Level_Page_Number),  // parseInt(Total_Of_Second_Level_Page_in_Current_First_Level_Page),
                                //         "Total_Entry_from_First_Level_Page_to_Second_Level_Page": parseInt(Total_Entry_from_First_Level_Page_to_Second_Level_Page),
                                //         "Total_Data_in_Current_First_Level_Page": parseInt(Total_Data_in_Current_First_Level_Page),
                                //         "data": ''  // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray);
                                //     },  // 發送的具體數據，可以是 JSON 對象;
                                //     // (request) => {
                                //     //     // console.log('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息.');
                                //     //     // console.log(request);
                                //     //     // response_data = JSON.parse(request["data"], function (key, value) {});
                                //     //     // JSON.stringify(TemporaryPublicVariableCollectResultStoredStringArray, function (key, value) {}, 4);
                                //     //     // if (request["message"] === "background->userInterface:StopCollect") {
                                //     //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                //     //     //     console.log('background instruction: { Stop collecting }.');
                                //     //     //     PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                                //     //     //     console.log('{ Stand By }.');
                                //     //     // };
                                //     //     // if (request["message"] === "background->userInterface:Step_Back_Previous_Page") {
                                //     //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                //     //     //     console.log('Backing previous page.');
                                //     //     //     window.history.back();  // 瀏覽器的 [ 回退 <- ] 鍵，跳轉到棧中的上一個頁面;
                                //     //     // };
                                //     //     // if (request["message"] === "background->userInterface:StandBy") {
                                //     //     //     // console.log('background instruction: { ' + request["message"] + ' }.');
                                //     //     //     // alert('收到來自自定義的網頁包含脚本(content-script.js)進程中傳遞過來的答復信息:\n' + request["message"]);
                                //     //     //     console.log('background instruction: { StandBy }.');
                                //     //     // };
                                //     // }
                                // );

                                // // if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                // //     window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 參數錯誤，用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空. }";
                                // // };
                                // // alert("用於保存結果的數據庫服務器地址參數值錯誤:" + "\n" + "傳入的用於保存結果的數據庫服務器地址 Data Server Url = { " + String(Data_Server_Url) + " } 爲空.");

                                // if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                                //     window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                                // };
                                // if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                //     window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                                // };
                                // if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                //     window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                                // };
                                // if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                //     window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                                // };
                                // if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                                //     window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                                // };
                                // if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                                //     window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                                // };
                                // if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                                //     window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                                // };
                                // // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                                // //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                                // // };
                                // if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                                //     window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                                // };
                                // if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                                //     window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                                // };
                                // if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                                //     window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                                // };
                                // if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                                //     window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                                // };
                                // if (window.document.getElementById("DataServerUrlInput") !== null) {
                                //     window.document.getElementById("DataServerUrlInput").removeAttribute("disabled");
                                // };
                                // if (window.document.getElementById("DataReceptorsDatabaseCheckbox") !== null) {
                                //     window.document.getElementById("DataReceptorsDatabaseCheckbox").removeAttribute("disabled");
                                // };
                                // if (window.document.getElementById("DataReceptorsWebpageCheckbox") !== null) {
                                //     window.document.getElementById("DataReceptorsWebpageCheckbox").removeAttribute("disabled");
                                // };

                                // PublicVariableStartORStopCollectDataButtonClickState = true;

                                // if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                                //     // window.document.getElementById("StartORStopCollectDataButton").removeAttribute("disabled");
                                //     window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data";
                                // };

                                // // alert("參數錯誤 ( Window Confirm Reteurn = " + String(confirmReteurn) + " )，只能取布爾值 true、false 之一.");

                                // return false;
                            };
                        };
                        */
                    };

                    // 判斷結果數據的保存模式（數據庫或者 Web Page 網頁）;
                    if (Data_Receptors === "Database_and_Webpage" || Data_Receptors === "Webpage") {

                        // // 創建在當前頁展示的數據表格 <table> 的一行元素 <tr> 的 ID 號字符串;
                        // let RetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                        // let RetrievalResultEntryNumber = parseInt(request["Current_Second_Level_Page_Number"]);
                        // // RetrievalResultId[i] = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                        // RetrievalResultId.push("RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">");

                        // // 創建在新打開的專門用於展示數據的頁面中的表格 <table> 的一行元素 <tr> 的 ID 號字符串;
                        // let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                        // let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(request["Current_Second_Level_Page_Number"]);
                        // // PublicVariableResultExhibitsWebPageRetrievalResultId[i] = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                        // PublicVariableResultExhibitsWebPageRetrievalResultId.push("RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">");

                        /* 下面代碼將抓取到的結果追加保存到公共變量數組 PublicVariableCollectResultStoredStringArray 中; */;
                        PublicVariableCollectResultStoredStringArray.push(TemporaryPublicVariableCollectResultStoredStringArray);

                        /* 下面代碼將抓取到的結果展示在網頁元素 DIV 層 ResultExhibitsDiv 中; */;
                        if ((window.document.getElementById("ResultExhibitsDiv") !== null || window.document.getElementById("ResultExhibitsDivTagTable") !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                            let RetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                            let RetrievalResultEntryNumber = parseInt(request["Current_Second_Level_Page_Number"]);
                            // RetrievalResultId = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                            RetrievalResultId[0] = "RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">";
                            // RetrievalResultId.push("RetrievalResult<" + String(RetrievalResultPageNumber) + ">page<" + String(RetrievalResultEntryNumber) + ">");
                            DisplayData(
                                window,
                                Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                [TemporaryPublicVariableCollectResultStoredStringArray],
                                "ResultExhibitsDiv",
                                "ResultExhibitsDivTagTable",
                                RetrievalResultId
                            );
                        };

                        /* 下面代碼將抓取到的結果展示在新打開的網頁 window 窗口 PublicVariableResultExhibitsWebPage 中; */;
                        if (PublicVariableResultExhibitsWebPage.name !== "") {
                            if ((PublicVariableResultExhibitsWebPage.document.getElementById("ResultExhibitsDiv") !== null || PublicVariableResultExhibitsWebPage.document.getElementById("ResultExhibitsDivTagTable") !== null) && (DisplayData !== null || DisplayData !== "") && Object.prototype.toString.call(DisplayData).toLowerCase() === '[object function]') {
                                let PublicVariableResultExhibitsWebPageRetrievalResultPageNumber = parseInt(request["Current_First_Level_Page_Number"]);
                                let PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber = parseInt(request["Current_Second_Level_Page_Number"]);
                                // PublicVariableResultExhibitsWebPageRetrievalResultId = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                                PublicVariableResultExhibitsWebPageRetrievalResultId[0] = "RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">";
                                // PublicVariableResultExhibitsWebPageRetrievalResultId.push("RetrievalResult<" + String(PublicVariableResultExhibitsWebPageRetrievalResultPageNumber) + ">page<" + String(PublicVariableResultExhibitsWebPageRetrievalResultEntryNumber) + ">");
                                DisplayData(
                                    PublicVariableResultExhibitsWebPage,
                                    Result_Display_Container_Radio_value,  /* "table", "canvas-datagrid", root@localhost:~# npm install canvas-datagrid --registry=https://registry.npm.taobao.org , script src="dist/canvas-datagrid.js", script src="https://unpkg.com/canvas-datagrid"; */
                                    [TemporaryPublicVariableCollectResultStoredStringArray],
                                    "ResultExhibitsDiv",
                                    "ResultExhibitsDivTagTable",
                                    PublicVariableResultExhibitsWebPageRetrievalResultId
                                );
                                PublicVariableResultExhibitsWebPage.document.getElementById(PublicVariableResultExhibitsWebPageRetrievalResultId[0]).scrollIntoView(false);  /* 網頁滾動條滑到 RetrievalResultId 元素的位置; */;
                            };
                        };
                    };

                    console.log('injected script instruction: { Obtain_Second_Level_Page_Data [ ' + String(request["Current_First_Level_Page_Number"]) + '--' + String(request["Current_Second_Level_Page_Number"]) + ' ] ' + String(TemporaryFirstLevelWebCollectResultArray.length) + ' }.');
                    // if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                    //     // window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取第 < " + String(request["Current_First_Level_Page_Number"]) + " > 個一級頁面中的第 < " + String(request["Current_Second_Level_Page_Number"]) + " > 個二級頁面中的數據. }";
                    //     window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ 讀取 < " + String(request["Current_First_Level_Page_Number"]) + "--" + String(request["Current_Second_Level_Page_Number"]) + "--" + String(TemporaryFirstLevelWebCollectResultArray.length) + " > }";
                    // };

                    // 刷新操作頁面中的提示標簽顯示值;
                    if (request.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(request["Current_Second_Level_Page_Number"]) < parseInt(End_Current_Second_Level_Page_In_Current_First_Level_Page)) {
                        if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁 < " + String(request["Current_Second_Level_Page_Number"]) +" > 條成. }";
                        };
                        if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                            window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1));
                        };
                    } else {
                        if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                            window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁 < " + String(request["Current_Second_Level_Page_Number"]) +" > 條成，< " + String(request["Current_First_Level_Page_Number"]) + " > 頁終. }";
                        };
                    };

                    // 刷新操作頁面中的提示標簽顯示值;
                    if (request.hasOwnProperty("Current_Second_Level_Page_Number") && parseInt(request["Current_Second_Level_Page_Number"]) === parseInt(End_Current_Second_Level_Page_In_Current_First_Level_Page)) {
                        if (request.hasOwnProperty("Current_First_Level_Page_Number") && ( parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1) ) > parseInt(End_First_Level_Page_Number)) {
                            if (request.hasOwnProperty("Current_First_Level_Page_Number") && ( parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1) ) <= parseInt(Maximum_First_Level_Page_Number)) {
                                if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                    window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁成，已. }";
                                };
                                if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1));
                                };
                                if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = parseInt(1);
                                };
                                if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                                    window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").value = String(parseInt(EndFirstLevelPageNumber) + parseInt(1));
                                };
                            } else {
                                if (window.document.getElementById("DataCollectStatusLabelTwoLabel") !== null) {
                                    window.document.getElementById("DataCollectStatusLabelTwoLabel").innerText = "{ < " + String(request["Current_First_Level_Page_Number"]) + " > 頁成，盡端. }";
                                };
                            };
                        } else if (request.hasOwnProperty("Current_First_Level_Page_Number") && parseInt(request["Current_First_Level_Page_Number"]) < parseInt(End_First_Level_Page_Number)) {
                            if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                                window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").value = String(parseInt(request["Current_First_Level_Page_Number"]) + parseInt(1));
                            };
                        } else {};

                        if (( parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1) ) <= parseInt(Maximum_Second_Level_Page_Number)) {
                            if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1));
                            };
                        } else if (( parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1) ) > parseInt(Maximum_Second_Level_Page_Number) && parseInt(request["Current_First_Level_Page_Number"]) < parseInt(Maximum_First_Level_Page_Number)) {
                            if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = "1";
                            };
                        } else if (( parseInt(request["Current_Second_Level_Page_Number"]) + parseInt(1) ) > parseInt(Maximum_Second_Level_Page_Number) && parseInt(request["Current_First_Level_Page_Number"]) >= parseInt(Maximum_First_Level_Page_Number)) {
                            if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                                window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").value = String(request["Current_Second_Level_Page_Number"]);
                            };
                        };
                    };

                    // PublicVariableStartORStopCollectDataButtonClickState = true;  // 用於記錄「啓動按鈕」的點擊狀態的變量;
                    // alert('收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的答復信息:\n' + request["error"]);
                    // console.log(request);
                    // return false;
                };
            };

            if (request["message"] === "background->userInterface:Input_Start_First_Level_Page_Number_Error" || request["message"] === "background->userInterface:Input_End_First_Level_Page_Number_Error" || request["message"] === "background->userInterface:Input_Start_Second_Level_Page_Number_Error" || request["message"] === "background->userInterface:Input_End_Second_Level_Page_Number_Error" || request["message"] === "background->userInterface:Skip_Error" || request["message"] === "background->userInterface:Next_Page_Error" || request["message"] === "background->userInterface:Back_Page_Error" || request["message"] === "background->userInterface:from_First_Level_Page_to_Second_Level_Page_Error" || request["message"] === "background->userInterface:from_Second_Level_Page_return_First_Level_Page_Error" || request["message"] === "background->userInterface:Extract_Page_Number_Error") {

                /* 更改按鈕狀態和標志 */;
                PublicVariableStartORStopCollectDataButtonClickState = true;
                // PublicVariableStartORStopCollectDataButtonClickState = !PublicVariableStartORStopCollectDataButtonClickState;
                // if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                //     switch(PublicVariableStartORStopCollectDataButtonClickState) {
                //         case true: window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data"; break;
                //         case false: window.document.getElementById("StartORStopCollectDataButton").innerText = "Stop Collect Data"; break;
                //         default: alert("Start OR Stop Collect Data Button" + "\n" + "Function StartORStopCollectData() Variable { PublicVariableStartORStopCollectDataButtonClickState } Error !" + "\n" + PublicVariableStartORStopCollectDataButtonClickState);
                //     };
                // };
                // if (PublicVariableStartORStopCollectDataButtonClickState) {

                //     if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                //         window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                //         window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                //         window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                //         window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                //     };
                //     // if (window.document.getElementById("QueryKeyWordInputTextBoxInput") !== null) {
                //     //     window.document.getElementById("QueryKeyWordInputTextBoxInput").removeAttribute("disabled");
                //     // };
                //     if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                //         window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                //         window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                //         window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                //     };
                //     // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                //     //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                //     // };
                //     if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                //         window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                //         window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                //         window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                //         window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                //     };
                // };

                alert('當前第 ' + String(request["Current_First_Level_Page_Number"]) + ' 個一級網頁返回錯誤.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + request["error"] + '\n' + '.');
            };

            if (request["message"] === "background->userInterface:StopCollect" || request["message"] === "background->userInterface:CollectEnd") {

                /* 更改按鈕狀態和標志 */;
                PublicVariableStartORStopCollectDataButtonClickState = true;
                // PublicVariableStartORStopCollectDataButtonClickState = !PublicVariableStartORStopCollectDataButtonClickState;
                // if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                //     switch(PublicVariableStartORStopCollectDataButtonClickState) {
                //         case true: window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data"; break;
                //         case false: window.document.getElementById("StartORStopCollectDataButton").innerText = "Stop Collect Data"; break;
                //         default: alert("Start OR Stop Collect Data Button" + "\n" + "Function StartORStopCollectData() Variable { PublicVariableStartORStopCollectDataButtonClickState } Error !" + "\n" + PublicVariableStartORStopCollectDataButtonClickState);
                //     };
                // };
                // if (PublicVariableStartORStopCollectDataButtonClickState) {

                //     if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                //         window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                //         window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                //         window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                //         window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                //         window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                //         window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                //         window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                //     };
                //     // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                //     //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                //     // };
                //     if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                //         window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                //         window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                //         window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                //         window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                //     };
                // };

                // alert('當前第 ' + String(request["Current_First_Level_Page_Number"]) + ' 個一級網頁返回停止運行信息.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + request["error"] + '\n' + '.');
            };

            if (request["message"] === "background->userInterface:Obtain_First_Level_Page_Data_Error") {

                /* 更改按鈕狀態和標志 */;
                PublicVariableStartORStopCollectDataButtonClickState = true;
                // PublicVariableStartORStopCollectDataButtonClickState = !PublicVariableStartORStopCollectDataButtonClickState;
                // if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                //     switch(PublicVariableStartORStopCollectDataButtonClickState) {
                //         case true: window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data"; break;
                //         case false: window.document.getElementById("StartORStopCollectDataButton").innerText = "Stop Collect Data"; break;
                //         default: alert("Start OR Stop Collect Data Button" + "\n" + "Function StartORStopCollectData() Variable { PublicVariableStartORStopCollectDataButtonClickState } Error !" + "\n" + PublicVariableStartORStopCollectDataButtonClickState);
                //     };
                // };
                // if (PublicVariableStartORStopCollectDataButtonClickState) {

                //     if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                //         window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                //         window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                //         window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                //         window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                //         window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                //         window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                //         window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                //     };
                //     // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                //     //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                //     // };
                //     if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                //         window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                //         window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                //         window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                //         window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                //     };
                // };

                alert('讀取當前第 ' + String(request["Current_First_Level_Page_Number"]) + ' 個一級網頁中的數據失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Obtain_First_Level_Page_Data_Error' + '\n' + request["error"] + '\n' + '.');

            };

            if (request["message"] === "background->userInterface:Obtain_Second_Level_Page_Data_Error") {

                /* 更改按鈕狀態和標志 */;
                PublicVariableStartORStopCollectDataButtonClickState = true;
                // PublicVariableStartORStopCollectDataButtonClickState = !PublicVariableStartORStopCollectDataButtonClickState;
                // if (window.document.getElementById("StartORStopCollectDataButton") !== null) {
                //     switch(PublicVariableStartORStopCollectDataButtonClickState) {
                //         case true: window.document.getElementById("StartORStopCollectDataButton").innerText = "Start Collect Data"; break;
                //         case false: window.document.getElementById("StartORStopCollectDataButton").innerText = "Stop Collect Data"; break;
                //         default: alert("Start OR Stop Collect Data Button" + "\n" + "Function StartORStopCollectData() Variable { PublicVariableStartORStopCollectDataButtonClickState } Error !" + "\n" + PublicVariableStartORStopCollectDataButtonClickState);
                //     };
                // };
                // if (PublicVariableStartORStopCollectDataButtonClickState) {

                //     if (window.document.getElementById("NewOpenWebPageContainDataButton") !== null) {
                //         window.document.getElementById("NewOpenWebPageContainDataButton").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput") !== null) {
                //         window.document.getElementById("CollectDataStartPageNumberInputTextBoxInput").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput") !== null) {
                //         window.document.getElementById("CollectDataStartPageStartEntryNumberInputTextBoxInput").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput") !== null) {
                //         window.document.getElementById("CollectDataEndPageNumberInputTextBoxInput").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("QueryKeyWordSubmitButton") !== null) {
                //         window.document.getElementById("QueryKeyWordSubmitButton").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton") !== null) {
                //         window.document.getElementById("ExtractCanbeCollectedWebPageNumberButton").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton") !== null) {
                //         window.document.getElementById("StoredCollectResultFromHardDiskToMemoryButton").removeAttribute("disabled");
                //     };
                //     // if (window.document.getElementById("NewOpenWebPageButton") !== null) {
                //     //     window.document.getElementById("NewOpenWebPageButton").removeAttribute("disabled");
                //     // };
                //     if (window.document.getElementById("DataSourcePageLevel1Radio") !== null) {
                //         window.document.getElementById("DataSourcePageLevel1Radio").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("DataSourcePageLevel2Radio") !== null) {
                //         window.document.getElementById("DataSourcePageLevel2Radio").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("ResultDisplayContainerTableRadio") !== null) {
                //         window.document.getElementById("ResultDisplayContainerTableRadio").removeAttribute("disabled");
                //     };
                //     if (window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio") !== null) {
                //         window.document.getElementById("ResultDisplayContainerCanvasDatagridRadio").removeAttribute("disabled");
                //     };
                // };

                alert('讀取當前第 ' + String(request["Current_First_Level_Page_Number"]) + ' 個一級網頁中的第 ' + String(request["Current_Second_Level_Page_Number"]) + ' 個二級網頁數據失敗.' + '\n' + '收到來自自定義的網頁插入脚本(injected-script.js)進程中傳遞過來的指令信息:' + '\n' + 'Obtain_Second_Level_Page_Data_Error' + '\n' + request["error"] + '\n' + '.');
            };
        };
    }
);
